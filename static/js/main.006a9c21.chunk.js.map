{"version":3,"sources":["serviceWorker.ts","constants/theme.ts","hooks/useDebounce.ts","hooks/useIdle.ts","hooks/useP5.ts","components/generic/Flex.ts","components/generic/Misc.ts","utils/misc/checkForMismatchedSize.ts","sketches/PsychedelicSpiral/PsychedelicSpiral.variables.ts","factories/PerlinNoise/PerlinNoise.ts","sketches/PsychedelicSpiral/PsychedelicSpiral.sketch.ts","utils/data/state.ts","hooks/useUpdateP5.ts","components/menu/MenuWrapper/MenuWrapper.provider.ts","components/menu/IconMenu/StandardIconMenu/StandardIconMenu.styled.ts","components/menu/IconMenu/IconMenu.styled.ts","constants/strings.ts","components/menu/IconMenu/Presets/Presets.styled.ts","components/menu/IconMenu/Presets/Preset/Preset.styled.ts","components/menu/IconMenu/Presets/Preset/Preset.tsx","components/menu/IconMenu/Presets/Presets.tsx","components/menu/IconMenu/IconMenu.tsx","components/menu/IconMenu/StandardIconMenu/StandardIconMenu.tsx","components/menu/MenuWrapper/MenuWrapper.tsx","hooks/useUpdateIfChanged.ts","components/menu/MenuSlider/MenuSlider.tsx","constants/numbers.ts","components/menu/BottomMenu/BottomMenu.styled.ts","components/menu/BottomMenu/BottomMenu.tsx","sketches/PsychedelicSpiral/PsychedelicSpiral.menu.tsx","sketches/PsychedelicSpiral/PsychedelicSpiral.tsx","utils/data/vectors.ts","sketches/PerlinField/PerlinField.variables.ts","utils/menu/formatting.ts","sketches/PerlinField/PerlinField.menu.tsx","sketches/PerlinField/PerlinField.tsx","sketches/PerlinField/PerlinField.sketch.ts","sketches/Epicycloid/Epicycloid.variables.ts","utils/data/values.ts","sketches/Epicycloid/Epicycloid.sketch.ts","components/menu/MenuCheckbox/MenuCheckbox.tsx","components/menu/ColorPicker/ColorPicker.tsx","sketches/Epicycloid/Epicycloid.menu.tsx","sketches/Epicycloid/Epicycloid.tsx","sketches/RandomWalk/RandomWalk.variables.ts","sketches/RandomWalk/RandomWalk.menu.tsx","sketches/RandomWalk/RandomWalk.tsx","sketches/RandomWalk/RandomWalk.sketch.ts","sketches/PerlinFlow/PerlinFlow.variables.ts","constants/colors.ts","factories/Particle/Particle.ts","utils/drawing/colors.ts","sketches/PerlinFlow/PerlinFlow.utils.ts","sketches/PerlinFlow/PerlinFlow.sketch.ts","sketches/PerlinFlow/menu-sections/PerlinFlowParticleMenu.tsx","sketches/PerlinFlow/menu-sections/PerlinFlowCanvasMenu.tsx","sketches/PerlinFlow/menu-sections/PerlinFlowNoiseMenu.tsx","components/menu/MenuTabs/MenuTabs.styled.ts","components/menu/MenuTabs/MenuTabs.tsx","sketches/PerlinFlow/PerlinFlow.menu.tsx","sketches/PerlinFlow/PerlinFlow.tsx","factories/Building/Building.utils.ts","factories/Building/Building.ts","sketches/Cityscape/Cityscape.util.ts","sketches/Cityscape/Cityscape.variables.ts","types/p5.ts","sketches/Cityscape/Cityscape.sketch.ts","utils/drawing/gradients.ts","sketches/Cityscape/menu-sections/CityscapeBuildingMenu.tsx","sketches/Cityscape/menu-sections/CityscapeColorMenu.tsx","sketches/Cityscape/menu-sections/CityscapeStarsMenu.tsx","sketches/Cityscape/Cityscape.menu.tsx","sketches/Cityscape/Cityscape.tsx","sketches/QuantumHarmonics/QuantumHarmonics.variables.ts","sketches/QuantumHarmonics/QuantumHarmonics.sketch.ts","sketches/QuantumHarmonics/QuantumHarmonics.menu.tsx","sketches/QuantumHarmonics/QuantumHarmonics.tsx","sketches/RecursiveDivisions/RecursiveDivisions.variables.ts","sketches/RecursiveDivisions/RecursiveDivisions.sketch.ts","sketches/RecursiveDivisions/RecursiveDivisions.menu.tsx","sketches/RecursiveDivisions/RecursiveDivisions.tsx","sketches/MoireLattices/MoireLattices.variables.ts","sketches/MoireLattices/MoireLattices.sketch.ts","sketches/MoireLattices/MoireLattices.menu.tsx","sketches/MoireLattices/MoireLattices.tsx","sketches/KaleidoscopeCaustics/KaleidoscopeCaustics.variables.ts","sketches/KaleidoscopeCaustics/KaleidoscopeCaustics.sketch.ts","sketches/KaleidoscopeCaustics/KaleidoscopeCaustics.menu.tsx","sketches/KaleidoscopeCaustics/KaleidoscopeCaustics.tsx","constants/sketches.tsx","components/common/Home/Home.tsx","Routes.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","theme","createTheme","palette","type","primary","teal","secondary","main","overrides","MuiCssBaseline","html","overflow","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useIdle","msToIdle","isIdle","setIsIdle","timeout","useRef","handleMouseMove","useCallback","current","document","addEventListener","removeEventListener","useP5","sketch","ref","p5Instance","setP5Instance","p5","undefined","remove","FlexColumn","styled","fullwidth","display","flexDirection","width","FlexRow","FlexRowPadded","justifyContent","alignItems","spacing","marginRight","MenuItemWrapper","SketchDiv","checkForMismatchedSize","p","windowHeight","height","windowWidth","resizeCanvas","initialPsychedelicSpiralVars","spiralSpeed","particleCount","colorShiftSpeed","morphingIntensity","trailLength","kaleidoscopeSegments","pulsationIntensity","fractalDepth","clearScreen","refresh","setup","DEFAULT_NOISE_OFFSET","random","createPerlinNoise","noiseIncrement","noiseOffset","getNoise","x","y","z","noise","this","getPsychedelicSpiralSketch","variables","centerX","centerY","particles","trails","noiseHandlers","spiral","color","morph","pulse","globalTime","drawBackground","background","fill","noStroke","rect","drawFractalSpiral","depth","radius","strokeWeight","i","angle","TWO_PI","x1","cos","y1","sin","hue","stroke","line","createCanvas","colorMode","HSB","length","push","vx","vy","life","maxLife","size","spiralAngle","spiralRadius","initParticles","windowResized","draw","distanceFromCenter","dist","wave","alpha","map","noFill","ellipse","drawPsychedelicGrid","forEach","particle","index","spiralNoise","morphNoise","radiusModulation","currentRadius","targetX","targetY","colorNoise","shift","trail","nextTrail","drawTrails","pulseNoise","translate","segments","angleStep","rotate","pop","drawKaleidoscope","blendMode","SCREEN","useGenericReducer","initialVars","reducer","useMemo","state","action","payload","useReducer","dispatch","set","Object","keys","reduce","varKey","toString","createGenericActions","setState","newState","useUpdateP5","refreshOnChange","MenuWrapperContext","createContext","useMenuWrapperContext","ctx","useContext","Error","StandardIconMenuSeparator","IconMenuContainer","paddingRight","paddingLeft","top","position","IconWrapper","IconButton","backgroundColor","default","boxShadow","shadows","darken","lighten","PresetsContainer","withStyles","createStyles","list","padding","Menu","PresetContainer","MenuItem","textAlign","Preset","preset","handlePresetClick","onClick","name","Presets","presets","show","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","Bookmarks","transformOrigin","horizontal","vertical","open","onClose","key","IconMenu","children","Fade","in","Box","icons","SCREENSHOT","CameraAlt","REFRESH","Refresh","BACK","ArrowBack","PLAY","PlayArrow","PAUSE","Pause","StandardIconMenu","disableLoopControl","initialLoopControl","isLooping","setIsLooping","history","useHistory","onRefresh","onSave","save","onPlay","onPause","onBack","loop","noLoop","MenuWrapper","debounceDelay","disableMenu","updateLocalStates","setUpdateLocalStates","refreshAnimation","vars","store","Provider","useUpdateLocalStateWhenChanged","currentVal","setLocalVal","MenuSlider","setValue","min","max","labelFormat","disabled","tooltip","title","step","localValue","setLocalValue","debouncedLocalValue","handleChange","e","val","Number","Tooltip","Typography","variant","Slider","valueLabelFormat","onChange","getAriaValueText","valueLabelDisplay","style","transition","BottomMenuContainer","bottom","MenuCard","borderRadius","opacity","BottomMenu","PsychedelicSpiralMenu","PsychedelicSpiral","getVectorFromAngle","sx","sy","distance","createVector","Math","relativelyPointVectorToCenter","vector","forceVector","copy","percentageFromCenterX","round","percentageFromCenterY","centerVector","positionVector","distX","toCenterAngle","asin","shortDistX","shortDistY","toCenterVector","toCenterDiffY","toCenterDiffX","pow","initialPerlinFieldVars","vectorPadding","angleVariation","perlinXIncrementScale","perlinYIncrementScale","perlinZIncrementScale","formatPixelValue","formatPercentValue","formatTimesValue","sliderParams","PerlinFieldMenu","PerlinField","initOffset","zOff","frameRate","xOff","yOff","x2","y2","PI","initialEpicycloidVars","isAutoplaying","totalVertices","strokeOpacity","autoplaySpeed","strokeWidth","strokeColor","bgColor","factor","smoothTransitionTo","valueTo","smoothPercent","incrementRandomlyMinMaxed","variance","epicycloidSketch","smoothFactor","smoothRadius","smoothTotalVertices","getVector","opacityColor","setAlpha","circle","startPos","endPos","MenuCheckbox","setChecked","checked","Checkbox","Input","WebkitAppearance","cursor","outline","border","ColorPicker","setColor","localColor","setLocalColor","debouncedLocalColor","target","EpicycloidMenu","Epicycloid","initialRandomWalkVars","posVariance","colorVariance","speed","RandomWalkMenu","RandomWalk","r","g","b","setupPosition","Array","initialPerlinFlowVars","swapSidesAtBorder","particleColor","viewForceVectors","particleOpacity","particleAmount","randomColor","avoidBorders","fillTrails","particleSize","maxVelocity","mass","floaters","plasma","cosmic","perlinFlowPresets","randomlyVaryColor","varyMax","varyAmount","lerpColor","splice","particleColorObj","substr","randomLocation","acceleration","velocity","maxTrailLength","prevPoints","prevLocation","lifeTick","update","add","limit","mult","equals","beginShape","curveVertex","point","abs","endShape","applyForce","force","forceBuffer","div","createParticle","getPerlinFlowSketch","seed","refreshScreen","forceVectors","frameCount","col","floor","initialForceVector","sub","getForceVectors","row","maxCol","maxRow","Vector","updateParticles","PerlinFlowParticleMenu","PerlinFlowCanvasMenu","PerlinFlowNoiseMenu","StyledTab","Tab","selected","text","borderTopLeftRadius","MenuTabsWrapper","left","MenuTabs","labels","selectedIndex","setSelectedIndex","label","marginTop","PerlinFlowMenu","PerlinFlow","drawWindows","xStart","yStart","windowSize","windowSpacing","buildingColor","windowColor","offLightChance","isSpacingX","isSpacingY","windowAmountX","windowAmountY","extraXPaddingToCenter","extraYPaddingToCenter","_","yi","xi","createRowOfRandomBuildings","rowIndex","rowAmount","maxXIncrement","currentStartX","isAddingBuilding","newBuilding","createRandomBuilding","startX","startY","increaseMaxHeightAmount","bottomSkyColor","minXIncrement","fogIncrement","maxHeight","minHeight","minWidth","maxWidth","newMaxHeight","xIncrement","windowVariation","lerpToColor","lerpColorAmount","darkenSideWindowAmount","sidePerspectiveRatio","darkenSideAmount","sidePerspectiveWidth","faceStartX","faceWidth","sidePerspectiveColor","createBuilding","initialCityscapeVars","starAmount","minStarSize","maxStarSize","topSkyColor","starColor","cityscapePresets","isP5InstanceInitialized","getCityscapeSketch","pixelDensity","w","h","c1","c2","axis","inter","c","gradientRect","maxY","maxX","d","drawStars","matrix","createAllRowsOfRandomBuildings","flat","CityscapeBuildingMenu","CityscapeColorMenu","CityscapeStarsMenu","CityscapeMenu","Cityscape","initialQuantumHarmonicsVars","numSources","sourceFrequency","sourceAmplitude","phaseOffset","colorCycleSpeed","waveDecay","interferenceThreshold","backgroundAlpha","timeScale","rotationSpeed","showWaveSources","showInterferenceField","isDragging","draggedSourceIndex","getQuantumHarmonicsSketch","waveSources","time","colorOffset","waveFieldResolution","waveField","fieldWidth","fieldHeight","initializeWaveSources","frequency","amplitude","phase","calculateWaveField","ceil","currentTime","worldX","worldY","totalAmplitude","source","waveValue","exp","normalizedAmplitude","saturation","brightness","threshold","drawInterferenceField","isHovered","mouseX","mouseY","isDraggedSource","pulseSize","coreOpacity","ripplePhase","rippleRadius","rippleOpacity","mousePressed","sourceIndex","getSourceIndexAt","mouseDragged","mouseReleased","QuantumHarmonicsMenu","QuantumHarmonics","initialRecursiveDivisionsVars","maxDepth","minSize","splitChance","solidFillChance","patternChance","fillColor","accentColor","lineSpacing","dotSize","noiseScale","getRecursiveDivisionsSketch","rectangles","generate","randomSeed","subdivide","pattern","shouldFill","patterns","filled","aspectRatio","splitPoint","drawRectangles","drawingContext","beginPath","clip","gridSpacing","restore","drawPattern","RecursiveDivisionsMenu","RecursiveDivisions","initialMoireLatticesVars","lineWidth","angleOffsetDeg","layerCount","rotationSpeedDeg","animate","fgColor","DEG2RAD","moireLatticesSketch","timeAngle","drawLayer","angleRad","half","sqrt","deltaTime","offsetRad","MoireLatticesMenu","v","MoireLattices","initialKaleidoscopeCausticsVars","wedgeCount","warp","sharpness","timeSpeed","resolution","hueBase","hueRange","gain","decay","prismBurst","deepOcean","emberMirror","kaleidoscopeCausticsPresets","fbm","oct","amp","freq","sum","kaleidoscopeCausticsSketch","t","cachedWedgeAngle","cosD","sinD","noiseDetail","sampleTextureHSB","s","n","sharp","wx","wy","caustic","a","cx","cy","maxR","hypot","wedgeAngle","delta","ensureDeltaTable","arcPoints","baseTheta","cos0","sin0","ptsX","ptsY","H","S","B","idx","cD","sD","tex","rot","flip","scale","mkSlider","sliders","KaleidoscopeCausticsMenu","handlers","slice","KaleidoscopeCaustics","sketches","slug","component","description","tags","SketchCard","Card","transform","ThumbnailFallback","common","white","fontSize","fontWeight","TagChip","Chip","margin","SketchThumbnail","imageError","setImageError","thumbnailPath","process","split","word","join","CardMedia","image","onError","objectFit","Home","overflowY","marginBottom","gutterBottom","Grid","container","item","xs","sm","md","to","textDecoration","CardContent","flexGrow","paragraph","tag","tagIndex","Routes","basename","exact","path","enter","App","domNode","getElementById","ReactDOMClient","render","ThemeProvider","CssBaseline","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.006a9c21.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createTheme } from \"@material-ui/core\";\nimport { teal } from \"@material-ui/core/colors\";\n\nexport const theme = createTheme({\n  palette: {\n    type: \"dark\",\n    primary: teal,\n    secondary: {\n      main: \"#004d40\",\n    },\n  },\n  overrides: {\n    MuiCssBaseline: {\n      \"@global\": {\n        html: {\n          overflow: \"hidden\",\n        },\n      },\n    },\n  },\n});\n","import { useEffect, useState } from \"react\";\n\nexport const useDebounce = (value: any, delay: number) => {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n};\n","import { useState, useRef, useEffect, useCallback } from \"react\";\n\nexport const useIdle = (msToIdle: number) => {\n  const [isIdle, setIsIdle] = useState(true);\n  const timeout = useRef<number>();\n\n  // set idle timeout on mouse move\n  const handleMouseMove = useCallback(() => {\n    if (timeout) {\n      clearTimeout(timeout.current);\n    }\n    timeout.current = window.setTimeout(() => {\n      setIsIdle(true);\n    }, msToIdle);\n\n    if (isIdle) {\n      setIsIdle(false);\n    }\n  }, [isIdle, msToIdle]);\n\n  // handle / cleanup listeners\n  useEffect(() => {\n    document.addEventListener(\"mousemove\", handleMouseMove);\n\n    return () => {\n      clearTimeout(timeout.current);\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n    };\n  }, [isIdle, msToIdle, handleMouseMove]);\n\n  return isIdle;\n};\n","import { SketchInstance } from \"types/p5\";\nimport { useRef, useEffect, useState } from \"react\";\nimport p5 from \"p5\";\n\nexport const useP5 = (sketch: SketchInstance) => {\n  const ref = useRef<HTMLDivElement | null>(null);\n  const [p5Instance, setP5Instance] = useState<p5 | null>(null);\n\n  useEffect(() => {\n    if (!p5Instance) {\n      setP5Instance(new p5(sketch, ref.current || undefined));\n    }\n\n    return () => {\n      p5Instance && p5Instance.remove();\n    };\n  }, [sketch, p5Instance]);\n\n  return { ref, p5Instance };\n};\n","import { styled, Theme } from \"@material-ui/core\";\n\ntype Props = {\n  theme: Theme;\n  fullwidth?: number;\n};\n\nexport const FlexColumn = styled(\"div\")(({ fullwidth }: Props) => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  ...(fullwidth && { width: \"100%\" }),\n}));\n\nexport const FlexRow = styled(\"div\")(({ fullwidth }: Props) => ({\n  display: \"flex\",\n  ...(fullwidth && { width: \"100%\" }),\n}));\n\nexport const FlexRowCentered = styled(\"div\")(({ fullwidth }: Props) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  ...(fullwidth && { width: \"100%\" }),\n}));\n\nexport const FlexRowBetween = styled(\"div\")(({ fullwidth }: Props) => ({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  ...(fullwidth && { width: \"100%\" }),\n}));\n\nexport const FlexRowAround = styled(\"div\")(({ fullwidth }: Props) => ({\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  ...(fullwidth && { width: \"100%\" }),\n}));\n\nexport const FlexRowPadded = styled(\"div\")(\n  ({ fullwidth, theme, spacing }: Props & { spacing?: number }) => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& > *:not(:last-child)\": {\n      marginRight: theme.spacing(spacing || 2),\n    },\n    ...(fullwidth && { width: \"100%\" }),\n  })\n);\n","import { styled } from \"@material-ui/core\";\nimport { FlexRow } from \"./Flex\";\n\nexport const MenuItemWrapper = styled(FlexRow)(({ theme }) => ({\n  \"& > div:not(:last-child)\": {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport const SketchDiv = styled(\"div\")({});\n","import p5 from \"p5\";\n\nexport const checkForMismatchedSize = (p: p5) => {\n  if (p.windowHeight !== p.height || p.windowWidth !== p.width) {\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\n  }\n};\n","import { P5Defaults } from \"types/p5\";\nimport p5 from \"p5\";\n\nexport interface PsychedelicSpiralVars extends P5Defaults {\n  spiralSpeed: number;\n  particleCount: number;\n  colorShiftSpeed: number;\n  morphingIntensity: number;\n  trailLength: number;\n  kaleidoscopeSegments: number;\n  pulsationIntensity: number;\n  fractalDepth: number;\n  clearScreen: boolean;\n}\n\nexport const initialPsychedelicSpiralVars: PsychedelicSpiralVars = {\n  spiralSpeed: 0.02,\n  particleCount: 150,\n  colorShiftSpeed: 0.005,\n  morphingIntensity: 50,\n  trailLength: 20,\n  kaleidoscopeSegments: 8,\n  pulsationIntensity: 30,\n  fractalDepth: 3,\n  clearScreen: false,\n  refresh: (p: p5) => {\n    p.setup();\n  },\n};\n","import p5 from \"p5\";\n\nconst p = new p5(() => {});\nconst MAX_RANDOM_SEED = 1000000;\nconst DEFAULT_NOISE_INCREMENT = 0.01;\nconst DEFAULT_NOISE_OFFSET = p.random(0, MAX_RANDOM_SEED);\n\ntype Props = {\n  noiseIncrement?: number;\n  noiseOffset?: number;\n};\n\nexport type PerlinNoise = {\n  noiseIncrement: number;\n  noiseOffset: number;\n  getNoise: (x?: number, y?: number, z?: number) => number;\n};\n\nexport function createPerlinNoise({\n  noiseIncrement,\n  noiseOffset,\n}: Props): PerlinNoise {\n  return {\n    noiseOffset: noiseOffset || DEFAULT_NOISE_OFFSET,\n    noiseIncrement: noiseIncrement || DEFAULT_NOISE_INCREMENT,\n    getNoise(x, y, z) {\n      return p.noise(\n        this.noiseOffset + (x || 0) * this.noiseIncrement,\n        this.noiseOffset + (y || 0) * this.noiseIncrement,\n        this.noiseOffset + (z || 0) * this.noiseIncrement\n      );\n    },\n  };\n}\n","import { checkForMismatchedSize } from \"utils/misc/checkForMismatchedSize\";\nimport { P5Instance } from \"types/p5\";\nimport {\n  initialPsychedelicSpiralVars,\n  PsychedelicSpiralVars,\n} from \"./PsychedelicSpiral.variables\";\nimport { createPerlinNoise } from \"factories/PerlinNoise/PerlinNoise\";\n\ninterface Particle {\n  x: number;\n  y: number;\n  vx: number;\n  vy: number;\n  life: number;\n  maxLife: number;\n  hue: number;\n  size: number;\n  spiralAngle: number;\n  spiralRadius: number;\n}\n\nexport const getPsychedelicSpiralSketch = () => {\n  return (p: P5Instance<PsychedelicSpiralVars>) => {\n    p.variables = initialPsychedelicSpiralVars;\n    const particles: Particle[] = [];\n    const trails: Array<{ x: number; y: number; hue: number; alpha: number }> =\n      [];\n\n    const noiseHandlers = {\n      spiral: createPerlinNoise({ noiseIncrement: 0.002 }),\n      color: createPerlinNoise({ noiseIncrement: 0.003 }),\n      morph: createPerlinNoise({ noiseIncrement: 0.001 }),\n      pulse: createPerlinNoise({ noiseIncrement: 0.008 }),\n    };\n\n    let centerX: number;\n    let centerY: number;\n    let globalTime = 0;\n\n    const initParticles = () => {\n      particles.length = 0;\n      for (let i = 0; i < (p.variables?.particleCount || 150); i++) {\n        particles.push({\n          x: centerX,\n          y: centerY,\n          vx: p.random(-2, 2),\n          vy: p.random(-2, 2),\n          life: p.random(50, 200),\n          maxLife: p.random(50, 200),\n          hue: p.random(360),\n          size: p.random(2, 8),\n          spiralAngle: p.random(p.TWO_PI),\n          spiralRadius: p.random(50, 200),\n        });\n      }\n    };\n\n    const drawBackground = () => {\n      if (p.variables?.clearScreen) {\n        p.background(0, 20);\n      } else {\n        // Create trail effect with fading background\n        p.fill(0, 15);\n        p.noStroke();\n        p.rect(0, 0, p.width, p.height);\n      }\n    };\n\n    const updateParticles = () => {\n      if (!p.variables) return;\n\n      particles.forEach((particle, index) => {\n        // Spiral motion with noise\n        const spiralNoise = noiseHandlers.spiral.getNoise(\n          particle.x * 0.01,\n          particle.y * 0.01,\n          globalTime\n        );\n\n        particle.spiralAngle +=\n          (p.variables?.spiralSpeed || 0.02) * (1 + spiralNoise);\n        const morphNoise = noiseHandlers.morph.getNoise(\n          particle.spiralAngle,\n          globalTime,\n          index * 0.1\n        );\n\n        const radiusModulation =\n          p.sin(globalTime * 0.1 + index * 0.5) *\n          (p.variables?.morphingIntensity || 50);\n        const currentRadius =\n          particle.spiralRadius + radiusModulation + morphNoise * 50;\n\n        const targetX = centerX + p.cos(particle.spiralAngle) * currentRadius;\n        const targetY = centerY + p.sin(particle.spiralAngle) * currentRadius;\n\n        // Add organic movement\n        particle.vx += (targetX - particle.x) * 0.02;\n        particle.vy += (targetY - particle.y) * 0.02;\n\n        // Apply velocity with damping\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n        particle.vx *= 0.95;\n        particle.vy *= 0.95;\n\n        // Color shifting\n        const colorNoise = noiseHandlers.color.getNoise(\n          particle.x * 0.005,\n          particle.y * 0.005,\n          globalTime\n        );\n        particle.hue =\n          (particle.hue +\n            (p.variables?.colorShiftSpeed || 0.005) * 360 +\n            colorNoise * 50) %\n          360;\n\n        // Life cycle\n        particle.life--;\n        if (particle.life <= 0) {\n          // Respawn particle\n          particle.x = centerX + p.random(-50, 50);\n          particle.y = centerY + p.random(-50, 50);\n          particle.life = particle.maxLife;\n          particle.spiralAngle = p.random(p.TWO_PI);\n          particle.spiralRadius = p.random(50, 300);\n        }\n\n        // Add to trails\n        if (\n          trails.length >\n          (p.variables?.trailLength || 20) * particles.length\n        ) {\n          trails.shift();\n        }\n        trails.push({\n          x: particle.x,\n          y: particle.y,\n          hue: particle.hue,\n          alpha: p.map(particle.life, 0, particle.maxLife, 0, 255),\n        });\n      });\n    };\n\n    const drawKaleidoscope = () => {\n      if (!p.variables) return;\n\n      p.push();\n      p.translate(centerX, centerY);\n\n      const segments = p.variables?.kaleidoscopeSegments || 8;\n      const angleStep = p.TWO_PI / segments;\n\n      for (let i = 0; i < segments; i++) {\n        p.push();\n        p.rotate(i * angleStep);\n\n        // Draw fractal spirals\n        drawFractalSpiral(0, 0, p.variables?.fractalDepth || 3);\n\n        p.pop();\n      }\n      p.pop();\n    };\n\n    const drawFractalSpiral = (x: number, y: number, depth: number) => {\n      if (depth <= 0 || !p.variables) return;\n\n      const pulseNoise = noiseHandlers.pulse.getNoise(\n        x * 0.01,\n        y * 0.01,\n        globalTime\n      );\n      const radius = 20 + pulseNoise * (p.variables?.pulsationIntensity || 30);\n      const segments = 12;\n\n      p.strokeWeight(depth * 0.5);\n\n      for (let i = 0; i < segments; i++) {\n        const angle = (i / segments) * p.TWO_PI + globalTime;\n        const x1 = x + p.cos(angle) * radius;\n        const y1 = y + p.sin(angle) * radius;\n\n        const hue = (globalTime * 50 + i * 30 + depth * 60) % 360;\n        p.stroke(hue, 80, 90, 150);\n\n        p.line(x, y, x1, y1);\n\n        // Recursive call\n        if (depth > 1) {\n          drawFractalSpiral(x1, y1, depth - 1);\n        }\n      }\n    };\n\n    const drawParticles = () => {\n      p.noStroke();\n\n      particles.forEach((particle) => {\n        const alpha = p.map(particle.life, 0, particle.maxLife, 0, 255);\n        p.fill(particle.hue, 70, 95, alpha);\n\n        const pulseNoise = noiseHandlers.pulse.getNoise(\n          particle.x * 0.01,\n          particle.y * 0.01,\n          globalTime\n        );\n        const size = particle.size + pulseNoise * 5;\n\n        p.ellipse(particle.x, particle.y, size, size);\n      });\n    };\n\n    const drawTrails = () => {\n      p.strokeWeight(1);\n\n      for (let i = 0; i < trails.length - 1; i++) {\n        const trail = trails[i];\n        const nextTrail = trails[i + 1];\n\n        const alpha = p.map(i, 0, trails.length, 0, trail.alpha * 0.3);\n        p.stroke(trail.hue, 60, 85, alpha);\n        p.line(trail.x, trail.y, nextTrail.x, nextTrail.y);\n      }\n    };\n\n    const drawPsychedelicGrid = () => {\n      if (!p.variables) return;\n\n      p.strokeWeight(0.5);\n      const gridSize = 40;\n\n      for (let x = 0; x < p.width; x += gridSize) {\n        for (let y = 0; y < p.height; y += gridSize) {\n          const noise = noiseHandlers.morph.getNoise(\n            x * 0.01,\n            y * 0.01,\n            globalTime\n          );\n          const distanceFromCenter = p.dist(x, y, centerX, centerY);\n          const wave = p.sin(distanceFromCenter * 0.02 + globalTime * 2);\n\n          const hue = (noise * 360 + globalTime * 30) % 360;\n          const alpha =\n            p.map(wave, -1, 1, 0, 100) *\n            p.map(distanceFromCenter, 0, 400, 1, 0);\n\n          p.stroke(hue, 50, 80, alpha);\n\n          const size = 5 + noise * 10 + wave * 5;\n          p.noFill();\n          p.ellipse(x, y, size, size);\n        }\n      }\n    };\n\n    p.setup = () => {\n      p.createCanvas(p.windowWidth, p.windowHeight);\n      p.colorMode(p.HSB, 360, 100, 100, 255);\n      centerX = p.width / 2;\n      centerY = p.height / 2;\n      initParticles();\n      drawBackground();\n    };\n\n    p.windowResized = () => {\n      p.resizeCanvas(p.windowWidth, p.windowHeight);\n      centerX = p.width / 2;\n      centerY = p.height / 2;\n      drawBackground();\n    };\n\n    p.draw = () => {\n      checkForMismatchedSize(p);\n      globalTime += 0.02;\n\n      drawBackground();\n\n      // Draw psychedelic grid background\n      drawPsychedelicGrid();\n\n      // Update and draw particles\n      updateParticles();\n      drawTrails();\n      drawParticles();\n\n      // Draw kaleidoscope overlay\n      drawKaleidoscope();\n\n      // Add some screen-wide effects\n      p.push();\n      p.blendMode(p.SCREEN);\n      p.fill(0, 0, 5, 10);\n      p.noStroke();\n      p.ellipse(centerX, centerY, p.width * 2, p.height * 2);\n      p.pop();\n    };\n  };\n};\n","import { useMemo, useReducer, Reducer } from \"react\";\n\n// abstract dispatch action\ntype Action<Vars> = {\n  type: keyof Vars | \"all\";\n  payload: Vars[keyof Vars] | Vars;\n};\n\n// Generic reducer for cleaning up state declarations\nexport const createGenericReducer =\n  <Vars>() =>\n  (state: Vars, action: Action<Vars>) => {\n    const { type, payload } = action;\n    if (type === \"all\") {\n      return { ...state, ...payload } as any;\n    } else {\n      return { ...state, [type]: payload } as any; // brute-forcing until properly typed indexes become a thing\n    }\n  };\n\n// Creates an object of generic dispatch events given the variable keys\nexport const createGenericActions = <Vars>(\n  initialVars: Vars,\n  dispatch: React.Dispatch<Action<Vars>>\n) =>\n  // create a set object that holds the dispatch events\n  (Object.keys(initialVars as any) as Array<keyof Vars>).reduce<\n    Record<keyof Vars, Function>\n  >((set: Record<string, Function>, varKey) => {\n    set[varKey.toString()] = (value: Vars[keyof Vars]) =>\n      dispatch({ type: varKey, payload: value });\n    return set as Record<keyof Vars, Function>; // enforce types for vscode autocompletion\n  }, {} as Record<keyof Vars, Function>); // \"\"\n\n// abstracts away generic reducer production when given initial variables\nexport const useGenericReducer = <Vars>(initialVars: Vars) => {\n  // standard reducer\n  const reducer = useMemo(() => createGenericReducer<Vars>(), []);\n  const [state, dispatch] = useReducer<Reducer<Vars, Action<Vars>>>(reducer, {\n    ...initialVars,\n  });\n\n  // generic dispatch shortcuts with some typescript autocompletion\n  const set = useMemo(\n    () => createGenericActions<Vars>(initialVars, dispatch),\n    [initialVars]\n  );\n  const setState = (newState: Vars) =>\n    dispatch({ type: \"all\", payload: newState });\n\n  return { state, dispatch, set, setState };\n};\n","import { P5Defaults, P5Instance } from \"types/p5\";\nimport { useEffect } from \"react\";\n\n/**\n * Hook that live-updates the p5 instance with new variables whenever the menu state changes\n * @param p5Instance\n * @param state\n */\nexport const useUpdateP5 = <T extends P5Defaults>(\n  p5Instance: P5Instance<T> | null,\n  state: T,\n  refreshOnChange?: boolean\n) => {\n  useEffect(() => {\n    if (p5Instance) {\n      if (refreshOnChange) {\n        p5Instance.variables?.refresh(p5Instance);\n      }\n      p5Instance.variables = { ...p5Instance.variables, ...state };\n    }\n  }, [p5Instance, state, refreshOnChange]);\n};\n","import { PresetDatum } from \"../IconMenu/Presets/Presets.types\";\nimport { createContext, useContext } from \"react\";\nimport { P5Instance } from \"types/p5\";\n\nexport type MenuWrapperContext = {\n  handlePresetClick: (preset: PresetDatum<any>) => void;\n  p5Instance: P5Instance<any> | null;\n  setUpdateLocalStates: Function;\n  refreshAnimation: () => void;\n  updateLocalStates: boolean;\n  show: boolean;\n  debounceDelay?: number;\n};\n\nexport const MenuWrapperContext = createContext<MenuWrapperContext | undefined>(\n  undefined\n);\n\nexport const useMenuWrapperContext = () => {\n  const ctx = useContext(MenuWrapperContext);\n  if (!ctx) {\n    throw new Error(\n      \"useMenuWrapperContext must be used from within a MenuWrapperContext Provider\"\n    );\n  }\n  return ctx;\n};\n","import { styled } from \"@material-ui/core\";\n\nexport const StandardIconMenuSeparator = styled(\"div\")({\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  display: \"flex\",\n  width: \"100%\",\n});\n","import { styled, IconButton, darken, lighten } from \"@material-ui/core\";\nimport { BACKGROUND_HEX_OPACITY } from \"constants/strings\";\n\nexport const IconMenuContainer = styled(\"div\")(({ theme }) => ({\n  paddingRight: theme.spacing(5),\n  paddingLeft: theme.spacing(5),\n  top: theme.spacing(5),\n  position: \"absolute\",\n  display: \"flex\",\n  width: \"100%\",\n}));\n\nexport const IconWrapper = styled(IconButton)(({ theme }) => ({\n  backgroundColor: theme.palette.background.default + BACKGROUND_HEX_OPACITY,\n  boxShadow: theme.shadows[2],\n  \"&:hover\": {\n    backgroundColor: darken(\n      theme.palette.background.default + BACKGROUND_HEX_OPACITY,\n      0.3\n    ),\n  },\n  \"&:active\": {\n    backgroundColor: lighten(\n      theme.palette.background.default + BACKGROUND_HEX_OPACITY,\n      0.1\n    ),\n  },\n}));\n","/**\n * For common strings used across the projects\n */\n\n// hex opacity for menu backgrounds\nexport const BACKGROUND_HEX_OPACITY = \"DD\";\n","import { createStyles, Menu, styled, withStyles } from \"@material-ui/core\";\n\nexport const PresetsContainer = styled(\n  withStyles((theme) =>\n    createStyles({\n      list: {\n        padding: 0,\n      },\n    })\n  )(Menu)\n)({});\n","import { BACKGROUND_HEX_OPACITY } from \"constants/strings\";\nimport { MenuItem, styled } from \"@material-ui/core\";\n\nexport const PresetContainer = styled(MenuItem)(({ theme }) => ({\n  backgroundColor: theme.palette.background.default + BACKGROUND_HEX_OPACITY,\n  padding: theme.spacing(1),\n  textAlign: \"right\",\n  width: \"200px\",\n}));\n","import { useMenuWrapperContext } from \"components/menu/MenuWrapper/MenuWrapper.provider\";\nimport { PresetContainer } from \"./Preset.styled\";\nimport { PresetDatum } from \"../Presets.types\";\nimport React from \"react\";\n\ntype Props = {\n  preset: PresetDatum<object>;\n};\n\nexport const Preset = ({ preset }: Props) => {\n  const { handlePresetClick } = useMenuWrapperContext();\n  const handleClick = () => handlePresetClick && handlePresetClick(preset);\n\n  return <PresetContainer onClick={handleClick}>{preset.name}</PresetContainer>;\n};\n","import { useMenuWrapperContext } from \"components/menu/MenuWrapper/MenuWrapper.provider\";\nimport React, { Fragment, MouseEvent, useCallback, useState } from \"react\";\nimport { PresetsContainer } from \"./Presets.styled\";\nimport { IconWrapper } from \"../IconMenu.styled\";\nimport { Bookmarks } from \"@material-ui/icons\";\nimport { PresetData } from \"./Presets.types\";\nimport { Preset } from \"./Preset/Preset\";\n\ntype Props = { presets: PresetData<object> };\n\nexport const Presets = ({ presets }: Props) => {\n  const { show } = useMenuWrapperContext();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleClick = useCallback((event: MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event?.currentTarget);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n\n  return (\n    <Fragment>\n      <IconWrapper onClick={handleClick}>\n        <Bookmarks color=\"primary\" />\n      </IconWrapper>\n      <PresetsContainer\n        transformOrigin={{ horizontal: \"center\", vertical: -60 }}\n        open={Boolean(anchorEl && show)}\n        onClose={handleClose}\n        anchorEl={anchorEl}\n      >\n        {presets.map((preset, index) => (\n          <Preset key={index} preset={preset} />\n        ))}\n      </PresetsContainer>\n    </Fragment>\n  );\n};\n","import { IconMenuContainer } from \"./IconMenu.styled\";\nimport { Box, Fade } from \"@material-ui/core\";\nimport React from \"react\";\n\ntype Props = {\n  show: boolean;\n  children: JSX.Element;\n};\n\nexport const IconMenu = ({ show, children }: Props) => (\n  <IconMenuContainer>\n    <Fade in={show}>\n      <Box width=\"100%\">{children}</Box>\n    </Fade>\n  </IconMenuContainer>\n);\n","import { useMenuWrapperContext } from \"components/menu/MenuWrapper/MenuWrapper.provider\";\nimport { StandardIconMenuSeparator } from \"./StandardIconMenu.styled\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { FlexRowPadded } from \"components/generic/Flex\";\nimport { PresetData } from \"../Presets/Presets.types\";\nimport { IconWrapper } from \"../IconMenu.styled\";\nimport { useHistory } from \"react-router-dom\";\nimport { Presets } from \"../Presets/Presets\";\nimport { IconMenu } from \"../IconMenu\";\nimport {\n  ArrowBack,\n  CameraAlt,\n  PlayArrow,\n  Refresh,\n  Pause,\n} from \"@material-ui/icons/\";\n\ntype Props = {\n  disableLoopControl?: boolean;\n  initialLoopControl?: boolean;\n  presets?: PresetData<object>;\n};\n\nconst icons = {\n  SCREENSHOT: <CameraAlt color=\"primary\" />,\n  REFRESH: <Refresh color=\"primary\" />,\n  BACK: <ArrowBack color=\"primary\" />,\n  PLAY: <PlayArrow color=\"primary\" />,\n  PAUSE: <Pause color=\"primary\" />,\n};\n\n/**\n *  Prebuilt icon menu for standard use case\n */\nexport const StandardIconMenu = ({\n  disableLoopControl,\n  initialLoopControl,\n  presets,\n}: Props) => {\n  const [isLooping, setIsLooping] = useState(initialLoopControl);\n  const { show, p5Instance } = useMenuWrapperContext();\n  const history = useHistory();\n\n  const onRefresh = useCallback(\n    () => p5Instance?.variables?.refresh(p5Instance),\n    [p5Instance]\n  );\n\n  const onSave = useCallback(() => p5Instance?.save(\"image\"), [p5Instance]);\n\n  const onPlay = useCallback(() => {\n    setIsLooping(true);\n  }, []);\n\n  const onPause = useCallback(() => {\n    setIsLooping(false);\n  }, []);\n\n  const onBack = useCallback(() => {\n    history.push(\"/\");\n  }, [history]);\n\n  useEffect(() => {\n    // Re-enable looping when loop control is disabled\n    if (disableLoopControl) {\n      p5Instance?.loop();\n    } else {\n      // Control the instance looping if loop control isnt disabled\n      if (!isLooping) {\n        p5Instance?.noLoop();\n      } else {\n        p5Instance?.loop();\n      }\n    }\n  }, [isLooping, disableLoopControl, p5Instance]);\n\n  return (\n    <IconMenu show={show}>\n      <StandardIconMenuSeparator>\n        <FlexRowPadded>\n          <IconWrapper onClick={onBack}>{icons.BACK}</IconWrapper>\n          {!disableLoopControl && (\n            <IconWrapper onClick={isLooping ? onPause : onPlay}>\n              {isLooping ? icons.PAUSE : icons.PLAY}\n            </IconWrapper>\n          )}\n          <IconWrapper onClick={onRefresh}>{icons.REFRESH}</IconWrapper>\n          <IconWrapper onClick={onSave}>{icons.SCREENSHOT}</IconWrapper>\n        </FlexRowPadded>\n        {presets ? <Presets presets={presets} /> : null}\n      </StandardIconMenuSeparator>\n    </IconMenu>\n  );\n};\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport { P5Instance } from \"types/p5\";\n\nimport { PresetDatum } from \"../IconMenu/Presets/Presets.types\";\nimport { MenuWrapperContext } from \"./MenuWrapper.provider\";\n\ntype Props = {\n  debounceDelay?: number;\n  disableMenu?: boolean;\n  children: JSX.Element | JSX.Element[];\n  p5Instance: P5Instance<any> | null;\n  setState: (newState: any) => void;\n  show: boolean;\n};\n\nconst REFRESH_DELAY = 75;\n\nexport const MenuWrapper = ({\n  debounceDelay,\n  disableMenu,\n  p5Instance,\n  setState,\n  children,\n  show,\n}: Props) => {\n  const [updateLocalStates, setUpdateLocalStates] = useState(false);\n\n  useEffect(() => {\n    if (updateLocalStates) {\n      setUpdateLocalStates(false);\n    }\n  }, [updateLocalStates]);\n\n  const refreshAnimation = useCallback(\n    () =>\n      setTimeout(\n        () => p5Instance?.variables?.refresh(p5Instance),\n        REFRESH_DELAY\n      ), // timeout removes a bug\n    [p5Instance]\n  );\n\n  const handlePresetClick = useCallback(\n    (preset: PresetDatum<any>) => {\n      setState(preset.vars);\n      setUpdateLocalStates(true);\n      refreshAnimation();\n    },\n    [refreshAnimation, setState]\n  );\n\n  const store: MenuWrapperContext = useMemo(\n    () => ({\n      setUpdateLocalStates,\n      updateLocalStates,\n      handlePresetClick,\n      refreshAnimation,\n      debounceDelay,\n      p5Instance,\n      show,\n    }),\n    [\n      handlePresetClick,\n      updateLocalStates,\n      refreshAnimation,\n      debounceDelay,\n      p5Instance,\n      show,\n    ]\n  );\n\n  if (disableMenu) {\n    return null;\n  }\n\n  return (\n    <MenuWrapperContext.Provider value={store}>\n      {children}\n    </MenuWrapperContext.Provider>\n  );\n};\n","import { useMenuWrapperContext } from \"components/menu/MenuWrapper/MenuWrapper.provider\";\nimport { useEffect } from \"react\";\n\nexport const useUpdateLocalStateWhenChanged = (\n  currentVal: any,\n  setLocalVal: Function\n) => {\n  const { updateLocalStates } = useMenuWrapperContext();\n\n  useEffect(() => {\n    if (updateLocalStates) {\n      setLocalVal(currentVal);\n    }\n  }, [currentVal, setLocalVal, updateLocalStates]);\n};\n","import { useMenuWrapperContext } from \"../MenuWrapper/MenuWrapper.provider\";\nimport { Slider, Tooltip, Typography } from \"@material-ui/core\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { DEFAULT_DEBOUNCE_DELAY } from \"constants/numbers\";\nimport { FlexColumn } from \"components/generic\";\nimport { useDebounce } from \"hooks\";\nimport { useUpdateLocalStateWhenChanged } from \"hooks/useUpdateIfChanged\";\n\ntype Props = {\n  setValue: Function;\n  value: number;\n  min: number;\n  max: number;\n  labelFormat?: string | ((value: number, index: number) => string) | undefined;\n  disabled?: boolean;\n  refresh?: boolean;\n  tooltip?: string;\n  title?: string;\n  step?: number;\n};\n\nexport const MenuSlider = ({\n  setValue,\n  value,\n  min,\n  max,\n  labelFormat,\n  disabled,\n  refresh,\n  tooltip,\n  title,\n  step,\n}: Props) => {\n  const [localValue, setLocalValue] = useState(value);\n  const { refreshAnimation, debounceDelay } = useMenuWrapperContext();\n  const debouncedLocalValue = useDebounce(\n    localValue,\n    debounceDelay || DEFAULT_DEBOUNCE_DELAY\n  );\n\n  useEffect(() => {\n    if (debouncedLocalValue !== value) {\n      setValue(debouncedLocalValue);\n      if (refresh) {\n        refreshAnimation();\n      }\n    }\n  }, [debouncedLocalValue, setValue, refresh, refreshAnimation, value]);\n\n  useUpdateLocalStateWhenChanged(value, setLocalValue);\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<{}>, val: number | number[]) => {\n      if (val !== value) {\n        setLocalValue(Number(val));\n      }\n    },\n    [value]\n  );\n\n  return (\n    <Tooltip title={tooltip || \"\"}>\n      <FlexColumn fullwidth={1}>\n        {title && <Typography variant=\"caption\">{title}</Typography>}\n        <Slider\n          disabled={disabled}\n          valueLabelFormat={labelFormat}\n          value={typeof localValue === \"number\" ? localValue : 0}\n          onChange={handleChange}\n          getAriaValueText={(val) => val.toString()}\n          valueLabelDisplay=\"auto\"\n          step={step || 1}\n          min={min}\n          color={localValue === debouncedLocalValue ? \"primary\" : \"secondary\"} // shows a different color if still debouncing\n          style={{ transition: \"0.3s\" }}\n          max={max}\n        />\n      </FlexColumn>\n    </Tooltip>\n  );\n};\n","/**\n * Material-ui transition timeout\n */\nexport const TRANSITION_DELAY = 500;\n\n/**\n * Debounce delay for changing state values\n */\nexport const DEFAULT_DEBOUNCE_DELAY = 5; // only a tiny debounce is needed to counterract laggy super-fast changing inputs\n\n/**\n * Time for menu to disappear upon no mouse movement\n */\nexport const TIME_TO_IDLE = 2000;\n\n/**\n * Default percentage increment for smoothing value input\n */\nexport const DEFAULT_SMOOTHING_PCNT = 20;\n","import { BACKGROUND_HEX_OPACITY } from \"constants/strings\";\nimport { styled } from \"@material-ui/core\";\n\nexport const BottomMenuContainer = styled(\"div\")(({ theme }) => ({\n  paddingRight: theme.spacing(5),\n  paddingLeft: theme.spacing(5),\n  bottom: theme.spacing(5),\n  justifyContent: \"center\",\n  position: \"absolute\",\n  display: \"flex\",\n  width: \"100%\",\n}));\n\nexport const MenuCard = styled(\"div\")(({ theme }) => ({\n  backgroundColor: theme.palette.background.default + BACKGROUND_HEX_OPACITY,\n  borderRadius: theme.spacing(2),\n  boxShadow: theme.shadows[2],\n  padding: theme.spacing(2),\n  position: \"relative\",\n  width: \"100%\",\n  opacity: 0.3,\n}));\n","import { useMenuWrapperContext } from \"../MenuWrapper/MenuWrapper.provider\";\nimport { MenuCard, BottomMenuContainer } from \"./BottomMenu.styled\";\nimport { Fade } from \"@material-ui/core\";\nimport React from \"react\";\n\ntype Props = {\n  children: JSX.Element;\n};\n\nexport const BottomMenu = ({ children }: Props) => {\n  const { show } = useMenuWrapperContext();\n  return (\n    <BottomMenuContainer>\n      <Fade in={show}>\n        <MenuCard>{children}</MenuCard>\n      </Fade>\n    </BottomMenuContainer>\n  );\n};\n","import React, { Fragment, useCallback } from \"react\";\nimport { useGenericReducer } from \"utils/data/state\";\nimport { TIME_TO_IDLE } from \"constants/numbers\";\nimport { useUpdateP5 } from \"hooks/useUpdateP5\";\nimport { P5Instance } from \"types/p5\";\nimport { useIdle } from \"hooks\";\n\nimport { StandardIconMenu } from \"components/menu/IconMenu/StandardIconMenu/StandardIconMenu\";\nimport { MenuWrapper } from \"components/menu/MenuWrapper/MenuWrapper\";\nimport { MenuSlider } from \"components/menu/MenuSlider/MenuSlider\";\nimport { BottomMenu } from \"components/menu/BottomMenu\";\nimport { MenuItemWrapper } from \"components/generic\";\n\nimport {\n  initialPsychedelicSpiralVars,\n  PsychedelicSpiralVars,\n} from \"./PsychedelicSpiral.variables\";\n\ntype Props = {\n  p5Instance: P5Instance<PsychedelicSpiralVars> | null;\n};\n\nexport const PsychedelicSpiralMenu = ({ p5Instance }: Props) => {\n  const isIdle = useIdle(TIME_TO_IDLE);\n  const { state, set, setState } = useGenericReducer<PsychedelicSpiralVars>(\n    initialPsychedelicSpiralVars\n  );\n\n  useUpdateP5<PsychedelicSpiralVars>(p5Instance, state);\n\n  return (\n    <MenuWrapper setState={setState} p5Instance={p5Instance} show={!isIdle}>\n      <StandardIconMenu initialLoopControl />\n      <BottomMenu>\n        <Fragment>\n          <MenuItemWrapper>\n            <MenuSlider\n              title=\"Spiral Speed\"\n              value={state.spiralSpeed}\n              setValue={useCallback(\n                (val: number) => set.spiralSpeed(val),\n                [set]\n              )}\n              min={0.001}\n              max={0.1}\n              step={0.001}\n            />\n\n            <MenuSlider\n              title=\"Particle Count\"\n              value={state.particleCount}\n              setValue={useCallback(\n                (val: number) => set.particleCount(val),\n                [set]\n              )}\n              min={50}\n              max={500}\n              step={10}\n            />\n\n            <MenuSlider\n              title=\"Color Shift Speed\"\n              value={state.colorShiftSpeed}\n              setValue={useCallback(\n                (val: number) => set.colorShiftSpeed(val),\n                [set]\n              )}\n              min={0.001}\n              max={0.02}\n              step={0.001}\n            />\n          </MenuItemWrapper>\n\n          <MenuItemWrapper>\n            <MenuSlider\n              title=\"Morphing Intensity\"\n              value={state.morphingIntensity}\n              setValue={useCallback(\n                (val: number) => set.morphingIntensity(val),\n                [set]\n              )}\n              min={0}\n              max={150}\n              step={5}\n            />\n\n            <MenuSlider\n              title=\"Trail Length\"\n              value={state.trailLength}\n              setValue={useCallback(\n                (val: number) => set.trailLength(val),\n                [set]\n              )}\n              min={5}\n              max={100}\n              step={1}\n            />\n\n            <MenuSlider\n              title=\"Kaleidoscope Segments\"\n              value={state.kaleidoscopeSegments}\n              setValue={useCallback(\n                (val: number) => set.kaleidoscopeSegments(val),\n                [set]\n              )}\n              min={3}\n              max={16}\n              step={1}\n            />\n          </MenuItemWrapper>\n          <MenuItemWrapper>\n            <MenuSlider\n              title=\"Pulsation Intensity\"\n              value={state.pulsationIntensity}\n              setValue={useCallback(\n                (val: number) => set.pulsationIntensity(val),\n                [set]\n              )}\n              min={0}\n              max={100}\n              step={5}\n            />\n\n            <MenuSlider\n              title=\"Fractal Depth\"\n              value={state.fractalDepth}\n              setValue={useCallback(\n                (val: number) => set.fractalDepth(val),\n                [set]\n              )}\n              min={1}\n              max={6}\n              step={1}\n            />\n          </MenuItemWrapper>\n        </Fragment>\n      </BottomMenu>\n    </MenuWrapper>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport { useP5 } from \"hooks\";\n\nimport { SketchDiv } from \"components/generic\";\n\nimport { getPsychedelicSpiralSketch } from \"./PsychedelicSpiral.sketch\";\nimport { PsychedelicSpiralMenu } from \"./PsychedelicSpiral.menu\";\n\nexport const PsychedelicSpiral = () => {\n  const sketch = getPsychedelicSpiralSketch();\n  const { ref, p5Instance } = useP5(sketch);\n\n  return (\n    <Fragment>\n      <SketchDiv ref={ref} />\n      <PsychedelicSpiralMenu p5Instance={p5Instance} />\n    </Fragment>\n  );\n};\n","import p5, { Vector } from \"p5\";\nimport { P5Instance } from \"types/p5\";\n\n// local p5 instance to access p5 utilities and since some of the p5 constructor types are broken\nconst p = new p5(() => {});\n\n/**\n * Returns a vector given an angle and distance from a starting position\n * @param sx Starting X\n * @param sy Starting Y\n * @param angle Angle from starting position (in radians)\n * @param distance Distance from starting position to ending position\n */\nexport const getVectorFromAngle = (\n  sx: number,\n  sy: number,\n  angle: number,\n  distance: number\n) => {\n  return p.createVector(\n    sx + Math.sin(angle) * distance,\n    sy + Math.cos(angle) * distance\n  );\n};\n\nexport const relativelyPointVectorToCenter = (\n  p: P5Instance<any>,\n  x: number,\n  y: number,\n  vector: Vector,\n  length: number\n) => {\n  const forceVector = vector.copy();\n\n  /* \n    Now to implement a gradient of influence on the force vectors in order to make the particles stay aiming at the center.\n    First use the vectors position to find the percentage of difference from the center (edge of screen at 100%, center at 0%) for each orientation.\n  */\n  const centerX = p.width / 2;\n  const centerY = p.height / 2;\n  const percentageFromCenterX = Math.round(\n    x > p.width\n      ? 100\n      : (x > centerX ? (x - centerX) / centerX : 1 - x / centerX) * 100\n  );\n  const percentageFromCenterY = Math.round(\n    y > p.height\n      ? 100\n      : (y > centerY ? (y - centerY) / centerY : 1 - y / centerY) * 100\n  );\n\n  /*\n    Find the angle between position and center using trig.\n\n    sin(angle) = opposite / hyp\n    (angle) = sin-1((distance between x and cx) / (total distance between center and position))\n  */\n  const centerVector = p.createVector(centerX, centerY);\n  const positionVector = p.createVector(x, y);\n  const distX =\n    positionVector.x < centerVector.x\n      ? centerVector.x - positionVector.x\n      : positionVector.x - centerVector.x;\n  const dist = positionVector.dist(centerVector);\n  const toCenterAngle = p.asin(distX / dist);\n\n  /* \n    Now use this angle to create a vector the size of the vector padding from the position.\n    Cos adjacent will be the yDiff and sin opposite will be the xDiff (given the hypotenuse is the vectorPadding).\n\n    p.sin(toCenterAngle) = xdiff / vectorpadding \n    p.cos(toCenterAngle) = ydiff / vectorpadding\n  */\n  const shortDistX = p.sin(toCenterAngle) * length;\n  const shortDistY = p.cos(toCenterAngle) * length;\n  const toCenterVector = p.createVector(\n    x > centerVector.x ? x - shortDistX : x + shortDistX,\n    y > centerVector.y ? y - shortDistY : y + shortDistY\n  );\n\n  /* Now all thats left is to find the differences between the current forceVector and this new toCenter vector\n    and then influence the forceVector to be more like the toCenter vector, the closer the position is to the edges.\n    This is where the percentage differences will come into play, while also superimposed with an exponential function,\n    so that it has nearly no relevance close to the center, where we want the perlin noise to be the major influence.\n\n    The exponential function will be multiplier = (2^(percentageDiff / 25) / 16), because if the max diff is 4 (100 / 25).\n    The max output would be 16, and we want to normalize that value between 0 and 1 to use as a multiplier.\n    the reason for picking these numbers is that they give a nice gradient along the edges without influencing the center too much (guess & check)\n  */\n  const toCenterDiffY = toCenterVector.y - forceVector.y;\n  const toCenterDiffX = toCenterVector.x - forceVector.x;\n\n  forceVector.x =\n    forceVector.x + // Increment it onto the existing vector\n    (percentageFromCenterX / 100) * // Apply the percentage multiplier\n      (x > p.width ? -toCenterDiffX : toCenterDiffX) * // Add a check for out of bound anomalies\n      (Math.pow(2, percentageFromCenterX / 25) / 16); // Apply the exponential function\n  forceVector.y = // \" \"\n    forceVector.y +\n    (percentageFromCenterY / 100) *\n      (y > p.height ? -toCenterDiffY : toCenterDiffY) *\n      (Math.pow(2, percentageFromCenterY / 25) / 16);\n\n  return forceVector;\n};\n","import { P5Defaults } from \"types/p5\";\nimport p5 from \"p5\";\n\nexport interface PerlinFieldVars extends P5Defaults {\n  vectorPadding: number;\n  angleVariation: number;\n  perlinXIncrementScale: number;\n  perlinYIncrementScale: number;\n  perlinZIncrementScale: number;\n}\n\nexport const initialPerlinFieldVars: PerlinFieldVars = {\n  vectorPadding: 20,\n  angleVariation: 5,\n  perlinXIncrementScale: 1,\n  perlinYIncrementScale: 1,\n  perlinZIncrementScale: 0.5,\n  refresh: (p: p5) => {\n    p.setup();\n    p.draw();\n  },\n};\n","// Label formatters\nexport const formatPixelValue = (val: number) => `${val}px`;\nexport const formatPercentValue = (val: number) => `${val}%`;\nexport const formatTimesValue = (val: number) => `${val}x`;\n\n// Other\nexport const toSentenceCase = (str: string) =>\n  `${str.charAt(0).toUpperCase()}${str\n    .split(\"\")\n    .slice(1, str.length)\n    .join(\"\")}`;\n","import { StandardIconMenu } from \"components/menu/IconMenu/StandardIconMenu/StandardIconMenu\";\nimport { formatPixelValue, formatTimesValue } from \"utils/menu/formatting\";\nimport { MenuWrapper } from \"components/menu/MenuWrapper/MenuWrapper\";\nimport { MenuSlider } from \"components/menu/MenuSlider/MenuSlider\";\nimport { BottomMenu } from \"components/menu/BottomMenu\";\nimport React, { Fragment, useCallback } from \"react\";\nimport { MenuItemWrapper } from \"components/generic\";\nimport { useGenericReducer } from \"utils/data/state\";\nimport { TIME_TO_IDLE } from \"constants/numbers\";\nimport { useUpdateP5 } from \"hooks/useUpdateP5\";\nimport { P5Instance } from \"types/p5\";\nimport { useIdle } from \"hooks\";\nimport {\n  initialPerlinFieldVars,\n  PerlinFieldVars,\n} from \"./PerlinField.variables\";\n\ntype Props = {\n  p5Instance: P5Instance<PerlinFieldVars> | null;\n};\n\nconst sliderParams = {\n  min: 1,\n  max: 10,\n  step: 1,\n};\n\nexport const PerlinFieldMenu = ({ p5Instance }: Props) => {\n  const isIdle = useIdle(TIME_TO_IDLE);\n  const { state, set, setState } = useGenericReducer<PerlinFieldVars>(\n    initialPerlinFieldVars\n  );\n\n  useUpdateP5<PerlinFieldVars>(p5Instance, state);\n\n  return (\n    <MenuWrapper setState={setState} p5Instance={p5Instance} show={!isIdle}>\n      <StandardIconMenu initialLoopControl={true} />\n      <BottomMenu>\n        <Fragment>\n          <MenuItemWrapper>\n            <MenuSlider\n              title=\"Vector Padding\"\n              value={state.vectorPadding}\n              labelFormat={formatPixelValue}\n              setValue={useCallback(\n                (val: number) => set.vectorPadding(val),\n                [set]\n              )}\n              {...sliderParams}\n              min={5}\n              max={50}\n            />\n            <MenuSlider\n              title=\"Angle Variation\"\n              value={state.angleVariation}\n              setValue={useCallback(\n                (val: number) => set.angleVariation(val),\n                [set]\n              )}\n              {...sliderParams}\n              min={1}\n              max={50}\n            />\n          </MenuItemWrapper>\n          <MenuItemWrapper>\n            <MenuSlider\n              title=\"Perlin X Increment Scale\"\n              value={state.perlinXIncrementScale}\n              labelFormat={formatTimesValue}\n              setValue={useCallback(\n                (val: number) => set.perlinXIncrementScale(val),\n                [set]\n              )}\n              {...sliderParams}\n            />\n            <MenuSlider\n              title=\"Perlin Y Increment Scale\"\n              value={state.perlinYIncrementScale}\n              labelFormat={formatTimesValue}\n              setValue={useCallback(\n                (val: number) => set.perlinYIncrementScale(val),\n                [set]\n              )}\n              {...sliderParams}\n            />\n            <MenuSlider\n              title=\"Speed\"\n              value={state.perlinZIncrementScale}\n              setValue={useCallback(\n                (val: number) => set.perlinZIncrementScale(val),\n                [set]\n              )}\n              {...sliderParams}\n              min={0}\n              step={0.1}\n            />\n          </MenuItemWrapper>\n        </Fragment>\n      </BottomMenu>\n    </MenuWrapper>\n  );\n};\n","import { getPerlinFieldSketch } from \"./PerlinField.sketch\";\nimport { PerlinFieldMenu } from \"./PerlinField.menu\";\nimport { SketchDiv } from \"components/generic\";\nimport React, { Fragment } from \"react\";\nimport { useP5 } from \"hooks\";\n\nexport const PerlinField = () => {\n  const sketch = getPerlinFieldSketch();\n  const { ref, p5Instance } = useP5(sketch);\n\n  return (\n    <Fragment>\n      <SketchDiv ref={ref} />\n      <PerlinFieldMenu p5Instance={p5Instance} />\n    </Fragment>\n  );\n};\n","import { checkForMismatchedSize } from \"utils/misc/checkForMismatchedSize\";\nimport { getVectorFromAngle } from \"utils/data/vectors\";\nimport { P5Instance } from \"types/p5\";\nimport {\n  initialPerlinFieldVars,\n  PerlinFieldVars,\n} from \"./PerlinField.variables\";\n\nconst BASE_INCREMENT = 0.01;\nconst MAX_RANDOM_SEED = 1000000;\n\nexport const getPerlinFieldSketch = () => {\n  return (p: P5Instance<PerlinFieldVars>) => {\n    p.variables = initialPerlinFieldVars;\n    let initOffset: number;\n    let zOff = 0;\n\n    const drawBackground = () => {\n      p.background(0);\n    };\n\n    p.setup = () => {\n      initOffset = p.random(0, MAX_RANDOM_SEED);\n      p.frameRate(50);\n      p.colorMode(p.HSB);\n      p.createCanvas(p.windowWidth, p.windowHeight);\n      drawBackground();\n    };\n\n    p.windowResized = () => {\n      p.resizeCanvas(p.windowWidth, p.windowHeight);\n      drawBackground();\n    };\n\n    p.draw = () => {\n      drawBackground()\n      checkForMismatchedSize(p);\n      if (p.variables) {\n        // get variables\n        const {\n          vectorPadding,\n          angleVariation,\n          perlinXIncrementScale,\n          perlinYIncrementScale,\n          perlinZIncrementScale,\n        } = p.variables;\n\n        let xOff = initOffset;\n        let yOff = initOffset;\n\n        for (let x = vectorPadding / 3; x < p.width; x += vectorPadding) {\n          for (let y = vectorPadding / 3; y < p.height; y += vectorPadding) {\n            // use trig to find vector\n            const angle =\n              (p.noise(xOff, yOff, zOff) * p.TWO_PI * angleVariation) %\n              p.TWO_PI;\n            const { x: x2, y: y2 } = getVectorFromAngle(\n              x,\n              y,\n              angle,\n              vectorPadding\n            );\n\n            // get a nice color\n            const hue = Math.round(\n              p.map(\n                angle < p.PI ? angle : p.PI - (angle - p.PI), // smoothen the hue by implementing a middle point that it rises to and falls from rather than a jump to start\n                0,\n                p.PI,\n                0,\n                255\n              )\n            );\n\n            p.stroke(hue, 255, 255);\n            p.line(x, y, x2, y2);\n\n            yOff += perlinYIncrementScale * BASE_INCREMENT;\n          }\n          yOff = initOffset;\n          xOff += perlinXIncrementScale * BASE_INCREMENT;\n        }\n\n        zOff += perlinZIncrementScale * BASE_INCREMENT;\n      }\n    };\n  };\n};\n","import { P5Defaults } from \"types/p5\";\nimport p5 from \"p5\";\n\n// Type\nexport interface EpicycloidVars extends P5Defaults {\n  isAutoplaying: boolean;\n  totalVertices: number;\n  strokeOpacity: number;\n  autoplaySpeed: number;\n  strokeWidth: number;\n  radius: number;\n  factor: number;\n  strokeColor: string;\n  bgColor: string;\n}\n\n// Initial\nexport const initialEpicycloidVars: EpicycloidVars = {\n  isAutoplaying: false,\n  totalVertices: 150,\n  strokeOpacity: 70,\n  autoplaySpeed: 0.01,\n  strokeWidth: 1,\n  radius: 300,\n  strokeColor: \"#FFFFFF\",\n  bgColor: \"#000000\",\n  factor: 2,\n  refresh: (p: p5) => {\n    p.setup();\n    p.draw();\n  },\n};\n","import { DEFAULT_SMOOTHING_PCNT } from \"constants/numbers\";\nimport p5 from \"p5\";\n\n/** Smoothly increments a number to a desired output */\nexport const smoothTransitionTo = (\n  value: number,\n  valueTo: number,\n  smoothPercent?: number\n) => {\n  if (valueTo > value) {\n    // If the desired value is bigger, increment a percentage of the difference between the two\n    return (value +=\n      (valueTo - value) / (100 / (smoothPercent || DEFAULT_SMOOTHING_PCNT)));\n  } else {\n    // otherwise - decrement\n    return (value -=\n      (value - valueTo) / (100 / (smoothPercent || DEFAULT_SMOOTHING_PCNT)));\n  }\n};\n\n/**\n *  Randomly increments a number within the bounds of a minimum, maximum and given variance\n */\nexport const incrementRandomlyMinMaxed = (\n  p: p5,\n  current: number,\n  variance: number,\n  min: number,\n  max: number\n) => {\n  if (current + variance > max) {\n    current = current + p.random(-variance, 0);\n  } else if (current - variance < min) {\n    current = current + p.random(0, variance);\n  } else {\n    current = current + p.random(-variance, variance);\n  }\n  return current;\n};\n","import { initialEpicycloidVars, EpicycloidVars } from \"./Epicycloid.variables\";\nimport { checkForMismatchedSize } from \"utils/misc/checkForMismatchedSize\";\nimport { smoothTransitionTo } from \"utils/data/values\";\nimport { P5Instance } from \"types/p5\";\n\nexport const epicycloidSketch = (p: P5Instance<EpicycloidVars>) => {\n  // sketch scoped vars\n  p.variables = initialEpicycloidVars;\n  let smoothFactor = 0;\n  let smoothRadius = 0;\n  let smoothTotalVertices = 0;\n\n  const drawBackground = () => {\n    if (p.variables) {\n      p.background(p.variables.bgColor);\n    }\n  };\n\n  // returns a vector for a given vertex index\n  const getVector = (index: number) => {\n    if (p.variables) {\n      const angle =\n        p.map(\n          index % smoothTotalVertices,\n          0,\n          smoothTotalVertices,\n          0,\n          p.TWO_PI\n        ) -\n        p.TWO_PI / 2;\n      const x = smoothRadius * p.cos(angle);\n      const y = smoothRadius * p.sin(angle);\n      return {\n        x,\n        y,\n      };\n    }\n  };\n\n  p.setup = () => {\n    p.createCanvas(p.windowWidth, p.windowHeight);\n    smoothFactor = 0;\n    drawBackground();\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\n    drawBackground();\n  };\n\n  p.draw = () => {\n    checkForMismatchedSize(p);\n    if (p.variables) {\n      // get variables\n      const {\n        totalVertices,\n        radius,\n        factor,\n        strokeWidth,\n        strokeOpacity,\n        isAutoplaying,\n        autoplaySpeed,\n        strokeColor,\n        bgColor,\n      } = p.variables;\n\n      // smoothing values\n      smoothRadius = smoothTransitionTo(smoothRadius, radius);\n      smoothTotalVertices = smoothTransitionTo(\n        smoothTotalVertices,\n        totalVertices\n      );\n\n      // increment factor if autoplaying\n      if (isAutoplaying) {\n        if (smoothFactor === factor) {\n          smoothFactor = 0;\n        }\n        smoothFactor += autoplaySpeed;\n      } else {\n        smoothFactor = smoothTransitionTo(smoothFactor, factor);\n      }\n\n      // setup cycle\n      const opacity = p.map(strokeOpacity, 0, 100, 0, 255);\n      const opacityColor = p.color(strokeColor);\n      opacityColor.setAlpha(opacity);\n      p.stroke(opacityColor);\n      p.fill(bgColor);\n      p.translate(p.windowWidth / 2, p.windowHeight / 2);\n      p.strokeWeight(strokeWidth);\n      drawBackground();\n\n      // draw circle\n      p.circle(0, 0, smoothRadius * 2);\n\n      // init vertices to draw lines\n      for (let i = 0; i < smoothTotalVertices; i++) {\n        // get vectors\n        const startPos = getVector(i);\n        const endPos = getVector(i * smoothFactor);\n\n        // draw line\n        if (startPos && endPos) {\n          p.line(startPos.x, startPos.y, endPos.x, endPos.y);\n        }\n      }\n    }\n  };\n};\n","import { Checkbox, Tooltip, Typography } from \"@material-ui/core\";\nimport { FlexRowPadded } from \"components/generic\";\nimport React, { useCallback } from \"react\";\nimport { useMenuWrapperContext } from \"../MenuWrapper/MenuWrapper.provider\";\n\ntype Props = {\n  setChecked: Function;\n  disabled?: boolean;\n  refresh?: boolean;\n  tooltip?: string;\n  checked: boolean;\n  title?: string;\n};\n\nexport const MenuCheckbox = ({\n  setChecked,\n  disabled,\n  refresh,\n  tooltip,\n  checked,\n  title,\n}: Props) => {\n  const { refreshAnimation } = useMenuWrapperContext();\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<{}>, val: boolean) => {\n      if (val !== checked) {\n        setChecked(Boolean(val));\n        if (refresh) {\n          refreshAnimation();\n        }\n      }\n    },\n    [checked, refreshAnimation, refresh, setChecked]\n  );\n\n  return (\n    <Tooltip title={tooltip || \"\"}>\n      <FlexRowPadded spacing={0.5}>\n        <Checkbox\n          onChange={handleChange}\n          disabled={disabled}\n          checked={checked}\n          color=\"primary\"\n          size=\"small\"\n        />\n        {title && <Typography variant=\"caption\">{title}</Typography>}\n      </FlexRowPadded>\n    </Tooltip>\n  );\n};\n","import { IconButton, styled, Tooltip, Typography } from \"@material-ui/core\";\nimport { useMenuWrapperContext } from \"../MenuWrapper/MenuWrapper.provider\";\nimport { useUpdateLocalStateWhenChanged } from \"hooks/useUpdateIfChanged\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { FlexRowPadded } from \"components/generic\";\nimport { DEFAULT_DEBOUNCE_DELAY } from \"constants/numbers\";\nimport { useDebounce } from \"hooks\";\n\nconst Input = styled(\"input\")({\n  backgroundColor: \"transparent\",\n  WebkitAppearance: \"none\",\n  borderRadius: \"100%\",\n  cursor: \"pointer\",\n  outline: \"none\",\n  border: \"none\",\n  height: \"18px\",\n  width: \"20px\",\n\n  \"&::-webkit-color-swatch-wrapper\": {\n    padding: 0,\n  },\n\n  \"&::-webkit-color-swatch\": {\n    borderRadius: \"100%\",\n    border: \"none\",\n  },\n});\n\ntype Props = {\n  setColor: Function;\n  disabled?: boolean;\n  refresh?: boolean;\n  tooltip?: string;\n  title?: string;\n  color: string;\n};\n\n/**\n * Returns a debounced color value from a colorpicker to limit full re-renders\n */\nexport const ColorPicker = ({\n  setColor,\n  disabled,\n  refresh,\n  tooltip,\n  color,\n  title,\n}: Props) => {\n  const [localColor, setLocalColor] = useState(color);\n  const { refreshAnimation, debounceDelay } = useMenuWrapperContext();\n  const debouncedLocalColor = useDebounce(\n    localColor,\n    debounceDelay || DEFAULT_DEBOUNCE_DELAY\n  );\n\n  // if the debounce delay triggers, set the higher scoped variable\n  useEffect(() => {\n    if (debouncedLocalColor !== color) {\n      setColor(debouncedLocalColor);\n      if (refresh) {\n        refreshAnimation();\n      }\n    }\n  }, [debouncedLocalColor, setColor, refresh, refreshAnimation, color]);\n\n  useUpdateLocalStateWhenChanged(color, setLocalColor);\n\n  // set the state locally upon every change\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const val: string = e.target.value;\n      if (val !== color) {\n        setLocalColor(val);\n      }\n    },\n    [color]\n  );\n\n  return (\n    <Tooltip title={tooltip || \"\"}>\n      <FlexRowPadded spacing={1} style={{ padding: \"6px\" }}>\n        <IconButton size=\"small\" disabled={disabled}>\n          <Input type=\"color\" onChange={handleChange} value={color} />\n        </IconButton>\n        {title && <Typography variant=\"caption\">{title}</Typography>}\n      </FlexRowPadded>\n    </Tooltip>\n  );\n};\n","import { initialEpicycloidVars, EpicycloidVars } from \"./Epicycloid.variables\";\nimport { StandardIconMenu } from \"components/menu/IconMenu/StandardIconMenu/StandardIconMenu\";\nimport { MenuCheckbox } from \"components/menu/MenuCheckbox/MenuCheckbox\";\nimport { ColorPicker } from \"components/menu/ColorPicker/ColorPicker\";\nimport { MenuItemWrapper, FlexRowPadded } from \"components/generic\";\nimport { MenuSlider } from \"components/menu/MenuSlider/MenuSlider\";\nimport { BottomMenu } from \"components/menu/BottomMenu\";\nimport React, { Fragment, useCallback } from \"react\";\nimport { useGenericReducer } from \"utils/data/state\";\nimport { TIME_TO_IDLE } from \"constants/numbers\";\nimport { useUpdateP5 } from \"hooks/useUpdateP5\";\nimport { P5Instance } from \"types/p5\";\nimport { useIdle } from \"hooks\";\nimport {\n  formatPercentValue,\n  formatTimesValue,\n  formatPixelValue,\n} from \"utils/menu/formatting\";\nimport { MenuWrapper } from \"components/menu/MenuWrapper/MenuWrapper\";\n\ntype Props = {\n  p5Instance: P5Instance<EpicycloidVars> | null;\n};\n\nconst sliderParams = {\n  min: 0,\n  max: 100,\n  step: 1,\n};\n\nexport const EpicycloidMenu = ({ p5Instance }: Props) => {\n  const isIdle = useIdle(TIME_TO_IDLE);\n  const { state, set, setState } = useGenericReducer<EpicycloidVars>(\n    initialEpicycloidVars\n  );\n  useUpdateP5<EpicycloidVars>(p5Instance, state);\n\n  return (\n    <MenuWrapper setState={setState} p5Instance={p5Instance} show={!isIdle}>\n      <StandardIconMenu\n        disableLoopControl={!state.isAutoplaying}\n        initialLoopControl\n      />\n      <BottomMenu>\n        <Fragment>\n          <MenuItemWrapper>\n            <MenuSlider\n              title=\"Radius\"\n              value={state.radius}\n              setValue={useCallback((val: number) => set.radius(val), [set])}\n              {...sliderParams}\n              min={100}\n              max={800}\n            />\n            <MenuSlider\n              title=\"Stroke Width\"\n              labelFormat={formatPixelValue}\n              value={state.strokeWidth}\n              setValue={useCallback(\n                (val: number) => set.strokeWidth(val),\n                [set]\n              )}\n              step={1}\n              min={1}\n              max={5}\n            />\n            <MenuSlider\n              title=\"Stroke Opacity\"\n              labelFormat={formatPercentValue}\n              value={state.strokeOpacity}\n              setValue={useCallback(\n                (val: number) => set.strokeOpacity(val),\n                [set]\n              )}\n              {...sliderParams}\n            />\n          </MenuItemWrapper>\n          <MenuItemWrapper>\n            <MenuSlider\n              title=\"Total Vertices\"\n              value={state.totalVertices}\n              setValue={useCallback(\n                (val: number) => set.totalVertices(val),\n                [set]\n              )}\n              {...sliderParams}\n              min={0}\n              max={1000}\n            />\n            <MenuSlider\n              disabled={state.isAutoplaying}\n              title={`Factor${\n                state.isAutoplaying ? \" (Disabled when autoplaying)\" : \"\"\n              }`}\n              labelFormat={formatTimesValue}\n              value={state.factor}\n              setValue={useCallback((val: number) => set.factor(val), [set])}\n              {...sliderParams}\n            />\n            <MenuSlider\n              disabled={!state.isAutoplaying}\n              title={`Autoplay Speed${\n                !state.isAutoplaying ? \" (Disabled when not autoplaying)\" : \"\"\n              }`}\n              labelFormat={formatTimesValue}\n              value={state.autoplaySpeed * 100}\n              setValue={useCallback(\n                (val: number) => set.autoplaySpeed(val / 100),\n                [set]\n              )}\n              {...sliderParams}\n              max={10}\n              step={0.1}\n            />\n          </MenuItemWrapper>\n          <FlexRowPadded spacing={3}>\n            <MenuCheckbox\n              checked={state.isAutoplaying}\n              setChecked={useCallback(\n                (val: boolean) => set.isAutoplaying(val),\n                [set]\n              )}\n              title=\"Autoplay\"\n            />\n            <ColorPicker\n              color={state.strokeColor}\n              setColor={useCallback(\n                (val: string) => set.strokeColor(val),\n                [set]\n              )}\n              title=\"Stroke Color\"\n            />\n            <ColorPicker\n              color={state.bgColor}\n              setColor={useCallback((val: string) => set.bgColor(val), [set])}\n              title=\"Background Color\"\n            />\n          </FlexRowPadded>\n        </Fragment>\n      </BottomMenu>\n    </MenuWrapper>\n  );\n};\n","import { epicycloidSketch } from \"./Epicycloid.sketch\";\nimport { EpicycloidMenu } from \"./Epicycloid.menu\";\nimport { SketchDiv } from \"components/generic\";\nimport React, { Fragment } from \"react\";\nimport { useP5 } from \"hooks\";\n\nexport const Epicycloid = () => {\n  const { ref, p5Instance } = useP5(epicycloidSketch);\n\n  return (\n    <Fragment>\n      <SketchDiv ref={ref} />\n      <EpicycloidMenu p5Instance={p5Instance} />\n    </Fragment>\n  );\n};\n","import { P5Defaults } from \"types/p5\";\nimport p5 from \"p5\";\n\nexport interface RandomWalkVars extends P5Defaults {\n  posVariance: number;\n  colorVariance: number;\n  radius: number;\n  opacity: number;\n  speed: number;\n}\n\nexport const initialRandomWalkVars: RandomWalkVars = {\n  posVariance: 20,\n  colorVariance: 20,\n  radius: 40,\n  opacity: 80,\n  speed: 1,\n  refresh: (p: p5) => {\n    p.setup();\n    p.draw();\n  },\n};\n","import { StandardIconMenu } from \"components/menu/IconMenu/StandardIconMenu/StandardIconMenu\";\nimport { initialRandomWalkVars, RandomWalkVars } from \"./RandomWalk.variables\";\nimport { formatPercentValue, formatTimesValue } from \"utils/menu/formatting\";\nimport { MenuWrapper } from \"components/menu/MenuWrapper/MenuWrapper\";\nimport { MenuSlider } from \"components/menu/MenuSlider/MenuSlider\";\nimport { BottomMenu } from \"components/menu/BottomMenu\";\nimport { MenuItemWrapper } from \"components/generic\";\nimport React, { Fragment, useCallback } from \"react\";\nimport { useGenericReducer } from \"utils/data/state\";\nimport { TIME_TO_IDLE } from \"constants/numbers\";\nimport { useUpdateP5 } from \"hooks/useUpdateP5\";\nimport { P5Instance } from \"types/p5\";\nimport { useIdle } from \"hooks\";\n\ntype Props = {\n  p5Instance: P5Instance<RandomWalkVars> | null;\n};\n\nconst sliderParams = {\n  min: 0,\n  max: 100,\n  step: 1,\n};\n\nexport const RandomWalkMenu = ({ p5Instance }: Props) => {\n  const isIdle = useIdle(TIME_TO_IDLE);\n  const { state, set, setState } = useGenericReducer<RandomWalkVars>(\n    initialRandomWalkVars\n  );\n\n  useUpdateP5<RandomWalkVars>(p5Instance, state);\n\n  return (\n    <MenuWrapper setState={setState} p5Instance={p5Instance} show={!isIdle}>\n      <StandardIconMenu initialLoopControl />\n      <BottomMenu>\n        <Fragment>\n          <MenuItemWrapper>\n            <MenuSlider\n              title=\"Position Variance\"\n              value={state.posVariance}\n              setValue={useCallback(\n                (val: number) => set.posVariance(val),\n                [set]\n              )}\n              {...sliderParams}\n            />\n            <MenuSlider\n              title=\"Color Variance\"\n              value={state.colorVariance}\n              setValue={useCallback(\n                (val: number) => set.colorVariance(val),\n                [set]\n              )}\n              {...sliderParams}\n            />\n          </MenuItemWrapper>\n          <MenuItemWrapper>\n            <MenuSlider\n              title=\"Circle Radius\"\n              value={state.radius}\n              setValue={useCallback((val: number) => set.radius(val), [set])}\n              {...sliderParams}\n            />\n            <MenuSlider\n              title=\"Circle Opacity\"\n              labelFormat={formatPercentValue}\n              value={state.opacity}\n              setValue={useCallback((val: number) => set.opacity(val), [set])}\n              {...sliderParams}\n            />\n          </MenuItemWrapper>\n          <MenuSlider\n            title=\"Speed\"\n            labelFormat={formatTimesValue}\n            value={state.speed}\n            setValue={useCallback((val: number) => set.speed(val), [set])}\n            {...sliderParams}\n          />\n        </Fragment>\n      </BottomMenu>\n    </MenuWrapper>\n  );\n};\n","import { getRandomWalkSketch } from \"./RandomWalk.sketch\";\nimport { RandomWalkMenu } from \"./RandomWalk.menu\";\nimport { SketchDiv } from \"components/generic\";\nimport React, { Fragment } from \"react\";\nimport { useP5 } from \"hooks\";\n\n/**\n * Component showing an example of using live-updating p5.js initialVars controlled by react components\n */\nexport const RandomWalk = () => {\n  const sketch = getRandomWalkSketch();\n  const { ref, p5Instance } = useP5(sketch);\n\n  return (\n    <Fragment>\n      <SketchDiv ref={ref} />\n      <RandomWalkMenu p5Instance={p5Instance} />\n    </Fragment>\n  );\n};\n","import { initialRandomWalkVars, RandomWalkVars } from \"./RandomWalk.variables\";\nimport { incrementRandomlyMinMaxed } from \"utils/data/values\";\nimport { P5Instance } from \"types/p5\";\nimport { checkForMismatchedSize } from \"utils/misc/checkForMismatchedSize\";\n\nexport const getRandomWalkSketch = () => {\n  return (p: P5Instance<RandomWalkVars>) => {\n    p.variables = initialRandomWalkVars;\n    let x = 0;\n    let y = 0;\n    let r = 255;\n    let g = 255;\n    let b = 255;\n\n    const drawBackground = () => {\n      p.background(0);\n    };\n\n    const setupPosition = () => {\n      x = p.windowWidth / 2;\n      y = p.windowHeight / 2;\n      r = 255;\n      g = 255;\n      b = 255;\n    };\n\n    p.setup = () => {\n      p.createCanvas(p.windowWidth, p.windowHeight);\n      drawBackground();\n      setupPosition();\n    };\n\n    p.windowResized = () => {\n      p.resizeCanvas(p.windowWidth, p.windowHeight);\n      drawBackground();\n      setupPosition();\n    };\n\n    p.draw = () => {\n      checkForMismatchedSize(p);\n      if (p.variables) {\n        // get variables\n        const {\n          posVariance,\n          colorVariance,\n          opacity,\n          radius,\n          speed,\n        } = p.variables;\n\n        // draw an ellipse\n        Array(speed)\n          .fill(0)\n          .forEach(() => {\n            // prepare\n            p.fill(r, g, b, p.map(opacity, 0, 100, 0, 255));\n            p.noStroke();\n            p.ellipse(x, y, radius, radius);\n\n            // increment pos randomly (max at end of screen - diameter)\n            x = incrementRandomlyMinMaxed(p, x, posVariance, 0, p.windowWidth);\n            y = incrementRandomlyMinMaxed(p, y, posVariance, 0, p.windowHeight);\n\n            // increment color randomly (max at 255)\n            r = incrementRandomlyMinMaxed(p, r, colorVariance, 0, 255);\n            g = incrementRandomlyMinMaxed(p, g, colorVariance, 0, 255);\n            b = incrementRandomlyMinMaxed(p, b, colorVariance, 0, 255);\n          });\n      }\n    };\n  };\n};\n","import { PresetData } from \"components/menu/IconMenu/Presets/Presets.types\";\nimport { NEON_BLUE, NEON_PINK } from \"constants/colors\";\nimport { P5Defaults } from \"types/p5\";\nimport p5 from \"p5\";\n\nexport interface PerlinFlowVars extends P5Defaults {\n  perlinXIncrementScale: number;\n  perlinYIncrementScale: number;\n  perlinZIncrementScale: number;\n  swapSidesAtBorder: boolean;\n  viewForceVectors: boolean;\n  particleOpacity: number;\n  angleVariation: number;\n  particleAmount: number;\n  vectorPadding: number;\n  particleColor: string;\n  avoidBorders: boolean;\n  randomColor: boolean;\n  particleSize: number;\n  clearScreen: boolean;\n  fillTrails: boolean;\n  drawTrails: boolean;\n  trailLength: number;\n  maxVelocity: number;\n  bgColor: string;\n  mass: number;\n}\n\n/* -------------------------------------------------------------------------- */\n/*                                  DEFAULTS                                  */\n/* -------------------------------------------------------------------------- */\nexport const initialPerlinFlowVars: PerlinFlowVars = {\n  swapSidesAtBorder: false,\n  perlinZIncrementScale: 0,\n  perlinXIncrementScale: 1,\n  perlinYIncrementScale: 1,\n  particleColor: \"#FFFFFF\",\n  viewForceVectors: false,\n  particleOpacity: 1.5,\n  particleAmount: 5000,\n  randomColor: false,\n  avoidBorders: false,\n  bgColor: \"#000000\",\n  angleVariation: 5,\n  fillTrails: false,\n  vectorPadding: 25,\n  clearScreen: false,\n  drawTrails: false,\n  particleSize: 1,\n  trailLength: 0,\n  maxVelocity: 2,\n  mass: 5,\n  refresh: (p: p5) => {\n    p.setup();\n    p.draw();\n  },\n};\n\n/* -------------------------------------------------------------------------- */\n/*                                   PRESETS                                  */\n/* -------------------------------------------------------------------------- */\nconst floaters: PerlinFlowVars = {\n  ...initialPerlinFlowVars,\n  ...{\n    perlinZIncrementScale: 0.4,\n    particleColor: NEON_BLUE,\n    swapSidesAtBorder: true,\n    particleOpacity: 25,\n    particleAmount: 500,\n    avoidBorders: true,\n    angleVariation: 20,\n    vectorPadding: 15,\n    clearScreen: true,\n    drawTrails: true,\n    trailLength: 3,\n    maxVelocity: 5,\n    mass: 2,\n  },\n};\n\nconst plasma: PerlinFlowVars = {\n  ...initialPerlinFlowVars,\n  ...{\n    swapSidesAtBorder: false,\n    perlinZIncrementScale: 5,\n    particleColor: NEON_PINK,\n    particleOpacity: 1.5,\n    particleAmount: 3500,\n    avoidBorders: true,\n    clearScreen: false,\n    bgColor: \"#000000\",\n    angleVariation: 25,\n    vectorPadding: 25,\n    drawTrails: false,\n    particleSize: 1,\n    trailLength: 0,\n    maxVelocity: 3,\n    mass: 25,\n  },\n};\n\nconst cosmic: PerlinFlowVars = {\n  ...initialPerlinFlowVars,\n  ...{\n    perlinZIncrementScale: 0.5,\n    perlinXIncrementScale: 10,\n    perlinYIncrementScale: 10,\n    swapSidesAtBorder: true,\n    particleAmount: 100,\n    bgColor: \"#120817\",\n    clearScreen: false,\n    vectorPadding: 50,\n    angleVariation: 1,\n    randomColor: true,\n    trailLength: 25,\n    maxVelocity: 3,\n    particleOpacity: 1,\n    avoidBorders: false,\n    mass: 10,\n  },\n};\n\nexport const perlinFlowPresets: PresetData<PerlinFlowVars> = [\n  {\n    name: \"Default\",\n    vars: initialPerlinFlowVars,\n  },\n  {\n    name: \"Floaters\",\n    vars: floaters,\n  },\n  {\n    name: \"Plasma\",\n\n    vars: plasma,\n  },\n  {\n    name: \"Cosmic\",\n    vars: cosmic,\n  },\n];\n","// NEON\nexport const NEON_PINK = \"#FE019A\";\nexport const NEON_RED = \"#FF073A\";\nexport const NEON_YELLOW = \"#FFFF01\";\nexport const NEON_BLUE = \"#00F9FF\";\n\n// GENERAL\nexport const NIGHT_SKY = \"#0C1445\";\nexport const SUNSET_ORANGE = \"#FD5E53\";\nexport const CONCRETE_GREY = \"#B9B4AB\";\nexport const METAL = \"#606060\";\nexport const LIGHT = \"#EEDD82\";\n","import p5, { Color, Vector } from \"p5\";\n\n// local p5 instance to access p5 utilities and since some of the p5 constructor types are broken\nconst p = new p5(() => {});\n\n// type safed props\ntype Props = {\n  maxVelocity?: number | null;\n  swapSidesAtBorder?: boolean;\n  maxTrailLength?: number;\n  acceleration?: Vector;\n  stroke?: Color | null;\n  drawTrails?: boolean;\n  fill?: Color | null;\n  fillTrails?: boolean;\n  velocity?: Vector;\n  location: Vector;\n  height?: number;\n  width?: number;\n  mass?: number;\n};\n\nexport type Particle = {\n  prevLocation: Vector | null;\n  maxVelocity: number | null;\n  swapSidesAtBorder: boolean;\n  prevPoints: Array<Vector>;\n  maxTrailLength: number;\n  acceleration: Vector;\n  stroke: Color | null;\n  drawTrails: boolean;\n  fillTrails: boolean;\n  fill: Color | null;\n  lifeTick: number;\n  location: Vector;\n  velocity: Vector;\n  height: number;\n  width: number;\n  mass: number;\n  applyForce: (this: Particle, force: Vector) => void;\n  display: (this: Particle, p: p5) => void;\n  update: (this: Particle, p: p5) => void;\n};\n\n/**\n * Factory for creating a particle when given a location vector object\n * basically a port from the Nature of Code with a few modifications (processing to p5.js and typescript) so credit to Daniel Shiffman\n * @param params\n */\nexport function createParticle({\n  acceleration = p.createVector(0, 0),\n  velocity = p.createVector(0, 0),\n  swapSidesAtBorder = false,\n  fill = p.color(\"#FFF\"),\n  maxTrailLength = 20,\n  drawTrails = false,\n  maxVelocity = null,\n  fillTrails = false,\n  stroke = null,\n  height = 1,\n  width = 1,\n  location,\n  mass = 1,\n}: Props): Particle {\n  // Non-prop defaults\n  const prevLocation: Vector | null = null;\n  const prevPoints: Array<Vector> = [];\n  const lifeTick = 0;\n\n  return {\n    swapSidesAtBorder,\n    maxTrailLength,\n    acceleration,\n    prevLocation,\n    maxVelocity,\n    prevPoints,\n    drawTrails,\n    fillTrails,\n    lifeTick,\n    location,\n    velocity,\n    stroke,\n    height,\n    width,\n    fill,\n    mass,\n    /**\n     *  Updates the particles properties\n        note: this is a single \"time tick\", so time can be eliminated from the equations\n     */\n    update(p) {\n      // Movement calculations\n      // v1 = v0 + a*t so v1 = v0 + a\n      this.velocity.add(this.acceleration);\n      this.maxVelocity && this.velocity.limit(this.maxVelocity);\n      // v = d/t so d = v*t, so d = v\n      this.prevLocation = this.location.copy();\n      this.location.add(this.velocity);\n      this.acceleration.mult(0);\n\n      // Draw tails if we have it enabled, we have a previous location\n      if (\n        this.drawTrails &&\n        this.prevLocation &&\n        !this.location.equals(this.prevLocation)\n      ) {\n        if (this.prevPoints.length > this.maxTrailLength) {\n          Array(this.prevPoints.length - this.maxTrailLength)\n            .fill(null)\n            .forEach(() => this.prevPoints.shift());\n        }\n        this.prevPoints.push(this.location.copy());\n      }\n\n      // Handle collision with bounds if we are swapping sides when the particle hits the border\n      if (this.swapSidesAtBorder) {\n        if (this.location.x >= p.windowWidth) {\n          this.location.x = 1;\n        } else if (this.location.x <= 0) {\n          this.location.x = p.windowWidth - 1;\n        }\n        if (this.location.y >= p.windowHeight) {\n          this.location.y = 1;\n        } else if (this.location.y <= 0) {\n          this.location.y = p.windowHeight - 1;\n        }\n      }\n\n      this.lifeTick++;\n    },\n\n    /**\n     *  Displays the particle on a given sketch instance\n     */\n    display(p) {\n      this.stroke ? p.stroke(this.stroke) : p.noStroke();\n      this.fill ? p.fill(this.fill) : p.noFill();\n      p.ellipse(this.location.x, this.location.y, this.width, this.height);\n\n      // Draw line between all previous points if we are drawing trails\n      if (this.prevPoints.length && this.drawTrails) {\n        if (this.fillTrails) {\n          this.fill ? p.fill(this.fill) : p.noFill();\n        } else {\n          p.noFill();\n        }\n        p.strokeWeight((this.width + this.height) / 2);\n        p.beginShape();\n        p.curveVertex(this.prevPoints[0].x, this.prevPoints[0].y);\n\n        this.prevPoints.forEach((point, index) => {\n          if (\n            // Break the trail into 2 shapes if the next point is further than half the canvas width/height away (for particles swapping side)\n            !(\n              prevPoints?.[index + 1] &&\n              Math.abs(prevPoints[index + 1].x - point.x) < p.width / 2 &&\n              Math.abs(prevPoints[index + 1].y - point.y) < p.height / 2\n            )\n          ) {\n            p.endShape();\n            p.beginShape();\n          }\n          p.curveVertex(point.x, point.y);\n        });\n        p.curveVertex(this.location.x, this.location.y);\n        p.curveVertex(this.location.x, this.location.y);\n        p.endShape();\n        p.noStroke();\n      }\n    },\n\n    /**\n     *  Applies a force to the acceleration of the particle\n     *  @param force Force Vector\n     */\n    applyForce(force) {\n      // F = ma so a = F/m\n      const forceBuffer = force.copy();\n\n      forceBuffer.div(this.mass);\n      this.acceleration.add(forceBuffer);\n    },\n  };\n}\n","import p5, { Color } from \"p5\";\n\n/**\n * Generates a random hexadecimal color\n * Source: https://stackoverflow.com/a/7638362/7457383\n */\nexport const getRandomColor = () => \"#\" + Math.random().toString(16).substr(-6);\n\nexport const randomlyVaryColor = (p: p5, color: Color, varyMax?: number) => {\n  const varyAmount = p.random(0, varyMax || 0.5);\n  const lerpColor = p.color(Math.random() > 0.5 ? \"#000\" : \"#FFF\"); /// lighten or darken\n  return p.lerpColor(color, lerpColor, varyAmount);\n};\n","import { PerlinFlowVars } from \"./PerlinFlow.variables\";\nimport { createParticle, Particle } from \"factories/Particle/Particle\";\nimport { P5Instance } from \"types/p5\";\nimport p5, { Vector } from \"p5\";\nimport {\n  getVectorFromAngle,\n  relativelyPointVectorToCenter,\n} from \"utils/data/vectors\";\nimport { getRandomColor } from \"utils/drawing/colors\";\n\nconst BASE_INCREMENT = 0.01;\n\n/**\n * Initializes the array of particles used in the PerlinFlow\n * @param p\n * @param particles\n */\nexport const initParticles = (\n  p: P5Instance<PerlinFlowVars>,\n  particles: Array<Particle>\n) => {\n  // Clear the particles if they exist and we want to reinitialize them\n  if (particles.length) {\n    particles.splice(0, particles.length);\n  }\n\n  Array(p.variables?.particleAmount)\n    .fill(0)\n    .forEach(() => {\n      if (p.variables) {\n        const {\n          swapSidesAtBorder,\n          particleOpacity,\n          particleColor,\n          particleSize,\n          maxVelocity,\n          trailLength,\n          randomColor,\n          fillTrails,\n          drawTrails,\n          mass,\n        } = p.variables;\n\n        // generate a random color if necessary\n        const particleColorObj = p.color(\n          randomColor ? getRandomColor() : particleColor\n        );\n        particleColorObj.setAlpha(p.map(particleOpacity, 0, 100, 0, 255));\n        const randomLocation = p.createVector(\n          p.random(0, p.windowWidth),\n          p.random(0, p.windowHeight)\n        );\n\n        particles.push(\n          createParticle({\n            maxTrailLength: trailLength,\n            location: randomLocation,\n            stroke: particleColorObj,\n            fill: particleColorObj,\n            height: particleSize,\n            width: particleSize,\n            swapSidesAtBorder,\n            maxVelocity,\n            drawTrails,\n            fillTrails,\n            mass,\n          })\n        );\n      }\n    });\n};\n\n/**\n * Calculates the force vectors for the perlin flow\n * @param p\n */\nexport const getForceVectors = (\n  p: P5Instance<PerlinFlowVars>,\n  seed: number\n): Array<Array<Vector>> => {\n  const forceVectors: Array<Array<Vector>> = [];\n\n  if (p.variables) {\n    const {\n      perlinXIncrementScale,\n      perlinYIncrementScale,\n      perlinZIncrementScale,\n      viewForceVectors,\n      angleVariation,\n      vectorPadding,\n      avoidBorders,\n    } = p.variables;\n    let xOff = seed;\n    let yOff = seed;\n    let zOff = p.frameCount * perlinZIncrementScale * BASE_INCREMENT; // We need this to be dynamic, so we calculate it from the frame count\n\n    for (let x = 0; x < p.width + vectorPadding; x += vectorPadding) {\n      const col = Math.floor(x / vectorPadding);\n      forceVectors.push([]);\n      for (let y = 0; y < p.height + vectorPadding; y += vectorPadding) {\n        // Use trig to find vector from noise\n        const angle =\n          (p.noise(xOff, yOff, zOff) * p.TWO_PI * angleVariation) % p.TWO_PI;\n\n        const initialForceVector = getVectorFromAngle(\n          x,\n          y,\n          angle,\n          vectorPadding\n        );\n\n        const forceVector = avoidBorders\n          ? relativelyPointVectorToCenter(\n              p,\n              x,\n              y,\n              initialForceVector,\n              vectorPadding\n            )\n          : initialForceVector;\n\n        // Show the vectors if we want to\n        if (viewForceVectors) {\n          p.stroke(100, 200, 120, 50);\n          p.ellipse(forceVector.x, forceVector.y, 2, 2);\n          p.line(x, y, forceVector.x, forceVector.y);\n        }\n        p.stroke(100, 200, 120, 150);\n\n        // Push the vector to the multiarray\n        forceVectors[col].push(forceVector.sub(x, y).div(vectorPadding));\n        yOff += perlinYIncrementScale * BASE_INCREMENT;\n      }\n      yOff = seed;\n      xOff += perlinXIncrementScale * BASE_INCREMENT;\n    }\n  }\n\n  return forceVectors;\n};\n\n/**\n * Loops through and updates the particles for the perlin flow\n * @param p\n * @param particles\n * @param forceVectors\n */\nexport const updateParticles = (\n  p: P5Instance<PerlinFlowVars>,\n  particles: Array<Particle>,\n  forceVectors: Array<Array<Vector>>\n) => {\n  if (p.variables) {\n    const { vectorPadding, avoidBorders } = p.variables;\n\n    particles.forEach((particle) => {\n      const col = Math.floor(particle.location.x / vectorPadding);\n      const row = Math.floor(particle.location.y / vectorPadding);\n      const maxCol = Math.floor(p.width / vectorPadding);\n      const maxRow = Math.floor(p.height / vectorPadding);\n\n      // Update the particle properties\n      if (p.variables) {\n        const {\n          swapSidesAtBorder,\n          particleOpacity,\n          particleColor,\n          particleSize,\n          maxVelocity,\n          randomColor,\n          trailLength,\n          drawTrails,\n          mass,\n        } = p.variables;\n        // maintain current color if we're still showing the random color\n        const particleColorObj =\n          randomColor && particle.fill ? particle.fill : p.color(particleColor);\n        particleColorObj.setAlpha(p.map(particleOpacity, 0, 100, 0, 255));\n        particle = {\n          ...particle,\n          ...{\n            maxTrailLength: trailLength,\n            stroke: particleColorObj,\n            fill: particleColorObj,\n            height: particleSize,\n            width: particleSize,\n            swapSidesAtBorder,\n            maxVelocity,\n            drawTrails,\n            mass,\n          },\n        };\n      }\n\n      // If the particle is out of bounds, push it back towards the center, otherwise just access the force vector\n      const forceVector =\n        avoidBorders && (col > maxCol || row > maxRow || !col || !row)\n          ? relativelyPointVectorToCenter(\n              p,\n              particle.location.x,\n              particle.location.y,\n              new p5.Vector(),\n              vectorPadding\n            )\n          : forceVectors?.[col]?.[row];\n\n      // Apply force vector if it exists\n      if (forceVector) {\n        particle.applyForce(forceVector.copy());\n      }\n\n      // Update values and draw the particle\n      particle.update(p);\n      particle.display(p);\n    });\n  }\n};\n","import { initialPerlinFlowVars, PerlinFlowVars } from \"./PerlinFlow.variables\";\nimport { checkForMismatchedSize } from \"utils/misc/checkForMismatchedSize\";\nimport { Particle } from \"factories/Particle/Particle\";\nimport { P5Instance } from \"types/p5\";\nimport {\n  getForceVectors,\n  updateParticles,\n  initParticles,\n} from \"./PerlinFlow.utils\";\n\nconst MAX_RANDOM_SEED = 1000000;\n\nexport const getPerlinFlowSketch = () => {\n  return (p: P5Instance<PerlinFlowVars>) => {\n    p.variables = initialPerlinFlowVars;\n    let seed = p.random(0, MAX_RANDOM_SEED);\n    const particles: Array<Particle> = [];\n\n    const refreshScreen = (force?: boolean) => {\n      if (p.variables && (p.variables?.clearScreen || force)) {\n        p.background(p.variables.bgColor);\n      }\n    };\n\n    p.setup = () => {\n      seed = p.random(0, MAX_RANDOM_SEED);\n      p.createCanvas(p.windowWidth, p.windowHeight);\n      initParticles(p, particles);\n      refreshScreen(true);\n    };\n\n    p.windowResized = () => {\n      p.setup();\n    };\n\n    p.draw = () => {\n      refreshScreen();\n      checkForMismatchedSize(p);\n      const forceVectors = getForceVectors(p, seed);\n      updateParticles(p, particles, forceVectors);\n    };\n  };\n};\n","import { formatPercentValue, formatPixelValue } from \"utils/menu/formatting\";\nimport { MenuCheckbox } from \"components/menu/MenuCheckbox/MenuCheckbox\";\nimport { ColorPicker } from \"components/menu/ColorPicker/ColorPicker\";\nimport { MenuSlider } from \"components/menu/MenuSlider/MenuSlider\";\nimport { PerlinFlowMenuSectionProps } from \"../PerlinFlow.types\";\nimport { MenuItemWrapper } from \"components/generic\";\nimport React, { useCallback } from \"react\";\nimport { Box } from \"@material-ui/core\";\n\nconst sliderParams = {\n  max: 10,\n  step: 1,\n  min: 1,\n};\n\nexport const PerlinFlowParticleMenu = ({\n  state,\n  set,\n}: PerlinFlowMenuSectionProps) => {\n  return (\n    <Box>\n      <MenuItemWrapper>\n        <MenuSlider\n          title=\"Particle Amount\"\n          value={state.particleAmount}\n          setValue={useCallback(\n            (val: number) => set.particleAmount(val),\n            [set]\n          )}\n          {...sliderParams}\n          max={10000}\n          refresh\n        />\n        <MenuSlider\n          title=\"Max Velocity\"\n          value={state.maxVelocity}\n          setValue={useCallback((val: number) => set.maxVelocity(val), [set])}\n          {...sliderParams}\n          max={15}\n        />\n        <MenuSlider\n          title=\"Mass\"\n          value={state.mass}\n          setValue={useCallback((val: number) => set.mass(val), [set])}\n          {...sliderParams}\n          max={15}\n        />\n      </MenuItemWrapper>\n      <MenuItemWrapper>\n        <MenuSlider\n          title=\"Opacity\"\n          value={state.particleOpacity}\n          labelFormat={formatPercentValue}\n          setValue={useCallback(\n            (val: number) => set.particleOpacity(val),\n            [set]\n          )}\n          min={0.1}\n          step={0.1}\n          max={100}\n        />\n        <MenuSlider\n          title=\"Particle Size\"\n          value={state.particleSize}\n          labelFormat={formatPixelValue}\n          setValue={useCallback((val: number) => set.particleSize(val), [set])}\n          {...sliderParams}\n        />\n        <MenuSlider\n          tooltip={!state.drawTrails ? \"Disabled when not drawing trails\" : \"\"}\n          title=\"Trail Length\"\n          value={state.trailLength}\n          setValue={useCallback((val: number) => set.trailLength(val), [set])}\n          disabled={!state.drawTrails}\n          {...sliderParams}\n          max={100}\n        />\n      </MenuItemWrapper>\n      <MenuItemWrapper>\n        <MenuCheckbox\n          checked={state.drawTrails}\n          setChecked={useCallback((val: boolean) => set.drawTrails(val), [set])}\n          title=\"Draw Trails\"\n        />\n        <MenuCheckbox\n          checked={state.fillTrails}\n          disabled={!state.drawTrails}\n          tooltip={!state.drawTrails ? \"Disabled when not drawing tails\" : \"\"}\n          setChecked={useCallback((val: boolean) => set.fillTrails(val), [set])}\n          title=\"Fill Trails\"\n        />\n        <MenuCheckbox\n          checked={state.avoidBorders}\n          setChecked={useCallback(\n            (val: boolean) => set.avoidBorders(val),\n            [set]\n          )}\n          title=\"Avoid Borders\"\n        />\n        <MenuCheckbox\n          disabled={state.avoidBorders}\n          checked={state.swapSidesAtBorder}\n          setChecked={useCallback(\n            (val: boolean) => set.swapSidesAtBorder(val),\n            [set]\n          )}\n          title=\"Swap Sides at Border\"\n        />\n      </MenuItemWrapper>\n      <MenuItemWrapper>\n        <MenuCheckbox\n          checked={state.randomColor}\n          setChecked={useCallback(\n            (val: boolean) => set.randomColor(val),\n            [set]\n          )}\n          title=\"Random Color\"\n        />\n      </MenuItemWrapper>\n      <ColorPicker\n        tooltip={state.randomColor ? \"Disabled when showing random color\" : \"\"}\n        disabled={state.randomColor}\n        setColor={useCallback((val: string) => set.particleColor(val), [set])}\n        color={state.particleColor}\n        title=\"Particle Color\"\n      />\n    </Box>\n  );\n};\n","import { MenuCheckbox } from \"components/menu/MenuCheckbox/MenuCheckbox\";\nimport { MenuItemWrapper } from \"components/generic\";\nimport React, { useCallback } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport {\n  PerlinFlowMenuSectionProps,\n  PerlinFlowMenuProps,\n} from \"../PerlinFlow.types\";\nimport { ColorPicker } from \"components/menu/ColorPicker/ColorPicker\";\n\nexport const PerlinFlowCanvasMenu = ({\n  p5Instance,\n  state,\n  set,\n}: PerlinFlowMenuSectionProps & PerlinFlowMenuProps) => (\n  <Box>\n    <MenuItemWrapper>\n      <MenuCheckbox\n        checked={state.clearScreen}\n        title=\"Refresh Background\"\n        setChecked={useCallback(\n          (val: boolean) => {\n            p5Instance?.background(state.bgColor);\n            set.viewForceVectors(false);\n            set.clearScreen(val);\n          },\n          [set, p5Instance, state.bgColor]\n        )}\n      />\n      <MenuCheckbox\n        checked={state.clearScreen && state.viewForceVectors}\n        disabled={!state.clearScreen}\n        title=\"Show Force Vectors\"\n        tooltip={\n          !state.clearScreen ? \"Disabled when not refreshing screen\" : \"\"\n        }\n        setChecked={useCallback(\n          (val: boolean) => set.viewForceVectors(val),\n          [set]\n        )}\n      />\n    </MenuItemWrapper>\n    <ColorPicker\n      title=\"Background Color\"\n      color={state.bgColor}\n      setColor={useCallback((val: string) => set.bgColor(val), [set])}\n    />\n  </Box>\n);\n","import { formatPixelValue, formatTimesValue } from \"utils/menu/formatting\";\nimport { MenuSlider } from \"components/menu/MenuSlider/MenuSlider\";\nimport { PerlinFlowMenuSectionProps } from \"../PerlinFlow.types\";\nimport { MenuItemWrapper } from \"components/generic\";\nimport React, { useCallback } from \"react\";\nimport { Box } from \"@material-ui/core\";\n\nconst sliderParams = {\n  min: 1,\n  max: 10,\n  step: 1,\n};\n\nexport const PerlinFlowNoiseMenu = ({\n  state,\n  set,\n}: PerlinFlowMenuSectionProps) => {\n  return (\n    <Box>\n      <MenuItemWrapper>\n        <MenuSlider\n          title=\"Vector Padding\"\n          value={state.vectorPadding}\n          labelFormat={formatPixelValue}\n          setValue={useCallback((val: number) => set.vectorPadding(val), [set])}\n          {...sliderParams}\n          min={5}\n          max={50}\n        />\n        <MenuSlider\n          title=\"Angle Variation\"\n          value={state.angleVariation}\n          setValue={useCallback(\n            (val: number) => set.angleVariation(val),\n            [set]\n          )}\n          {...sliderParams}\n          min={1}\n          max={50}\n        />\n      </MenuItemWrapper>\n      <MenuItemWrapper>\n        <MenuSlider\n          title=\"Perlin X Increment Scale\"\n          value={state.perlinXIncrementScale}\n          labelFormat={formatTimesValue}\n          setValue={useCallback(\n            (val: number) => set.perlinXIncrementScale(val),\n            [set]\n          )}\n          {...sliderParams}\n        />\n        <MenuSlider\n          title=\"Perlin Y Increment Scale\"\n          value={state.perlinYIncrementScale}\n          labelFormat={formatTimesValue}\n          setValue={useCallback(\n            (val: number) => set.perlinYIncrementScale(val),\n            [set]\n          )}\n          {...sliderParams}\n        />\n        <MenuSlider\n          title=\"Noise Speed\"\n          value={state.perlinZIncrementScale}\n          setValue={useCallback(\n            (val: number) => set.perlinZIncrementScale(val),\n            [set]\n          )}\n          min={0}\n          step={0.01}\n          max={5}\n        />\n      </MenuItemWrapper>\n    </Box>\n  );\n};\n","import { styled, Tab, Theme } from \"@material-ui/core\";\n\nexport const StyledTab = styled(Tab)<Theme, { selected?: boolean }>(\n  ({ theme, selected }) => ({\n    ...(!selected\n      ? {\n          color: theme.palette.text.disabled,\n        }\n      : {}),\n    \"&:first-child\": {\n      borderTopLeftRadius: theme.spacing(2),\n    },\n  })\n);\n\nexport const MenuTabsWrapper = styled(\"div\")(({ theme }) => ({\n  position: \"absolute\",\n  display: \"flex\",\n  width: \"100%\",\n  left: 0,\n  top: 0,\n}));\n","import { Box } from \"@material-ui/core\";\nimport React, { Fragment, useState } from \"react\";\nimport { MenuTabsWrapper, StyledTab } from \"./MenuTabs.styled\";\n\nconst TOP_MARGIN = \"48px\";\n\nexport type MenuTabsProps = {\n  children: Array<JSX.Element>;\n  labels: Array<string>;\n};\n\n/**\n * Simple abstraction of the material-ui tab components\n * @param labels Array of strings used to build the tabs\n * @param onSelected Callback that passes the selected index as the parameter\n */\nexport const MenuTabs = ({ children, labels }: MenuTabsProps) => {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  /* errors */\n  if (!labels.length || !children.length) {\n    throw new Error(\n      \"MenuTabs: Please provide an array of atleast one item for the labels/children props\"\n    );\n  }\n\n  if (labels.length !== children.length) {\n    throw new Error(\n      \"MenuTabs: Please have matching lengths for child components and labels\"\n    );\n  }\n\n  return (\n    <Fragment>\n      <MenuTabsWrapper>\n        {labels.map((label, index) => (\n          <StyledTab\n            onClick={() => setSelectedIndex(index)}\n            selected={selectedIndex === index}\n            label={label}\n            key={index}\n          />\n        ))}\n      </MenuTabsWrapper>\n      <Box marginTop={TOP_MARGIN}>{children[selectedIndex]}</Box>\n    </Fragment>\n  );\n};\n","import { StandardIconMenu } from \"components/menu/IconMenu/StandardIconMenu/StandardIconMenu\";\nimport { PerlinFlowParticleMenu } from \"./menu-sections/PerlinFlowParticleMenu\";\nimport { PerlinFlowCanvasMenu } from \"./menu-sections/PerlinFlowCanvasMenu\";\nimport { PerlinFlowNoiseMenu } from \"./menu-sections/PerlinFlowNoiseMenu\";\nimport { MenuWrapper } from \"components/menu/MenuWrapper/MenuWrapper\";\nimport { MenuTabs } from \"components/menu/MenuTabs/MenuTabs\";\nimport { PerlinFlowMenuProps } from \"./PerlinFlow.types\";\nimport { BottomMenu } from \"components/menu/BottomMenu\";\nimport { useGenericReducer } from \"utils/data/state\";\nimport { TIME_TO_IDLE } from \"constants/numbers\";\nimport { useUpdateP5 } from \"hooks/useUpdateP5\";\nimport { useIdle } from \"hooks\";\nimport React from \"react\";\nimport {\n  initialPerlinFlowVars,\n  perlinFlowPresets,\n  PerlinFlowVars,\n} from \"./PerlinFlow.variables\";\n\nexport const PerlinFlowMenu = ({ p5Instance }: PerlinFlowMenuProps) => {\n  const isIdle = useIdle(TIME_TO_IDLE);\n  const { state, set, setState } = useGenericReducer<PerlinFlowVars>(\n    initialPerlinFlowVars\n  );\n\n  useUpdateP5<PerlinFlowVars>(p5Instance, state);\n\n  return (\n    <MenuWrapper p5Instance={p5Instance} setState={setState} show={!isIdle}>\n      <StandardIconMenu initialLoopControl={true} presets={perlinFlowPresets} />\n      <BottomMenu>\n        <MenuTabs labels={[\"Noise\", \"Particle\", \"Canvas\"]}>\n          <PerlinFlowNoiseMenu state={state} set={set} />\n          <PerlinFlowParticleMenu state={state} set={set} />\n          <PerlinFlowCanvasMenu\n            p5Instance={p5Instance}\n            state={state}\n            set={set}\n          />\n        </MenuTabs>\n      </BottomMenu>\n    </MenuWrapper>\n  );\n};\n","import { getPerlinFlowSketch } from \"./PerlinFlow.sketch\";\nimport { PerlinFlowMenu } from \"./PerlinFlow.menu\";\nimport { SketchDiv } from \"components/generic\";\nimport React, { Fragment } from \"react\";\nimport { useP5 } from \"hooks\";\n\nexport const PerlinFlow = () => {\n  const sketch = getPerlinFlowSketch();\n  const { ref, p5Instance } = useP5(sketch);\n\n  return (\n    <Fragment>\n      <SketchDiv ref={ref} />\n      <PerlinFlowMenu p5Instance={p5Instance} />\n    </Fragment>\n  );\n};\n","import p5, { Color } from \"p5\";\nimport { Building } from \"./Building\";\n\nexport const drawWindows = (\n  p: p5,\n  variant: Building[\"windowVariation\"],\n  xStart: number,\n  yStart: number,\n  width: number,\n  height: number,\n  windowSize: number,\n  windowSpacing: number,\n  buildingColor: Color,\n  windowColor: Color,\n  offLightChance: number\n) => {\n  const isSpacingX = variant !== \"horizontal\";\n  const isSpacingY = variant !== \"vertical\";\n\n  const windowAmountX = Math.floor(\n    (width - windowSpacing * (isSpacingX ? 1 : 2)) /\n      (windowSize + (isSpacingX ? windowSpacing : 0))\n  );\n  const windowAmountY = Math.floor(\n    (height - windowSpacing * (isSpacingY ? 1 : 2)) /\n      (windowSize + (isSpacingY ? windowSpacing : 0))\n  );\n\n  const extraXPaddingToCenter =\n    (width -\n      windowSpacing * (isSpacingX ? 1 : 2) -\n      windowAmountX * (windowSize + (isSpacingX ? windowSpacing : 0))) /\n    2;\n  const extraYPaddingToCenter =\n    (height -\n      windowSpacing * (isSpacingY ? 1 : 2) -\n      windowAmountY * (windowSize + (isSpacingY ? windowSpacing : 0))) /\n    2;\n\n  if (windowAmountX > 0 && windowAmountY > 0) {\n    Array(windowAmountY)\n      .fill(null)\n      .forEach((_, yi) => {\n        Array(windowAmountX)\n          .fill(null)\n          .forEach((_, xi) => {\n            const x =\n              xStart +\n              extraXPaddingToCenter +\n              windowSpacing +\n              xi * (windowSize + (isSpacingX ? windowSpacing : 0));\n            const y =\n              yStart +\n              extraYPaddingToCenter +\n              windowSpacing +\n              yi * (windowSize + (isSpacingY ? windowSpacing : 0));\n\n            if (Math.random() < offLightChance) {\n              p.fill(p.lerpColor(buildingColor, p.color(\"#000\"), 0.2));\n            } else {\n              p.fill(windowColor);\n            }\n\n            p.rect(x, y, windowSize, windowSize);\n          });\n      });\n  }\n};\n","import { drawWindows } from \"./Building.utils\";\nimport p5, { Color, Vector } from \"p5\";\n\n// local p5 instance to access p5 utilities and since some of the p5 constructor types are broken\nconst p = new p5(() => {});\n\nexport type Building = {\n  windowVariation: \"horizontal\" | \"vertical\" | \"tiled\";\n  darkenSideWindowAmount: number;\n  sidePerspectiveRatio: number;\n  darkenSideAmount: number;\n  offLightChance: number;\n  windowSpacing: number;\n  windowSize: number;\n  windowColor: Color;\n  location: Vector;\n  height: number;\n  width: number;\n  color: Color;\n  display: (this: Building, p: p5) => void;\n};\n\n// type safed props\ntype Props = {\n  darkenSideWindowAmount?: Building[\"darkenSideWindowAmount\"];\n  sidePerspectiveRatio?: Building[\"sidePerspectiveRatio\"];\n  darkenSideAmount?: Building[\"darkenSideAmount\"];\n  windowVariation?: Building[\"windowVariation\"];\n  offLightChance?: Building[\"offLightChance\"];\n  windowSpacing?: Building[\"windowSpacing\"];\n  windowColor?: Building[\"windowColor\"];\n  windowSize?: Building[\"windowSize\"];\n  location: Building[\"location\"];\n  height: Building[\"height\"];\n  color?: Building[\"color\"];\n  width: Building[\"width\"];\n};\n\n/**\n * TODO\n * @param params\n */\nexport function createBuilding({\n  windowColor = p.color(\"#FFF\"),\n  darkenSideWindowAmount = 0.45,\n  sidePerspectiveRatio = 0.15,\n  windowVariation = \"tiled\",\n  darkenSideAmount = 0.25,\n  color = p.color(\"#000\"),\n  offLightChance = 0.25,\n  windowSpacing = 5,\n  windowSize = 3,\n  location,\n  height,\n  width,\n}: Props): Building {\n  return {\n    darkenSideWindowAmount,\n    sidePerspectiveRatio,\n    darkenSideAmount,\n    windowSize,\n    windowSpacing,\n    windowVariation,\n    offLightChance,\n    windowColor,\n    location,\n    height,\n    width,\n    color,\n    display(p) {\n      p.noStroke();\n\n      // find the details of the actual face of the building and the side perspective\n      const sidePerspectiveWidth = this.width * this.sidePerspectiveRatio;\n      const faceStartX = this.location.x + sidePerspectiveWidth;\n      const faceWidth = this.width - sidePerspectiveWidth;\n      const sidePerspectiveColor = p.lerpColor(\n        this.color,\n        p.color(\"#000\"),\n        this.darkenSideAmount\n      );\n\n      // side perspective\n      p.fill(sidePerspectiveColor);\n      p.rect(\n        this.location.x,\n        this.location.y,\n        sidePerspectiveWidth,\n        this.height\n      );\n\n      // front face\n      p.fill(this.color);\n      p.rect(faceStartX, this.location.y, faceWidth, this.height);\n\n      // Side\n      drawWindows(\n        p,\n        this.windowVariation,\n        this.location.x,\n        this.location.y,\n        sidePerspectiveWidth,\n        this.height,\n        this.windowSize,\n        this.windowSpacing,\n        sidePerspectiveColor,\n        p.lerpColor(\n          this.windowColor,\n          p.color(\"#000\"),\n          this.darkenSideWindowAmount\n        ),\n        this.offLightChance\n      );\n\n      // Face\n      drawWindows(\n        p,\n        this.windowVariation,\n        faceStartX,\n        this.location.y,\n        faceWidth,\n        this.height,\n        this.windowSize,\n        this.windowSpacing,\n        this.color,\n        this.windowColor,\n        this.offLightChance\n      );\n    },\n  };\n}\n","import { Building, createBuilding } from \"factories/Building/Building\";\nimport { randomlyVaryColor } from \"utils/drawing/colors\";\nimport { P5InstanceInitialized } from \"types/p5\";\n\nimport { CityscapeVars } from \"./Cityscape.variables\";\n\n// If we're gonna have animations might have to convert this to returning an array of stars and rendering them in the draw func\nexport const drawStars = (\n  p: P5InstanceInitialized<CityscapeVars>,\n  starAmount: number\n) => {\n  const { starColor, minStarSize, maxStarSize } = p.variables;\n\n  const maxY = p.windowHeight; // Note: maybe add a fadeout max height?\n  const minY = 0;\n  const minX = 0;\n  const maxX = p.windowWidth;\n  const color = p.color(starColor);\n\n  for (let i = 0; i < starAmount; i++) {\n    const x = p.random(minX, maxX);\n    const y = p.random(minY, maxY);\n    const d = p.random(minStarSize, maxStarSize);\n\n    color.setAlpha(p.random(200, 255));\n    p.fill(color);\n    p.circle(x, y, d);\n  }\n};\n\nexport const createAllRowsOfRandomBuildings = (\n  p: P5InstanceInitialized<CityscapeVars>,\n  rowAmount: number\n) => {\n  const matrix = [];\n\n  for (let i = 0; i < rowAmount; i++) {\n    const row = createRowOfRandomBuildings(p, i, rowAmount);\n    matrix.push(row);\n  }\n\n  return matrix;\n};\n\nexport const createRowOfRandomBuildings = (\n  p: P5InstanceInitialized<CityscapeVars>,\n  rowIndex: number,\n  rowAmount: number\n): Building[] => {\n  const { maxXIncrement } = p.variables;\n  const row = [];\n  let currentStartX = -150; // Maybe turn into a variable? will have to investigate the effects\n  let isAddingBuilding = true;\n\n  while (isAddingBuilding) {\n    // Add the building and update the startX\n    const newBuilding = createRandomBuilding(\n      p,\n      currentStartX,\n      p.windowHeight,\n      rowIndex,\n      rowAmount\n    );\n    row.push(newBuilding);\n    currentStartX = newBuilding.location.x + newBuilding.width;\n\n    // Check if we're done with the row\n    if (currentStartX + maxXIncrement > p.windowWidth) {\n      isAddingBuilding = false;\n    }\n  }\n\n  return row;\n};\n\nexport const createRandomBuilding = (\n  p: P5InstanceInitialized<CityscapeVars>,\n  startX: number,\n  startY: number,\n  rowIndex: number,\n  rowAmount: number\n) => {\n  const {\n    increaseMaxHeightAmount,\n    bottomSkyColor,\n    minXIncrement,\n    maxXIncrement,\n    colorVariance,\n    buildingColor,\n    fogIncrement,\n    windowColor,\n    maxHeight,\n    minHeight,\n    minWidth,\n    maxWidth,\n  } = p.variables;\n\n  // Randomize\n  const newMaxHeight =\n    maxHeight + (rowAmount - (rowIndex + 1)) * increaseMaxHeightAmount; // Increase the max height of distant buildings if we can\n  const height = p.random(minHeight, newMaxHeight);\n  const width = p.random(minWidth, maxWidth);\n  const xIncrement = p.random(minXIncrement, maxXIncrement);\n  const windowVariation = p.random([\"tiled\", \"horizontal\", \"vertical\"]);\n  const lerpToColor = p.lerpColor(\n    p.color(bottomSkyColor),\n    p.color(\"#000\"),\n    0.5\n  );\n\n  // We calculate the colours as a interpolation between the background color and the building colour, depending on the row index\n  // The lower the row index, the closer the building is to the background. Because we need to draw them first.\n  const lerpColorAmount = (rowAmount - (rowIndex + 1)) * fogIncrement;\n  const color = p.lerpColor(\n    randomlyVaryColor(p, p.color(buildingColor), colorVariance),\n    lerpToColor,\n    lerpColorAmount\n  );\n  const variedWindowColor = p.lerpColor(\n    randomlyVaryColor(p, p.color(windowColor), colorVariance),\n    lerpToColor,\n    lerpColorAmount / 1.5\n  );\n\n  // Finalise\n  const x = startX + xIncrement;\n  const y = startY - height;\n  const location = p.createVector(x, y);\n\n  const building = createBuilding({\n    windowColor: variedWindowColor,\n    windowVariation,\n    location,\n    height,\n    width,\n    color,\n  });\n\n  return building;\n};\n","import p5 from \"p5\";\n\nimport { PresetData } from \"components/menu/IconMenu/Presets/Presets.types\";\nimport { LIGHT, METAL, NIGHT_SKY, SUNSET_ORANGE } from \"constants/colors\";\nimport { P5Defaults } from \"types/p5\";\n\nexport interface CityscapeVars extends P5Defaults {\n  increaseMaxHeightAmount: number;\n  minXIncrement: number;\n  maxXIncrement: number;\n  colorVariance: number;\n  fogIncrement: number;\n  minStarSize: number;\n  maxStarSize: number;\n  starAmount: number;\n  maxHeight: number;\n  minHeight: number;\n  rowAmount: number;\n  maxWidth: number;\n  minWidth: number;\n  bottomSkyColor: string;\n  buildingColor: string;\n  windowColor: string;\n  topSkyColor: string;\n  starColor: string;\n}\n\n/* -------------------------------------------------------------------------- */\n/*                                  DEFAULTS                                  */\n/* -------------------------------------------------------------------------- */\n\nexport const initialCityscapeVars: CityscapeVars = {\n  increaseMaxHeightAmount: 90,\n  colorVariance: 0.025,\n  fogIncrement: 0.2,\n  maxXIncrement: 40,\n  minXIncrement: 15,\n  starAmount: 3000,\n  minHeight: 100,\n  maxHeight: 350,\n  minStarSize: 1,\n  maxStarSize: 2,\n  maxWidth: 200,\n  minWidth: 100,\n  rowAmount: 3,\n  bottomSkyColor: SUNSET_ORANGE,\n  topSkyColor: NIGHT_SKY,\n  buildingColor: METAL,\n  starColor: \"#FFFFFF\",\n  windowColor: LIGHT,\n  refresh: (p: p5) => {\n    p.setup();\n  },\n};\n\n/* -------------------------------------------------------------------------- */\n/*                                   PRESETS                                  */\n/* -------------------------------------------------------------------------- */\n\nexport const hellscape: CityscapeVars = {\n  increaseMaxHeightAmount: 45,\n  bottomSkyColor: \"#590903\",\n  buildingColor: \"#0A0000\",\n  topSkyColor: \"#000000\",\n  windowColor: \"#FF1A1A\",\n  colorVariance: 0.025,\n  starColor: \"#ff0000\",\n  fogIncrement: 0.1,\n  maxXIncrement: 40,\n  minXIncrement: 15,\n  starAmount: 6500,\n  minHeight: 100,\n  maxHeight: 175,\n  minStarSize: 1,\n  maxStarSize: 1,\n  rowAmount: 12,\n  maxWidth: 65,\n  minWidth: 35,\n  refresh: (p: p5) => {\n    p.setup();\n  },\n};\n\nexport const neonCity: CityscapeVars = {\n  bottomSkyColor: \"#210240\",\n  increaseMaxHeightAmount: 30,\n  buildingColor: \"#25052e\",\n  topSkyColor: \"#ff00ea\",\n  windowColor: \"#e17af5\",\n  colorVariance: 0.025,\n  starColor: \"#e6e6e6\",\n  fogIncrement: 0.05,\n  maxXIncrement: 40,\n  minXIncrement: 15,\n  starAmount: 15000,\n  maxHeight: 350,\n  maxStarSize: 3,\n  minHeight: 100,\n  minStarSize: 1,\n  maxWidth: 133,\n  rowAmount: 12,\n  minWidth: 69,\n  refresh: (p: p5) => {\n    p.setup();\n  },\n};\n\nexport const cityscapePresets: PresetData<CityscapeVars> = [\n  {\n    name: \"Default\",\n    vars: initialCityscapeVars,\n  },\n  {\n    name: \"Hellscape\",\n    vars: hellscape,\n  },\n  {\n    name: \"Neon city\",\n    vars: neonCity,\n  },\n];\n","import p5 from \"p5\";\n\nexport type P5Instance<T> = p5 & { variables?: T & P5Defaults };\n\nexport type P5InstanceInitialized<T> = p5 & { variables: T & P5Defaults };\n\nexport type P5Defaults = { refresh: (p: P5Instance<any>) => void };\n\nexport type SketchInstance = (p: P5Instance<null>) => void;\n\n// Type guard to see if variables is defined\nexport const isP5InstanceInitialized = <T>(\n  p: P5Instance<T>\n): p is P5InstanceInitialized<T> => p.variables !== undefined;\n","import { createAllRowsOfRandomBuildings, drawStars } from \"./Cityscape.util\";\nimport { initialCityscapeVars, CityscapeVars } from \"./Cityscape.variables\";\nimport { checkForMismatchedSize } from \"utils/misc/checkForMismatchedSize\";\nimport { isP5InstanceInitialized, P5Instance } from \"types/p5\";\nimport { gradientRect } from \"utils/drawing/gradients\";\n\nexport const getCityscapeSketch = () => {\n  return (p: P5Instance<CityscapeVars>) => {\n    p.variables = initialCityscapeVars;\n\n    const drawBackground = () => {\n      if (isP5InstanceInitialized(p)) {\n        const { topSkyColor, bottomSkyColor, starAmount } = p.variables;\n\n        gradientRect(\n          p,\n          0,\n          0,\n          p.windowWidth,\n          p.windowHeight,\n          p.color(topSkyColor),\n          p.color(bottomSkyColor),\n          \"y\"\n        );\n        // Draw stars\n        drawStars(p, starAmount);\n      }\n    };\n\n    p.setup = () => {\n      p.createCanvas(p.windowWidth, p.windowHeight);\n      p.pixelDensity(1);\n      drawBackground();\n      p.draw();\n    };\n\n    p.windowResized = () => {\n      p.resizeCanvas(p.windowWidth, p.windowHeight);\n      p.setup();\n      p.draw(); // cause we're no looping it\n    };\n\n    p.draw = () => {\n      checkForMismatchedSize(p);\n\n      if (isP5InstanceInitialized(p)) {\n        // Draw buildings\n        const rowMatrix = createAllRowsOfRandomBuildings(\n          p,\n          p.variables.rowAmount\n        );\n        rowMatrix.flat().forEach((b) => b.display(p));\n        p.noLoop();\n      }\n    };\n  };\n};\n","import p5, { Color } from \"p5\";\n\n/* draws a rectangle with a linear gradient line-by-line */\nexport const gradientRect = (\n  p: p5,\n  x: number,\n  y: number,\n  w: number,\n  h: number,\n  c1: Color,\n  c2: Color,\n  axis: \"x\" | \"y\"\n) => {\n  p.noFill();\n  if (axis === \"y\") {\n    // Top to bottom gradient\n    for (let i = y; i <= y + h; i++) {\n      let inter = p.map(i, y, y + h, 0, 1);\n      let c = p.lerpColor(c1, c2, inter);\n      p.stroke(c);\n      p.line(x, i, x + w, i);\n    }\n  } else if (axis === \"x\") {\n    // Left to right gradient\n    for (let i = x; i <= x + w; i++) {\n      let inter = p.map(i, x, x + w, 0, 1);\n      let c = p.lerpColor(c1, c2, inter);\n      p.stroke(c);\n      p.line(i, y, i, y + h);\n    }\n  }\n  // reset vars\n  p.noFill();\n  p.noStroke();\n};\n\n/**\n * draws a circle with a linear gradient line-by-line with some fancy trig\n * @param p p5 Instance\n * @param x x position\n * @param y y position\n * @param r radius\n * @param c1 color 1\n * @param c2 color 2\n * @param axis axis\n * @param dontDrawOn optional function to stop drawing on certain condition\n */\nexport const gradientCircleLinear = (\n  p: p5,\n  x: number,\n  y: number,\n  r: number,\n  c1: Color,\n  c2: Color,\n  axis: \"y\", //todo X when needed\n  dontDrawOn?: (i: number) => boolean\n) => {\n  p.noFill();\n  // fixes bug\n  x = Math.round(x);\n  y = Math.round(y);\n\n  // for top down linear gradient\n  if (axis === \"y\") {\n    for (let i = 0; i <= r * 2; i++) {\n      const angle = p.asin((r - i) / r);\n      const cx = p.cos(angle) * r;\n      const inter = p.map(i, 0, r * 2, 0, 1);\n      const c = p.lerpColor(c1, c2, inter);\n      p.stroke(c);\n      if (!(dontDrawOn && dontDrawOn(i))) {\n        p.line(x - cx, y + i, x + cx, y + i);\n      }\n    }\n  }\n\n  // reset vars\n  p.noFill();\n  p.noStroke();\n};\n\n/**\n * draws a circle with a radial gradient.\n * @param p p5 Instance\n * @param x x position\n * @param y y position\n * @param r radius\n * @param c1 color 1\n * @param c2 color 2\n * @param performanceFactor increase the increment to increase performance (colours wont be as smooth)\n * @param dontDrawOn optional function to stop drawing on certain condition\n */\nexport const gradientCircleRadial = (\n  p: p5,\n  x: number,\n  y: number,\n  r: number,\n  c1: Color,\n  c2: Color,\n  performanceFactor?: number,\n  dontDrawOn?: (i: number) => boolean\n) => {\n  p.noFill();\n  // fixes bug\n  x = Math.round(x);\n  y = Math.round(y);\n\n  for (let i = r; i > 0; i -= performanceFactor || 1) {\n    const inter = p.map(i, 0, r, 0, 1);\n    const c = p.lerpColor(c1, c2, inter);\n    p.fill(c);\n    if (!(dontDrawOn && dontDrawOn(i))) {\n      p.ellipse(x, y, i * 2, i * 2);\n    }\n  }\n\n  // reset vars\n  p.noFill();\n  p.noStroke();\n};\n\nexport const gradientLine = (\n  p: p5,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  color1: string,\n  color2: string,\n  steps = 10,\n  size = 1\n) => {\n  const initialVector = p.createVector(x1, y1);\n  const pColor1 = p.color(color1);\n  const pColor2 = p.color(color2);\n  p.stroke(pColor1);\n  p.ellipse(initialVector.x, initialVector.y, size, size);\n\n  const d = p.dist(x1, y2, x2, y2);\n\n  for (let i = 0; i < d; i++) {\n    const step = p.map(i, 0, d, 0, 1);\n    const vector = initialVector.lerp(x2, y2, 0, step);\n    const color = p.lerpColor(pColor1, pColor2, step);\n    p.stroke(color);\n    p.ellipse(vector.x, vector.y, 1, 1);\n  }\n};\n","import React, { useCallback } from \"react\";\nimport { Box } from \"@material-ui/core\";\n\nimport { MenuSlider } from \"components/menu/MenuSlider/MenuSlider\";\nimport { MenuItemWrapper } from \"components/generic\";\n\nimport { CityscapeMenuSectionProps } from \"../Cityscape.types\";\n\nconst sliderParams = {\n  min: 10,\n  max: 750,\n  step: 1,\n};\n\nexport const CityscapeBuildingMenu = ({\n  state,\n  set,\n}: CityscapeMenuSectionProps) => {\n  return (\n    <Box>\n      <MenuItemWrapper>\n        <MenuSlider\n          setValue={useCallback((val: number) => set.minHeight(val), [set])}\n          value={state.minHeight}\n          title=\"Min height\"\n          {...sliderParams}\n          max={state.maxHeight}\n          refresh\n        />\n        <MenuSlider\n          setValue={useCallback((val: number) => set.maxHeight(val), [set])}\n          value={state.maxHeight}\n          title=\"Max height\"\n          {...sliderParams}\n          refresh\n        />\n      </MenuItemWrapper>\n      <MenuItemWrapper>\n        <MenuSlider\n          setValue={useCallback((val: number) => set.minWidth(val), [set])}\n          value={state.minWidth}\n          title=\"Min width\"\n          {...sliderParams}\n          max={state.maxWidth}\n          refresh\n        />\n        <MenuSlider\n          setValue={useCallback((val: number) => set.maxWidth(val), [set])}\n          value={state.maxWidth}\n          title=\"Max width\"\n          {...sliderParams}\n          refresh\n        />\n      </MenuItemWrapper>\n      <MenuItemWrapper>\n        <MenuSlider\n          setValue={useCallback((val: number) => set.rowAmount(val), [set])}\n          value={state.rowAmount}\n          title=\"Row amount\"\n          {...sliderParams}\n          max={25}\n          min={1}\n          refresh\n        />\n        <MenuSlider\n          value={state.increaseMaxHeightAmount}\n          title=\"Max height increase from new row\"\n          {...sliderParams}\n          max={200}\n          min={0}\n          setValue={useCallback(\n            (val: number) => set.increaseMaxHeightAmount(val),\n            [set]\n          )}\n          refresh\n        />\n      </MenuItemWrapper>\n    </Box>\n  );\n};\n","import React, { useCallback } from \"react\";\nimport { Box } from \"@material-ui/core\";\n\nimport { ColorPicker } from \"components/menu/ColorPicker/ColorPicker\";\nimport { MenuSlider } from \"components/menu/MenuSlider/MenuSlider\";\nimport { MenuItemWrapper } from \"components/generic\";\n\nimport { CityscapeMenuSectionProps } from \"../Cityscape.types\";\n\nconst sliderParams = {\n  min: 0,\n  max: 1,\n  step: 0.01,\n};\n\nexport const CityscapeColorMenu = ({\n  state,\n  set,\n}: CityscapeMenuSectionProps) => {\n  return (\n    <Box>\n      <MenuItemWrapper>\n        <ColorPicker\n          setColor={useCallback((val: string) => set.topSkyColor(val), [set])}\n          color={state.topSkyColor}\n          title=\"Top sky color\"\n          refresh\n        />\n        <ColorPicker\n          color={state.bottomSkyColor}\n          title=\"Bottom sky color\"\n          refresh\n          setColor={useCallback(\n            (val: string) => set.bottomSkyColor(val),\n            [set]\n          )}\n        />\n        <ColorPicker\n          setColor={useCallback((val: string) => set.buildingColor(val), [set])}\n          color={state.buildingColor}\n          title=\"Building color\"\n          refresh\n        />\n        <ColorPicker\n          setColor={useCallback((val: string) => set.windowColor(val), [set])}\n          color={state.windowColor}\n          title=\"Window color\"\n          refresh\n        />\n      </MenuItemWrapper>\n      <MenuItemWrapper>\n        <MenuSlider\n          setValue={useCallback((val: number) => set.colorVariance(val), [set])}\n          value={state.colorVariance}\n          title=\"Color variance\"\n          {...sliderParams}\n          min={0.01}\n          refresh\n        />\n        <MenuSlider\n          setValue={useCallback((val: number) => set.fogIncrement(val), [set])}\n          value={state.fogIncrement}\n          title=\"Fog increment\"\n          {...sliderParams}\n          refresh\n        />\n      </MenuItemWrapper>\n    </Box>\n  );\n};\n","import React, { useCallback } from \"react\";\nimport { Box } from \"@material-ui/core\";\n\nimport { ColorPicker } from \"components/menu/ColorPicker/ColorPicker\";\nimport { MenuSlider } from \"components/menu/MenuSlider/MenuSlider\";\nimport { MenuItemWrapper } from \"components/generic\";\n\nimport { CityscapeMenuSectionProps } from \"../Cityscape.types\";\n\nconst sliderParams = {\n  min: 0,\n  max: 15,\n  step: 1,\n};\n\nexport const CityscapeStarsMenu = ({\n  state,\n  set,\n}: CityscapeMenuSectionProps) => {\n  return (\n    <Box>\n      <MenuItemWrapper>\n        <ColorPicker\n          setColor={useCallback((val: string) => set.starColor(val), [set])}\n          color={state.starColor}\n          title=\"Star color\"\n          refresh\n        />\n      </MenuItemWrapper>\n      <MenuItemWrapper>\n        <MenuSlider\n          setValue={useCallback((val: number) => set.starAmount(val), [set])}\n          value={state.starAmount}\n          title=\"Star amount\"\n          {...sliderParams}\n          max={15000}\n          refresh\n        />\n        <MenuSlider\n          setValue={useCallback((val: number) => set.minStarSize(val), [set])}\n          value={state.minStarSize}\n          title=\"Min star size\"\n          {...sliderParams}\n          max={state.maxStarSize}\n          refresh\n        />\n        <MenuSlider\n          setValue={useCallback((val: number) => set.maxStarSize(val), [set])}\n          value={state.maxStarSize}\n          title=\"Max star size\"\n          {...sliderParams}\n          refresh\n        />\n      </MenuItemWrapper>\n    </Box>\n  );\n};\n","import React from \"react\";\n\nimport { useGenericReducer } from \"utils/data/state\";\nimport { TIME_TO_IDLE } from \"constants/numbers\";\nimport { useUpdateP5 } from \"hooks/useUpdateP5\";\nimport { P5Instance } from \"types/p5\";\nimport { useIdle } from \"hooks\";\n\nimport { StandardIconMenu } from \"components/menu/IconMenu/StandardIconMenu/StandardIconMenu\";\nimport { MenuWrapper } from \"components/menu/MenuWrapper/MenuWrapper\";\nimport { MenuTabs } from \"components/menu/MenuTabs/MenuTabs\";\nimport { BottomMenu } from \"components/menu/BottomMenu\";\n\nimport {\n  initialCityscapeVars,\n  CityscapeVars,\n  cityscapePresets,\n} from \"./Cityscape.variables\";\nimport { CityscapeBuildingMenu } from \"./menu-sections/CityscapeBuildingMenu\";\nimport { CityscapeColorMenu } from \"./menu-sections/CityscapeColorMenu\";\nimport { CityscapeStarsMenu } from \"./menu-sections/CityscapeStarsMenu\";\n\ntype Props = {\n  p5Instance: P5Instance<CityscapeVars> | null;\n};\n\nconst DEBOUNCE_DELAY = 500;\n\nexport const CityscapeMenu = ({ p5Instance }: Props) => {\n  const isIdle = useIdle(TIME_TO_IDLE);\n  const { state, set, setState } =\n    useGenericReducer<CityscapeVars>(initialCityscapeVars);\n\n  useUpdateP5<CityscapeVars>(p5Instance, state);\n\n  return (\n    <MenuWrapper\n      debounceDelay={DEBOUNCE_DELAY}\n      p5Instance={p5Instance}\n      setState={setState}\n      show={!isIdle}\n    >\n      <StandardIconMenu initialLoopControl presets={cityscapePresets} />\n      <BottomMenu>\n        <MenuTabs labels={[\"Building\", \"Color\", \"Stars\"]}>\n          <CityscapeBuildingMenu set={set} state={state} />\n          <CityscapeColorMenu set={set} state={state} />\n          <CityscapeStarsMenu set={set} state={state} />\n        </MenuTabs>\n      </BottomMenu>\n    </MenuWrapper>\n  );\n};\n","import { getCityscapeSketch } from \"./Cityscape.sketch\";\nimport { CityscapeMenu } from \"./Cityscape.menu\";\nimport { SketchDiv } from \"components/generic\";\nimport React, { Fragment } from \"react\";\nimport { useP5 } from \"hooks\";\n\nexport const Cityscape = () => {\n  const sketch = getCityscapeSketch();\n  const { ref, p5Instance } = useP5(sketch);\n\n  return (\n    <Fragment>\n      <SketchDiv ref={ref} />\n      <CityscapeMenu p5Instance={p5Instance} />\n    </Fragment>\n  );\n};\n","import { P5Defaults } from \"types/p5\";\nimport p5 from \"p5\";\n\nexport interface QuantumHarmonicsVars extends P5Defaults {\n  // wave source stuff\n  numSources: number;\n  sourceFrequency: number;\n  sourceAmplitude: number;\n  phaseOffset: number;\n\n  // visual settings\n  colorCycleSpeed: number; // how fast colors shift through spectrum\n  waveDecay: number;\n  interferenceThreshold: number; // minimum amplitude to show colors\n  backgroundAlpha: number;\n\n  // animation speed\n  timeScale: number;\n  rotationSpeed: number; // how fast sources rotate around center\n\n  // what to show\n  showWaveSources: boolean;\n  showInterferenceField: boolean;\n  \n  // drag state\n  isDragging: boolean;\n  draggedSourceIndex: number;\n}\n\nexport const initialQuantumHarmonicsVars: QuantumHarmonicsVars = {\n  // wave sources\n  numSources: 4,\n  sourceFrequency: 0.02,\n  sourceAmplitude: 100,\n  phaseOffset: 0,\n\n  // colors and visuals\n  colorCycleSpeed: 0.02,\n  waveDecay: 0.8,\n  interferenceThreshold: 0.3,\n  backgroundAlpha: 20,\n\n  // timing\n  timeScale: 0.4,\n  rotationSpeed: 0.005,\n\n  // toggles\n  showWaveSources: true,\n  showInterferenceField: true,\n\n  // interaction state\n  isDragging: false,\n  draggedSourceIndex: -1,\n\n  refresh: (p: p5) => {\n    p.setup();\n  },\n};\n","import { checkForMismatchedSize } from \"utils/misc/checkForMismatchedSize\";\nimport {\n  initialQuantumHarmonicsVars,\n  QuantumHarmonicsVars,\n} from \"./QuantumHarmonics.variables\";\nimport { P5Instance } from \"types/p5\";\n\ninterface WaveSource {\n  x: number;\n  y: number;\n  frequency: number;\n  amplitude: number;\n  phase: number;\n}\n\nexport const getQuantumHarmonicsSketch = () => {\n  return (p: P5Instance<QuantumHarmonicsVars>) => {\n    p.variables = initialQuantumHarmonicsVars;\n\n    let waveSources: WaveSource[] = [];\n    let time = 0;\n    let colorOffset = 0;\n\n    // optimize with pre-calculated wave field grid\n    let waveFieldResolution = 6; // sample every N pixels\n    let waveField: number[][] = [];\n    let fieldWidth = 0;\n    let fieldHeight = 0;\n\n    const initializeWaveSources = () => {\n      if (!p.variables) return;\n\n      waveSources = [];\n      const { numSources, sourceFrequency, sourceAmplitude } = p.variables;\n\n      for (let i = 0; i < numSources; i++) {\n        const angle = (i / numSources) * p.TWO_PI;\n        const radius = Math.min(p.width, p.height) * 0.25; // smaller radius\n        const centerX = p.width / 2;\n        const centerY = p.height / 2;\n\n        waveSources.push({\n          x: centerX + Math.cos(angle) * radius,\n          y: centerY + Math.sin(angle) * radius,\n          frequency: sourceFrequency,\n          amplitude: sourceAmplitude,\n          phase: (i * p.PI) / 2, // phase offset between sources\n        });\n      }\n    };\n\n    const calculateWaveField = () => {\n      if (!p.variables) return;\n\n      fieldWidth = Math.ceil(p.width / waveFieldResolution);\n      fieldHeight = Math.ceil(p.height / waveFieldResolution);\n      waveField = Array(fieldWidth)\n        .fill(null)\n        .map(() => Array(fieldHeight).fill(0));\n\n      const { waveDecay, phaseOffset, rotationSpeed } = p.variables;\n      const currentTime = time; // avoid unsafe reference\n\n      for (let x = 0; x < fieldWidth; x++) {\n        for (let y = 0; y < fieldHeight; y++) {\n          const worldX = x * waveFieldResolution;\n          const worldY = y * waveFieldResolution;\n          let totalAmplitude = 0;\n\n          // calculate interference from all sources\n          waveSources.forEach((source, index) => {\n            const distance = p.dist(worldX, worldY, source.x, source.y);\n            // sin wave with distance-based phase shift + time evolution + decay\n            const waveValue =\n              source.amplitude *\n              Math.sin(\n                source.frequency * distance -\n                  currentTime * p.variables!.timeScale +\n                  source.phase +\n                  phaseOffset +\n                  rotationSpeed * currentTime * index\n              ) *\n              Math.exp(-distance * waveDecay * 0.002); // exponential decay over distance\n\n            totalAmplitude += waveValue;\n          });\n\n          waveField[x][y] = totalAmplitude;\n        }\n      }\n    };\n\n    const drawBackground = () => {\n      if (!p.variables) return;\n      p.background(15, 15, 25, p.variables.backgroundAlpha); // dark blue\n    };\n\n    const drawInterferenceField = () => {\n      if (!p.variables || !p.variables.showInterferenceField) return;\n\n      p.push();\n      p.noStroke();\n\n      // draw interference patterns as colored pixels\n      for (let x = 0; x < fieldWidth - 1; x++) {\n        for (let y = 0; y < fieldHeight - 1; y++) {\n          const amplitude = waveField[x][y];\n          const normalizedAmplitude = Math.abs(amplitude);\n\n          if (normalizedAmplitude > p.variables.interferenceThreshold * 50) {\n            const worldX = x * waveFieldResolution;\n            const worldY = y * waveFieldResolution;\n\n            // colors based on interference intensity and phase\n            const hue = (((colorOffset + amplitude * 2) % 360) + 360) % 360;\n            const saturation = p.map(normalizedAmplitude, 0, 150, 40, 100);\n            const brightness = p.map(normalizedAmplitude, 0, 150, 30, 90);\n            const alpha = p.map(normalizedAmplitude, 0, 150, 0.1, 0.8);\n\n            p.fill(hue, saturation, brightness, alpha);\n            p.rect(worldX, worldY, waveFieldResolution, waveFieldResolution);\n          }\n        }\n      }\n\n      // draw contour lines for high-energy zones\n      p.strokeWeight(1);\n      p.noFill();\n\n      const contourLevels = [80, 120, 160]; // high amplitude thresholds\n      contourLevels.forEach((threshold, index) => {\n        const hue = (colorOffset + index * 60) % 360;\n        p.stroke(hue, 80, 90, 0.6);\n\n        for (let x = 1; x < fieldWidth - 1; x++) {\n          for (let y = 1; y < fieldHeight - 1; y++) {\n            const val = Math.abs(waveField[x][y]);\n            if (val > threshold && val < threshold + 20) {\n              const worldX = x * waveFieldResolution;\n              const worldY = y * waveFieldResolution;\n              p.point(worldX, worldY);\n            }\n          }\n        }\n      });\n\n      p.pop();\n    };\n\n    const drawWaveSources = () => {\n      if (!p.variables || !p.variables.showWaveSources) return;\n\n      p.push();\n\n      waveSources.forEach((source, index) => {\n        const hue = index * 60; // fixed colors instead of cycling\n        const isHovered = p.dist(p.mouseX, p.mouseY, source.x, source.y) < 25;\n        const isDraggedSource = p.variables!.draggedSourceIndex === index;\n\n        // pulsing core\n        const pulseSize = 12 + Math.sin(time * 0.15 + index * p.PI) * 4;\n        const coreOpacity = isDraggedSource ? 1.0 : isHovered ? 0.9 : 0.8;\n        p.fill(hue, 70, 100, coreOpacity);\n        p.noStroke();\n        p.circle(source.x, source.y, pulseSize);\n\n        // outer ring\n        p.noFill();\n        p.stroke(hue, 50, 90, 0.6);\n        p.strokeWeight(2);\n        p.circle(source.x, source.y, pulseSize + 8);\n\n        // subtle ripple rings\n        p.strokeWeight(1);\n        for (let r = 25; r < 50; r += 15) {\n          const ripplePhase = (time * 0.08 + index) % p.TWO_PI;\n          const rippleRadius = r + Math.sin(ripplePhase) * 3;\n          const rippleOpacity = p.map(r, 25, 50, 0.3, 0.1);\n          p.stroke(hue, 40, 80, rippleOpacity);\n          p.circle(source.x, source.y, rippleRadius);\n        }\n      });\n\n      p.pop();\n    };\n\n    const getSourceIndexAt = (x: number, y: number): number => {\n      for (let i = 0; i < waveSources.length; i++) {\n        if (p.dist(x, y, waveSources[i].x, waveSources[i].y) < 25) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n    const handleMousePressed = () => {\n      if (!p.variables) return;\n\n      const sourceIndex = getSourceIndexAt(p.mouseX, p.mouseY);\n      if (sourceIndex !== -1) {\n        p.variables.isDragging = true;\n        p.variables.draggedSourceIndex = sourceIndex;\n      }\n    };\n\n    const handleMouseDragged = () => {\n      if (\n        !p.variables ||\n        !p.variables.isDragging ||\n        p.variables.draggedSourceIndex === -1\n      )\n        return;\n\n      // move the dragged source to mouse position\n      const index = p.variables.draggedSourceIndex;\n      if (index >= 0 && index < waveSources.length) {\n        waveSources[index].x = p.mouseX;\n        waveSources[index].y = p.mouseY;\n      }\n    };\n\n    const handleMouseReleased = () => {\n      if (!p.variables) return;\n\n      p.variables.isDragging = false;\n      p.variables.draggedSourceIndex = -1;\n    };\n\n    p.setup = () => {\n      p.createCanvas(p.windowWidth, p.windowHeight);\n      p.colorMode(p.HSB, 360, 100, 100, 1);\n\n      // optimize for performance based on canvas size\n      waveFieldResolution = Math.max(\n        4,\n        Math.floor(Math.min(p.width, p.height) / 150)\n      );\n\n      initializeWaveSources();\n      calculateWaveField();\n      drawBackground();\n    };\n\n    p.windowResized = () => {\n      p.resizeCanvas(p.windowWidth, p.windowHeight);\n\n      // recalculate field resolution for new canvas size\n      waveFieldResolution = Math.max(\n        4,\n        Math.floor(Math.min(p.width, p.height) / 150)\n      );\n\n      initializeWaveSources();\n      drawBackground();\n    };\n\n    p.draw = () => {\n      checkForMismatchedSize(p);\n      if (!p.variables) return;\n\n      const {\n        numSources,\n        sourceFrequency,\n        sourceAmplitude,\n        colorCycleSpeed,\n        timeScale,\n      } = p.variables;\n\n      time += timeScale;\n      colorOffset += colorCycleSpeed * 360;\n\n      // update wave sources if parameters changed\n      if (waveSources.length !== numSources) {\n        initializeWaveSources();\n      } else {\n        waveSources.forEach((source) => {\n          source.frequency = sourceFrequency;\n          source.amplitude = sourceAmplitude;\n        });\n      }\n\n      calculateWaveField();\n\n      // draw layers\n      drawBackground();\n      drawInterferenceField();\n      drawWaveSources();\n    };\n\n    // mouse interaction handlers\n    p.mousePressed = handleMousePressed;\n    p.mouseDragged = handleMouseDragged;\n    p.mouseReleased = handleMouseReleased;\n  };\n};\n","import React, { Fragment, useCallback } from \"react\";\nimport { useIdle } from \"hooks\";\nimport { useUpdateP5 } from \"hooks/useUpdateP5\";\n\nimport { BottomMenu } from \"components/menu/BottomMenu\";\nimport { MenuWrapper } from \"components/menu/MenuWrapper/MenuWrapper\";\nimport { StandardIconMenu } from \"components/menu/IconMenu/StandardIconMenu/StandardIconMenu\";\nimport { MenuSlider } from \"components/menu/MenuSlider/MenuSlider\";\nimport { MenuCheckbox } from \"components/menu/MenuCheckbox/MenuCheckbox\";\nimport { MenuItemWrapper } from \"components/generic\";\n\nimport { TIME_TO_IDLE } from \"constants/numbers\";\nimport { useGenericReducer } from \"utils/data/state\";\nimport { P5Instance } from \"types/p5\";\n\nimport {\n  initialQuantumHarmonicsVars,\n  QuantumHarmonicsVars,\n} from \"./QuantumHarmonics.variables\";\n\ntype Props = {\n  p5Instance: P5Instance<QuantumHarmonicsVars> | null;\n};\n\nexport const QuantumHarmonicsMenu = ({ p5Instance }: Props) => {\n  const isIdle = useIdle(TIME_TO_IDLE);\n  const { state, set, setState } = useGenericReducer<QuantumHarmonicsVars>(\n    initialQuantumHarmonicsVars\n  );\n\n  useUpdateP5<QuantumHarmonicsVars>(p5Instance, state);\n\n  return (\n    <MenuWrapper setState={setState} p5Instance={p5Instance} show={!isIdle}>\n      <StandardIconMenu initialLoopControl />\n      <BottomMenu>\n        <Fragment>\n          {/* wave controls */}\n          <MenuItemWrapper>\n            <MenuSlider\n              title=\"Wave Sources\"\n              value={state.numSources}\n              setValue={useCallback(\n                (val: number) => set.numSources(val),\n                [set]\n              )}\n              min={1}\n              max={8}\n              step={1}\n            />\n            <MenuSlider\n              title=\"Frequency\"\n              value={state.sourceFrequency}\n              setValue={useCallback(\n                (val: number) => set.sourceFrequency(val),\n                [set]\n              )}\n              min={0.005}\n              max={0.1}\n              step={0.005}\n            />\n            <MenuSlider\n              title=\"Amplitude\"\n              value={state.sourceAmplitude}\n              setValue={useCallback(\n                (val: number) => set.sourceAmplitude(val),\n                [set]\n              )}\n              min={20}\n              max={200}\n              step={5}\n            />\n            <MenuSlider\n              title=\"Phase Offset\"\n              value={state.phaseOffset}\n              setValue={useCallback(\n                (val: number) => set.phaseOffset(val),\n                [set]\n              )}\n              min={0}\n              max={6.28}\n              step={0.1}\n            />\n          </MenuItemWrapper>\n\n          {/* visual stuff */}\n          <MenuItemWrapper>\n            <MenuSlider\n              title=\"Color Cycle Speed\"\n              value={state.colorCycleSpeed}\n              setValue={useCallback(\n                (val: number) => set.colorCycleSpeed(val),\n                [set]\n              )}\n              min={0.001}\n              max={0.1}\n              step={0.001}\n            />\n            <MenuSlider\n              title=\"Wave Decay\"\n              value={state.waveDecay}\n              setValue={useCallback((val: number) => set.waveDecay(val), [set])}\n              min={0.1}\n              max={2}\n              step={0.1}\n            />\n            <MenuSlider\n              title=\"Interference Threshold\"\n              value={state.interferenceThreshold}\n              setValue={useCallback(\n                (val: number) => set.interferenceThreshold(val),\n                [set]\n              )}\n              min={0.1}\n              max={1}\n              step={0.05}\n            />\n            <MenuSlider\n              title=\"Background Alpha\"\n              value={state.backgroundAlpha}\n              setValue={useCallback(\n                (val: number) => set.backgroundAlpha(val),\n                [set]\n              )}\n              min={5}\n              max={100}\n              step={5}\n            />\n          </MenuItemWrapper>\n\n          {/* timing and toggles */}\n          <MenuItemWrapper>\n            <MenuSlider\n              title=\"Time Scale\"\n              value={state.timeScale}\n              setValue={useCallback((val: number) => set.timeScale(val), [set])}\n              min={0.1}\n              max={3}\n              step={0.1}\n            />\n            <MenuSlider\n              title=\"Rotation Speed\"\n              value={state.rotationSpeed}\n              setValue={useCallback(\n                (val: number) => set.rotationSpeed(val),\n                [set]\n              )}\n              min={0}\n              max={0.02}\n              step={0.001}\n            />\n            <MenuCheckbox\n              title=\"Show Wave Sources\"\n              checked={state.showWaveSources}\n              setChecked={useCallback(\n                (val: boolean) => set.showWaveSources(val),\n                [set]\n              )}\n            />\n            <MenuCheckbox\n              title=\"Show Interference Field\"\n              checked={state.showInterferenceField}\n              setChecked={useCallback(\n                (val: boolean) => set.showInterferenceField(val),\n                [set]\n              )}\n            />\n          </MenuItemWrapper>\n        </Fragment>\n      </BottomMenu>\n    </MenuWrapper>\n  );\n};\n","\nimport React, { Fragment } from \"react\";\nimport { useP5 } from \"hooks\";\n\nimport { SketchDiv } from \"components/generic\";\n\nimport { getQuantumHarmonicsSketch } from \"./QuantumHarmonics.sketch\";\nimport { QuantumHarmonicsMenu } from \"./QuantumHarmonics.menu\";\n\nexport const QuantumHarmonics = () => {\n  const sketch = getQuantumHarmonicsSketch();\n  const { ref, p5Instance } = useP5(sketch);\n\n  return (\n    <Fragment>\n      <SketchDiv ref={ref} />\n      <QuantumHarmonicsMenu\n        p5Instance={p5Instance}\n      />\n    </Fragment>\n  );\n};\n\n","\nimport { P5Defaults } from \"types/p5\";\nimport p5 from \"p5\";\n\nexport interface RecursiveDivisionsVars extends P5Defaults {\n  maxDepth: number;\n  minSize: number;\n  splitChance: number;\n  solidFillChance: number;\n  patternChance: number;\n  strokeWeight: number;\n  strokeColor: string;\n  bgColor: string;\n  fillColor: string;\n  accentColor: string;\n  lineSpacing: number;\n  dotSize: number;\n  noiseScale: number;\n  seed: number;\n}\n\nexport const initialRecursiveDivisionsVars: RecursiveDivisionsVars = {\n  maxDepth: 7,\n  minSize: 30,\n  splitChance: 0.85,\n  solidFillChance: 0.4,\n  patternChance: 0.3,\n  strokeWeight: 1.5,\n  seed: 1,\n  strokeColor: \"#8B5A6B\", // dusty rose\n  fillColor: \"#C8A2C8\", // soft lavender\n  bgColor: \"#F5F1EB\", // warm cream\n  accentColor: \"#B8860B\", // muted gold\n  lineSpacing: 8,\n  dotSize: 3,\n  noiseScale: 0.02,\n  refresh: (p: p5) => {\n    p.setup();\n    p.draw();\n  }\n};","import { checkForMismatchedSize } from \"utils/misc/checkForMismatchedSize\";\nimport { initialRecursiveDivisionsVars, RecursiveDivisionsVars } from \"./RecursiveDivisions.variables\";\nimport { P5Instance } from \"types/p5\";\nimport { Rectangle } from \"./RecursiveDivisions.types\";\n\nexport const getRecursiveDivisionsSketch = () => {\n  return (p: P5Instance<RecursiveDivisionsVars>) => {\n    p.variables = initialRecursiveDivisionsVars;\n\n    let rectangles: Rectangle[] = [];\n\n    const subdivide = (x: number, y: number, w: number, h: number, depth: number) => {\n      if (!p.variables) return;\n\n      // stop conditions\n      if (depth >= p.variables.maxDepth || \n          w < p.variables.minSize || \n          h < p.variables.minSize ||\n          p.random() > p.variables.splitChance) {\n        \n        // determine fill type and pattern\n        const shouldFill = p.random() < p.variables.solidFillChance;\n        const shouldPattern = !shouldFill && p.random() < p.variables.patternChance;\n        \n        let pattern: 'lines' | 'dots' | 'noise' | 'grid' | undefined;\n        if (shouldPattern) {\n          const patterns: ('lines' | 'dots' | 'noise' | 'grid')[] = ['lines', 'dots', 'noise', 'grid'];\n          pattern = patterns[Math.floor(p.random() * patterns.length)];\n        }\n        \n        // create final rectangle\n        rectangles.push({\n          x, y, width: w, height: h,\n          filled: shouldFill,\n          pattern: pattern\n        });\n        return;\n      }\n\n      // decide split direction based on aspect ratio with some randomness\n      const aspectRatio = w / h;\n      const splitVertical = aspectRatio > 1.2 || (aspectRatio > 0.8 && p.random() > 0.5);\n      \n      if (splitVertical) {\n        // vertical split - use golden ratio-ish division with variation\n        const goldenRatio = 0.618;\n        const variation = 0.15;\n        const splitRatio = goldenRatio + p.random(-variation, variation);\n        const splitPoint = w * splitRatio;\n        \n        subdivide(x, y, splitPoint, h, depth + 1);\n        subdivide(x + splitPoint, y, w - splitPoint, h, depth + 1);\n      } else {\n        // horizontal split\n        const goldenRatio = 0.618;\n        const variation = 0.15;\n        const splitRatio = goldenRatio + p.random(-variation, variation);\n        const splitPoint = h * splitRatio;\n        \n        subdivide(x, y, w, splitPoint, depth + 1);\n        subdivide(x, y + splitPoint, w, h - splitPoint, depth + 1);\n      }\n    };\n\n    const generate = () => {\n      if (!p.variables) return;\n      \n      p.randomSeed(p.variables.seed);\n      rectangles = [];\n      \n      // start subdivision from canvas bounds with padding\n      const padding = 40;\n      subdivide(\n        padding, \n        padding, \n        p.width - padding * 2, \n        p.height - padding * 2, \n        0\n      );\n    };\n\n    const drawPattern = (rect: Rectangle) => {\n      if (!p.variables || !rect.pattern) return;\n      \n      p.push();\n      // clip to rectangle bounds to prevent overflow\n      const ctx = (p as any).drawingContext;\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(rect.x, rect.y, rect.width, rect.height);\n      ctx.clip();\n      \n      p.translate(rect.x, rect.y);\n      \n      p.stroke(p.variables.accentColor);\n      p.strokeWeight(1);\n      \n      switch (rect.pattern) {\n        case 'lines':\n          // diagonal lines - now properly clipped\n          const lineSpacing = p.variables.lineSpacing;\n          for (let i = -rect.height; i < rect.width + rect.height; i += lineSpacing) {\n            p.line(i, 0, i + rect.height, rect.height);\n          }\n          break;\n          \n        case 'dots':\n          // dot grid\n          const dotSize = p.variables.dotSize;\n          const spacing = p.variables.lineSpacing;\n          p.noStroke();\n          p.fill(p.variables.accentColor);\n          for (let x = spacing; x < rect.width - spacing; x += spacing) {\n            for (let y = spacing; y < rect.height - spacing; y += spacing) {\n              p.circle(x, y, dotSize);\n            }\n          }\n          break;\n          \n        case 'noise':\n          // perlin noise texture\n          p.noStroke();\n          p.fill(p.variables.accentColor);\n          for (let x = 0; x < rect.width; x += 4) {\n            for (let y = 0; y < rect.height; y += 4) {\n              const noiseVal = p.noise((rect.x + x) * p.variables.noiseScale, (rect.y + y) * p.variables.noiseScale);\n              if (noiseVal > 0.6) {\n                p.rect(x, y, 3, 3);\n              }\n            }\n          }\n          break;\n          \n        case 'grid':\n          // small grid pattern\n          const gridSpacing = p.variables.lineSpacing / 2;\n          for (let x = gridSpacing; x < rect.width; x += gridSpacing) {\n            p.line(x, 0, x, rect.height);\n          }\n          for (let y = gridSpacing; y < rect.height; y += gridSpacing) {\n            p.line(0, y, rect.width, y);\n          }\n          break;\n      }\n      \n      ctx.restore();\n      p.pop();\n    };\n\n    const drawRectangles = () => {\n      if (!p.variables) return;\n      \n      p.stroke(p.variables.strokeColor);\n      p.strokeWeight(p.variables.strokeWeight);\n      \n      rectangles.forEach(rect => {\n        if (rect.filled) {\n          p.fill(p.variables!.fillColor);\n          p.rect(rect.x, rect.y, rect.width, rect.height);\n        } else if (rect.pattern) {\n          p.noFill();\n          p.rect(rect.x, rect.y, rect.width, rect.height);\n          drawPattern(rect);\n        } else {\n          p.noFill();\n          p.rect(rect.x, rect.y, rect.width, rect.height);\n        }\n      });\n    };\n\n    p.setup = () => {\n      p.createCanvas(p.windowWidth, p.windowHeight);\n      generate();\n    };\n\n    p.windowResized = () => {\n      p.resizeCanvas(p.windowWidth, p.windowHeight);\n      generate();\n    };\n\n    p.draw = () => {\n      checkForMismatchedSize(p);\n      if (p.variables) {\n        p.background(p.variables.bgColor);\n        generate(); // regenerate on every frame when variables change\n        drawRectangles();\n      }\n    };\n  };\n};","import React, { Fragment, useCallback } from \"react\";\nimport { useIdle } from \"hooks\";\nimport { useUpdateP5 } from \"hooks/useUpdateP5\";\n\nimport { BottomMenu } from \"components/menu/BottomMenu\";\nimport { MenuWrapper } from \"components/menu/MenuWrapper/MenuWrapper\";\nimport { StandardIconMenu } from \"components/menu/IconMenu/StandardIconMenu/StandardIconMenu\";\nimport { MenuSlider } from \"components/menu/MenuSlider/MenuSlider\";\nimport { ColorPicker } from \"components/menu/ColorPicker/ColorPicker\";\nimport { MenuItemWrapper } from \"components/generic\";\n\nimport { TIME_TO_IDLE } from \"constants/numbers\";\nimport { useGenericReducer } from \"utils/data/state\";\nimport { P5Instance } from \"types/p5\";\n\nimport {\n  initialRecursiveDivisionsVars,\n  RecursiveDivisionsVars,\n} from \"./RecursiveDivisions.variables\";\n\ntype Props = {\n  p5Instance: P5Instance<RecursiveDivisionsVars> | null;\n};\n\nexport const RecursiveDivisionsMenu = ({ p5Instance }: Props) => {\n  const isIdle = useIdle(TIME_TO_IDLE);\n  const { state, set, setState } = useGenericReducer<RecursiveDivisionsVars>(\n    initialRecursiveDivisionsVars\n  );\n\n  useUpdateP5<RecursiveDivisionsVars>(p5Instance, state);\n\n  return (\n    <MenuWrapper setState={setState} p5Instance={p5Instance} show={!isIdle}>\n      <StandardIconMenu initialLoopControl />\n      <BottomMenu>\n        <Fragment>\n          <MenuItemWrapper title=\"Structure\">\n            <MenuSlider\n              title=\"Max Depth\"\n              value={state.maxDepth}\n              setValue={useCallback((val: number) => set.maxDepth(val), [set])}\n              min={3}\n              max={12}\n              step={1}\n            />\n\n            <MenuSlider\n              title=\"Min Size\"\n              value={state.minSize}\n              setValue={useCallback((val: number) => set.minSize(val), [set])}\n              min={15}\n              max={80}\n              step={5}\n            />\n\n            <MenuSlider\n              title=\"Split Chance\"\n              value={state.splitChance}\n              setValue={useCallback(\n                (val: number) => set.splitChance(val),\n                [set]\n              )}\n              min={0.3}\n              max={1}\n              step={0.05}\n            />\n          </MenuItemWrapper>\n\n          <MenuItemWrapper title=\"Fill & Patterns\">\n            <MenuSlider\n              title=\"Solid Fill %\"\n              value={state.solidFillChance}\n              setValue={useCallback(\n                (val: number) => set.solidFillChance(val),\n                [set]\n              )}\n              min={0}\n              max={1}\n              step={0.05}\n            />\n\n            <MenuSlider\n              title=\"Pattern %\"\n              value={state.patternChance}\n              setValue={useCallback(\n                (val: number) => set.patternChance(val),\n                [set]\n              )}\n              min={0}\n              max={1}\n              step={0.05}\n            />\n\n            <MenuSlider\n              title=\"Line Spacing\"\n              value={state.lineSpacing}\n              setValue={useCallback(\n                (val: number) => set.lineSpacing(val),\n                [set]\n              )}\n              min={4}\n              max={20}\n              step={1}\n            />\n\n            <MenuSlider\n              title=\"Dot Size\"\n              value={state.dotSize}\n              setValue={useCallback((val: number) => set.dotSize(val), [set])}\n              min={1}\n              max={8}\n              step={0.5}\n            />\n\n            <MenuSlider\n              title=\"Noise Scale\"\n              value={state.noiseScale}\n              setValue={useCallback(\n                (val: number) => set.noiseScale(val),\n                [set]\n              )}\n              min={0.005}\n              max={0.05}\n              step={0.005}\n            />\n          </MenuItemWrapper>\n\n          <MenuItemWrapper title=\"Style\">\n            <MenuSlider\n              title=\"Stroke Weight\"\n              value={state.strokeWeight}\n              setValue={useCallback(\n                (val: number) => set.strokeWeight(val),\n                [set]\n              )}\n              min={0.5}\n              max={4}\n              step={0.5}\n            />\n\n            <ColorPicker\n              title=\"Background\"\n              color={state.bgColor}\n              setColor={useCallback((val: string) => set.bgColor(val), [set])}\n            />\n\n            <ColorPicker\n              title=\"Stroke\"\n              color={state.strokeColor}\n              setColor={useCallback(\n                (val: string) => set.strokeColor(val),\n                [set]\n              )}\n            />\n\n            <ColorPicker\n              title=\"Fill\"\n              color={state.fillColor}\n              setColor={useCallback((val: string) => set.fillColor(val), [set])}\n            />\n\n            <ColorPicker\n              title=\"Pattern\"\n              color={state.accentColor}\n              setColor={useCallback(\n                (val: string) => set.accentColor(val),\n                [set]\n              )}\n            />\n\n            <MenuSlider\n              title=\"Seed\"\n              value={state.seed}\n              setValue={useCallback((val: number) => set.seed(val), [set])}\n              min={1}\n              max={1000}\n              step={1}\n            />\n          </MenuItemWrapper>\n        </Fragment>\n      </BottomMenu>\n    </MenuWrapper>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport { useP5 } from \"hooks\";\n\nimport { SketchDiv } from \"components/generic\";\n\nimport { getRecursiveDivisionsSketch } from \"./RecursiveDivisions.sketch\";\nimport { RecursiveDivisionsMenu } from \"./RecursiveDivisions.menu\";\n\nexport const RecursiveDivisions = () => {\n  const sketch = getRecursiveDivisionsSketch();\n  const { ref, p5Instance } = useP5(sketch);\n\n  return (\n    <Fragment>\n      <SketchDiv ref={ref} />\n      <RecursiveDivisionsMenu p5Instance={p5Instance} />\n    </Fragment>\n  );\n};\n","import { P5Defaults } from \"types/p5\";\nimport p5 from \"p5\";\n\nexport interface MoireLatticesVars extends P5Defaults {\n  lineSpacing: number;\n  lineWidth: number;\n  angleOffsetDeg: number;\n  layerCount: number;\n  rotationSpeedDeg: number;\n  animate: boolean;\n  fgColor: string;\n  bgColor: string;\n}\n\nexport const initialMoireLatticesVars: MoireLatticesVars = {\n  lineSpacing: 12,\n  lineWidth: 1.5,\n  angleOffsetDeg: 6,\n  layerCount: 3,\n  rotationSpeedDeg: 5,\n  animate: true,\n  fgColor: \"#ffffff\",\n  bgColor: \"#0b0b0b\",\n  refresh: (p: p5) => {\n    p.setup();\n    p.draw();\n  },\n};\n","import {\n  initialMoireLatticesVars,\n  MoireLatticesVars,\n} from \"./MoireLattices.variables\";\nimport { checkForMismatchedSize } from \"utils/misc/checkForMismatchedSize\";\nimport { P5Instance } from \"types/p5\";\n\nconst DEG2RAD = Math.PI / 180;\n\nexport const moireLatticesSketch = (p: P5Instance<MoireLatticesVars>) => {\n  p.variables = initialMoireLatticesVars;\n\n  let timeAngle = 0;\n\n  const drawBackground = () => {\n    if (p.variables) {\n      p.background(p.variables.bgColor);\n    }\n  };\n\n  p.setup = () => {\n    p.createCanvas(p.windowWidth, p.windowHeight);\n    p.pixelDensity(1);\n    drawBackground();\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\n    drawBackground();\n  };\n\n  const drawLayer = (angleRad: number) => {\n    if (!p.variables) return;\n    const { lineSpacing, lineWidth, fgColor } = p.variables;\n\n    p.push();\n    p.translate(p.width / 2, p.height / 2);\n    p.rotate(angleRad);\n    p.stroke(fgColor);\n    p.strokeWeight(lineWidth);\n    p.noFill();\n\n    const diag = Math.sqrt(p.width * p.width + p.height * p.height);\n    const half = diag / 2;\n\n    for (let y = -half; y <= half; y += lineSpacing) {\n      p.line(-half, y, half, y);\n    }\n\n    p.pop();\n  };\n\n  p.draw = () => {\n    checkForMismatchedSize(p);\n    if (!p.variables) return;\n\n    const { angleOffsetDeg, layerCount, animate, rotationSpeedDeg } =\n      p.variables;\n\n    if (animate) {\n      timeAngle += rotationSpeedDeg * DEG2RAD * (p.deltaTime / 1000);\n    }\n\n    drawBackground();\n\n    const offsetRad = angleOffsetDeg * DEG2RAD;\n\n    for (let i = 0; i < layerCount; i++) {\n      const a = timeAngle + i * offsetRad;\n      drawLayer(a);\n    }\n  };\n};\n","import { StandardIconMenu } from \"components/menu/IconMenu/StandardIconMenu/StandardIconMenu\";\nimport { formatPixelValue } from \"utils/menu/formatting\";\nimport { MenuWrapper } from \"components/menu/MenuWrapper/MenuWrapper\";\nimport { MenuSlider } from \"components/menu/MenuSlider/MenuSlider\";\nimport { BottomMenu } from \"components/menu/BottomMenu\";\nimport React, { Fragment, useCallback } from \"react\";\nimport { MenuItemWrapper } from \"components/generic\";\nimport { useGenericReducer } from \"utils/data/state\";\nimport { TIME_TO_IDLE } from \"constants/numbers\";\nimport { useUpdateP5 } from \"hooks/useUpdateP5\";\nimport { P5Instance } from \"types/p5\";\nimport { useIdle } from \"hooks\";\nimport { MenuCheckbox } from \"components/menu/MenuCheckbox/MenuCheckbox\";\nimport { ColorPicker } from \"components/menu/ColorPicker/ColorPicker\";\nimport {\n  initialMoireLatticesVars,\n  MoireLatticesVars,\n} from \"./MoireLattices.variables\";\n\ntype Props = {\n  p5Instance: P5Instance<MoireLatticesVars> | null;\n};\n\nconst sliderParams = {\n  min: 1,\n  max: 10,\n  step: 1,\n};\n\nexport const MoireLatticesMenu = ({ p5Instance }: Props) => {\n  const isIdle = useIdle(TIME_TO_IDLE);\n  const { state, set, setState } = useGenericReducer<MoireLatticesVars>(\n    initialMoireLatticesVars\n  );\n\n  useUpdateP5<MoireLatticesVars>(p5Instance, state);\n\n  return (\n    <MenuWrapper setState={setState} p5Instance={p5Instance} show={!isIdle}>\n      <StandardIconMenu initialLoopControl={true} />\n      <BottomMenu>\n        <Fragment>\n          <MenuItemWrapper>\n            <MenuSlider\n              title=\"Line Spacing\"\n              value={state.lineSpacing}\n              labelFormat={formatPixelValue}\n              setValue={useCallback((v: number) => set.lineSpacing(v), [set])}\n              {...sliderParams}\n              min={2}\n              max={100}\n            />\n            <MenuSlider\n              title=\"Line Width\"\n              value={state.lineWidth}\n              labelFormat={formatPixelValue}\n              setValue={useCallback((v: number) => set.lineWidth(v), [set])}\n              {...sliderParams}\n              min={1}\n              max={20}\n              step={0.5}\n            />\n          </MenuItemWrapper>\n          <MenuItemWrapper>\n            <MenuSlider\n              title=\"Angle Offset (deg)\"\n              value={state.angleOffsetDeg}\n              setValue={useCallback(\n                (v: number) => set.angleOffsetDeg(v),\n                [set]\n              )}\n              {...sliderParams}\n              min={0}\n              max={45}\n              step={0.5}\n            />\n            <MenuSlider\n              title=\"Layers\"\n              value={state.layerCount}\n              setValue={useCallback((v: number) => set.layerCount(v), [set])}\n              {...sliderParams}\n              min={1}\n              max={12}\n              step={1}\n            />\n            <MenuSlider\n              title=\"Rotation Speed (deg/s)\"\n              value={state.rotationSpeedDeg}\n              setValue={useCallback(\n                (v: number) => set.rotationSpeedDeg(v),\n                [set]\n              )}\n              {...sliderParams}\n              min={0}\n              max={60}\n              step={0.5}\n            />\n          </MenuItemWrapper>\n          <MenuItemWrapper>\n            <MenuCheckbox\n              title=\"Animate\"\n              checked={state.animate}\n              setChecked={useCallback((v: boolean) => set.animate(v), [set])}\n            />\n          </MenuItemWrapper>\n          <MenuItemWrapper>\n            <ColorPicker\n              title=\"Foreground\"\n              color={state.fgColor}\n              setColor={useCallback((v: string) => set.fgColor(v), [set])}\n              refresh\n            />\n            <ColorPicker\n              title=\"Background\"\n              color={state.bgColor}\n              setColor={useCallback((v: string) => set.bgColor(v), [set])}\n              refresh\n            />\n          </MenuItemWrapper>\n        </Fragment>\n      </BottomMenu>\n    </MenuWrapper>\n  );\n};\n","import { moireLatticesSketch } from \"./MoireLattices.sketch\";\nimport { MoireLatticesMenu } from \"./MoireLattices.menu\";\nimport { SketchDiv } from \"components/generic\";\nimport React, { Fragment } from \"react\";\nimport { useP5 } from \"hooks\";\n\nexport const MoireLattices = () => {\n  const { ref, p5Instance } = useP5(moireLatticesSketch);\n\n  return (\n    <Fragment>\n      <SketchDiv ref={ref} />\n      <MoireLatticesMenu p5Instance={p5Instance} />\n    </Fragment>\n  );\n};\n","import { P5Defaults } from \"types/p5\";\nimport p5 from \"p5\";\nimport { PresetData } from \"components/menu/IconMenu/Presets/Presets.types\";\n\nexport interface KaleidoscopeCausticsVars extends P5Defaults {\n  wedgeCount: number;\n  noiseScale: number; // world-to-noise scale\n  warp: number; // domain warp amplitude\n  sharpness: number; // ridged power\n  timeSpeed: number; // animation speed\n  resolution: number; // radial step in pixels\n  hueBase: number; // base hue\n  hueRange: number; // hue range driven by intensity\n  saturation: number; // saturation in HSB\n  gain: number; // brightness multiplier\n  decay: number; // trail fade (alpha of black rect per frame)\n  bgColor: string;\n}\n\nexport const initialKaleidoscopeCausticsVars: KaleidoscopeCausticsVars = {\n  wedgeCount: 12,\n  noiseScale: 0.0025,\n  warp: 0.8,\n  sharpness: 3,\n  timeSpeed: 0.15,\n  resolution: 2.5,\n  hueBase: 200,\n  hueRange: 120,\n  saturation: 80,\n  gain: 1.2,\n  decay: 0.08,\n  bgColor: \"#000000\",\n  refresh: (p: p5) => {\n    p.setup();\n    p.draw();\n  },\n};\n\n// Fewer, more distinct presets\nconst prismBurst: KaleidoscopeCausticsVars = {\n  ...initialKaleidoscopeCausticsVars,\n  ...{\n    wedgeCount: 18,\n    noiseScale: 0.002,\n    warp: 1.6,\n    sharpness: 2.0,\n    timeSpeed: 0.25,\n    resolution: 2,\n    hueBase: 0,\n    hueRange: 300, // full-spectrum burst\n    saturation: 95,\n    gain: 1.8,\n    decay: 0.045,\n    bgColor: \"#040208\",\n  },\n};\n\nconst deepOcean: KaleidoscopeCausticsVars = {\n  ...initialKaleidoscopeCausticsVars,\n  ...{\n    wedgeCount: 6,\n    noiseScale: 0.0032,\n    warp: 0.9,\n    sharpness: 4.5,\n    timeSpeed: 0.08,\n    resolution: 3.5,\n    hueBase: 190,\n    hueRange: 35, // tight blue-green band\n    saturation: 70,\n    gain: 1.15,\n    decay: 0.12,\n    bgColor: \"#000611\",\n  },\n};\n\nconst emberMirror: KaleidoscopeCausticsVars = {\n  ...initialKaleidoscopeCausticsVars,\n  ...{\n    wedgeCount: 8,\n    noiseScale: 0.0023,\n    warp: 0.7,\n    sharpness: 3.3,\n    timeSpeed: 0.18,\n    resolution: 2.2,\n    hueBase: 18,\n    hueRange: 48, // warm ember tones\n    saturation: 92,\n    gain: 2.0,\n    decay: 0.07,\n    bgColor: \"#0a0400\",\n  },\n};\n\nexport const kaleidoscopeCausticsPresets: PresetData<KaleidoscopeCausticsVars> = [\n  { name: \"Default\", vars: initialKaleidoscopeCausticsVars },\n  { name: \"Prism Burst\", vars: prismBurst },\n  { name: \"Deep Ocean\", vars: deepOcean },\n  { name: \"Ember Mirror\", vars: emberMirror },\n];\n","import { checkForMismatchedSize } from \"utils/misc/checkForMismatchedSize\";\nimport { P5Instance } from \"types/p5\";\nimport {\n  KaleidoscopeCausticsVars,\n  initialKaleidoscopeCausticsVars,\n} from \"./KaleidoscopeCaustics.variables\";\n\n// fbm for soft caustic texture (reduced default octaves for perf)\nconst fbm = (p: any, x: number, y: number, z: number, oct = 4) => {\n  let amp = 0.5,\n    freq = 1,\n    sum = 0;\n  for (let i = 0; i < oct; i++) {\n    sum += amp * p.noise(x * freq, y * freq, z * freq);\n    amp *= 0.5;\n    freq *= 2;\n  }\n  return sum;\n};\n\n// domain-warped ridged noise -> caustic-like\nconst caustic = (\n  p: any,\n  x: number,\n  y: number,\n  t: number,\n  s: number,\n  warp: number,\n  sharp: number\n) => {\n  const wx = x + (fbm(p, x * 1.7, y * 1.7, t, 3) - 0.5) * warp;\n  const wy = y + (fbm(p, x * 1.3 + 100, y * 1.3 + 100, t + 3.1, 3) - 0.5) * warp;\n  const n = fbm(p, wx * s, wy * s, t * 0.6, 4);\n  const ridged = Math.pow(1 - Math.abs(2 * n - 1), sharp);\n  return ridged;\n};\n\n/**\n * kaleidoscope caustics: domain-warped noise mirrored into rotating wedges with soft glow trails\n */\nexport const kaleidoscopeCausticsSketch = (\n  p: P5Instance<KaleidoscopeCausticsVars>\n) => {\n  p.variables = initialKaleidoscopeCausticsVars;\n\n  let t = 0;\n\n  // Precomputed delta table to avoid per-point trig\n  const MAX_SEG_TABLE = 96;\n  let cachedWedgeAngle = -1;\n  const cosD: number[] = new Array(MAX_SEG_TABLE);\n  const sinD: number[] = new Array(MAX_SEG_TABLE);\n  const ensureDeltaTable = (wedgeAngle: number) => {\n    if (wedgeAngle === cachedWedgeAngle) return;\n    cachedWedgeAngle = wedgeAngle;\n    for (let i = 0; i < MAX_SEG_TABLE; i++) {\n      const u = i / (MAX_SEG_TABLE - 1); // 0..1\n      const delta = (u - 0.5) * wedgeAngle;\n      cosD[i] = Math.cos(delta);\n      sinD[i] = Math.sin(delta);\n    }\n  };\n\n  const drawBackground = () => {\n    if (!p.variables) return;\n    const a = p.variables.decay;\n    if (a <= 0) return;\n    p.noStroke();\n    p.fill(0, 0, 0, a);\n    p.rect(0, 0, p.width, p.height);\n  };\n\n  p.setup = () => {\n    p.createCanvas(p.windowWidth, p.windowHeight);\n    p.pixelDensity(1);\n    p.colorMode(p.HSB, 360, 100, 100, 1);\n    p.noiseDetail(4, 0.5);\n    p.background(initialKaleidoscopeCausticsVars.bgColor);\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\n    p.background(p.variables?.bgColor || \"#000\");\n  };\n\n  const sampleTextureHSB = (x: number, y: number) => {\n    if (!p.variables) return { h: 0, s: 0, b: 0 };\n    const { noiseScale, warp, sharpness, hueBase, hueRange, saturation, gain } =\n      p.variables;\n    const n = caustic(p, x, y, t, noiseScale, warp, sharpness);\n    const h = (hueBase + hueRange * n) % 360;\n    const b = Math.min(100, 100 * n * gain);\n    return { h, s: saturation, b };\n  };\n\n  p.draw = () => {\n    checkForMismatchedSize(p);\n    if (!p.variables) return;\n\n    const { wedgeCount, resolution, timeSpeed } = p.variables;\n    t += timeSpeed * (p.deltaTime / 1000);\n\n    // subtle trail fade\n    drawBackground();\n\n    const cx = p.width / 2;\n    const cy = p.height / 2;\n    const maxR = Math.hypot(cx, cy);\n    const wedgeAngle = (Math.PI * 2) / wedgeCount;\n    ensureDeltaTable(wedgeAngle);\n\n    p.strokeWeight(1);\n    p.noFill();\n\n    // Texture sampling stride (1 = every point, 2 = every other)\n    const SAMPLE_STRIDE = 2;\n    const MAX_SEGMENTS = 64; // cap segments per arc for perf\n\n    for (let r = 0; r < maxR; r += resolution) {\n      // Segment count grows with radius but capped\n      const target = Math.floor((r / maxR) * MAX_SEGMENTS);\n      const arcPoints = 2 + Math.max(6, target);\n      const baseTheta = r * 0.002 + t * 0.5; // slow swirl\n\n      const cos0 = Math.cos(baseTheta);\n      const sin0 = Math.sin(baseTheta);\n\n      // reuse same points across all wedges\n      const ptsX: number[] = new Array(arcPoints);\n      const ptsY: number[] = new Array(arcPoints);\n      const H: number[] = new Array(arcPoints);\n      const S: number[] = new Array(arcPoints);\n      const B: number[] = new Array(arcPoints);\n\n      const step = (MAX_SEG_TABLE - 1) / (arcPoints - 1);\n      for (let i = 0; i < arcPoints; i++) {\n        const idx = Math.round(i * step);\n        const cD = cosD[idx];\n        const sD = sinD[idx];\n        const x = r * (cos0 * cD - sin0 * sD);\n        const y = r * (sin0 * cD + cos0 * sD);\n        ptsX[i] = x;\n        ptsY[i] = y;\n        if (i % SAMPLE_STRIDE === 0) {\n          const tex = sampleTextureHSB(x * 0.5, y * 0.5);\n          H[i] = tex.h;\n          S[i] = tex.s;\n          B[i] = tex.b;\n        } else {\n          // reuse last sample to cut caustic calls\n          H[i] = H[i - 1];\n          S[i] = S[i - 1];\n          B[i] = B[i - 1];\n        }\n      }\n\n      for (let w = 0; w < wedgeCount; w++) {\n        const rot = w * wedgeAngle;\n        const flip = w % 2 === 1 ? -1 : 1;\n        p.push();\n        p.translate(cx, cy);\n        p.rotate(rot);\n        p.scale(1, flip);\n        for (let i = 0; i < arcPoints - 1; i++) {\n          p.stroke(H[i], S[i], B[i], 0.35);\n          p.line(ptsX[i], ptsY[i], ptsX[i + 1], ptsY[i + 1]);\n        }\n        p.pop();\n      }\n    }\n  };\n};\n","import { StandardIconMenu } from \"components/menu/IconMenu/StandardIconMenu/StandardIconMenu\";\nimport { MenuWrapper } from \"components/menu/MenuWrapper/MenuWrapper\";\nimport { MenuSlider } from \"components/menu/MenuSlider/MenuSlider\";\nimport { BottomMenu } from \"components/menu/BottomMenu\";\nimport React, { Fragment, useMemo } from \"react\";\nimport { MenuItemWrapper } from \"components/generic\";\nimport { useGenericReducer } from \"utils/data/state\";\nimport { TIME_TO_IDLE } from \"constants/numbers\";\nimport { useUpdateP5 } from \"hooks/useUpdateP5\";\nimport { P5Instance } from \"types/p5\";\nimport { useIdle } from \"hooks\";\nimport {\n  KaleidoscopeCausticsVars,\n  initialKaleidoscopeCausticsVars,\n  kaleidoscopeCausticsPresets,\n} from \"./KaleidoscopeCaustics.variables\";\n\ntype Props = { p5Instance: P5Instance<KaleidoscopeCausticsVars> | null };\n\ntype NumberKeys<T> = { [K in keyof T]-?: T[K] extends number ? K : never }[keyof T];\ntype NumKey = NumberKeys<KaleidoscopeCausticsVars>;\n\ntype SliderDef = { title: string; key: NumKey; min: number; max: number; step?: number };\nconst mkSlider = (title: string, key: NumKey, min: number, max: number, step = 1): SliderDef => ({\n  title, key, min, max, step\n});\n\nconst sliders: SliderDef[] = [\n  mkSlider(\"Wedges\", \"wedgeCount\", 3, 24, 1),\n  mkSlider(\"Noise Scale\", \"noiseScale\", 0.0005, 0.01, 0.0001),\n  mkSlider(\"Warp\", \"warp\", 0, 2, 0.05),\n  mkSlider(\"Sharpness\", \"sharpness\", 0.5, 6, 0.1),\n  mkSlider(\"Time Speed\", \"timeSpeed\", 0, 0.6, 0.01),\n  mkSlider(\"Resolution\", \"resolution\", 1, 8, 0.5),\n  mkSlider(\"Hue Base\", \"hueBase\", 0, 360, 1),\n  mkSlider(\"Hue Range\", \"hueRange\", 0, 360, 1),\n  mkSlider(\"Saturation\", \"saturation\", 0, 100, 1),\n  mkSlider(\"Gain\", \"gain\", 0.2, 3, 0.05),\n  mkSlider(\"Trail Decay\", \"decay\", 0, 0.3, 0.005),\n];\n\nexport const KaleidoscopeCausticsMenu = ({ p5Instance }: Props) => {\n  const isIdle = useIdle(TIME_TO_IDLE);\n  const { state, set, setState } = useGenericReducer<KaleidoscopeCausticsVars>(initialKaleidoscopeCausticsVars);\n  useUpdateP5<KaleidoscopeCausticsVars>(p5Instance, state);\n\n  // Precompute stable handlers and values\n  const handlers = useMemo(() => {\n    const h = {} as Record<NumKey, (v: number) => void>;\n    sliders.forEach((s) => {\n      h[s.key] = (v: number) => (set[s.key] as (arg: number) => void)(v);\n    });\n    return h;\n  }, [set]);\n\n  return (\n    <MenuWrapper setState={setState} p5Instance={p5Instance} show={!isIdle}>\n      <StandardIconMenu initialLoopControl presets={kaleidoscopeCausticsPresets} />\n      <BottomMenu>\n        <Fragment>\n          <MenuItemWrapper>\n            {sliders.slice(0, 4).map((s) => (\n              <MenuSlider\n                key={s.title}\n                title={s.title}\n                value={state[s.key] as number}\n                setValue={handlers[s.key]}\n                min={s.min}\n                max={s.max}\n                step={s.step}\n              />\n            ))}\n          </MenuItemWrapper>\n          <MenuItemWrapper>\n            {sliders.slice(4, 8).map((s) => (\n              <MenuSlider\n                key={s.title}\n                title={s.title}\n                value={state[s.key] as number}\n                setValue={handlers[s.key]}\n                min={s.min}\n                max={s.max}\n                step={s.step}\n              />\n            ))}\n          </MenuItemWrapper>\n          <MenuItemWrapper>\n            {sliders.slice(8).map((s) => (\n              <MenuSlider\n                key={s.title}\n                title={s.title}\n                value={state[s.key] as number}\n                setValue={handlers[s.key]}\n                min={s.min}\n                max={s.max}\n                step={s.step}\n              />\n            ))}\n          </MenuItemWrapper>\n        </Fragment>\n      </BottomMenu>\n    </MenuWrapper>\n  );\n};\n","import { kaleidoscopeCausticsSketch } from \"./KaleidoscopeCaustics.sketch\";\nimport { KaleidoscopeCausticsMenu } from \"./KaleidoscopeCaustics.menu\";\nimport { SketchDiv } from \"components/generic\";\nimport React, { Fragment } from \"react\";\nimport { useP5 } from \"hooks\";\n\nexport const KaleidoscopeCaustics = () => {\n  const { ref, p5Instance } = useP5(kaleidoscopeCausticsSketch);\n  return (\n    <Fragment>\n      <SketchDiv ref={ref} />\n      <KaleidoscopeCausticsMenu p5Instance={p5Instance} />\n    </Fragment>\n  );\n};\n","import React from \"react\";\nimport {\n  PsychedelicSpiral,\n  PerlinField,\n  RandomWalk,\n  Epicycloid,\n  PerlinFlow,\n  Cityscape,\n  QuantumHarmonics,\n  RecursiveDivisions,\n  MoireLattices,\n  KaleidoscopeCaustics,\n} from \"sketches\";\n\nexport type Tags =\n  | \"Noise\"\n  | \"Geometry\"\n  | \"Particles\"\n  | \"Animation\"\n  | \"Interactive\"\n  | \"Mathematical\"\n  | \"Organic\"\n  | \"Simulation\"\n  | \"Fractals\";\n\nexport type SketchItem = {\n  name: string;\n  slug: string;\n  component: JSX.Element;\n  description: string;\n  tags?: Array<Tags>;\n};\n\nexport const sketches: Array<SketchItem> = [\n  {\n    name: \"Multiplicative Epicycloid\",\n    slug: \"multiplicative-epicycloid\",\n    component: <Epicycloid />,\n    description:\n      \"Mathematical curves generated by circles rolling around other circles.\",\n    tags: [\"Geometry\", \"Mathematical\", \"Animation\"],\n  },\n  {\n    name: \"Perlin Field\",\n    slug: \"perlin-field\",\n    component: <PerlinField />,\n    description:\n      \"Perlin noise, the algorithm behind natural-looking randomness.\",\n    tags: [\"Noise\", \"Interactive\"],\n  },\n  {\n    name: \"Perlin Flow\",\n    slug: \"perlin-flow\",\n    component: <PerlinFlow />,\n    description:\n      \"Particles flowing through a Perlin noise field, looks pretty cool.\",\n    tags: [\"Noise\", \"Particles\", \"Simulation\"],\n  },\n  {\n    name: \"Random Walk\",\n    slug: \"random-walk\",\n    component: <RandomWalk />,\n    description: \"Particles move randomly step by step, that's it.\",\n    tags: [\"Simulation\", \"Organic\"],\n  },\n  {\n    name: \"Cityscape\",\n    slug: \"cityscape\",\n    component: <Cityscape />,\n    description:\n      \"Procedurally generated city skylines with adjustable building parameters.\",\n    tags: [\"Geometry\", \"Interactive\", \"Simulation\"],\n  },\n  {\n    name: \"Psychedelic Spiral\",\n    slug: \"psychedelic-spiral\",\n    component: <PsychedelicSpiral />,\n    description: \"Rotating spiral with color-shifting particles\",\n    tags: [\"Noise\", \"Particles\", \"Animation\", \"Fractals\"],\n  },\n  {\n    name: \"Quantum Harmonics\",\n    slug: \"quantum-harmonics\",\n    component: <QuantumHarmonics />,\n    description: \"Wave interference patterns from draggable sources.\",\n    tags: [\"Mathematical\", \"Animation\", \"Interactive\"],\n  },\n  {\n    name: \"Recursive Divisions\",\n    slug: \"recursive-divisions\",\n    component: <RecursiveDivisions />,\n    description: \"Recursive geometric subdivision.\",\n    tags: [\"Geometry\", \"Mathematical\"],\n  },\n  {\n    name: \"Moiré Lattices\",\n    slug: \"moire-lattices\",\n    component: <MoireLattices />,\n    description: \"Layered line lattices with slight angular offsets.\",\n    tags: [\"Geometry\", \"Animation\"],\n  },\n  {\n    name: \"Kaleidoscope Caustics\",\n    slug: \"kaleidoscope-caustics\",\n    component: <KaleidoscopeCaustics />,\n    description:\n      \"Domain-warped noise caustics mirrored into kaleidoscopic wedges.\",\n    tags: [\"Noise\", \"Animation\", \"Fractals\", \"Organic\"],\n  },\n];\n","import { Link } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport {\n  CardContent,\n  Typography,\n  CardMedia,\n  styled,\n  Card,\n  Grid,\n  Chip,\n  Box,\n} from \"@material-ui/core\";\n\nimport { sketches } from \"constants/sketches\";\n\nconst SketchCard = styled(Card)(({ theme }) => ({\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n  cursor: \"pointer\",\n  \"&:hover\": {\n    transform: \"translateY(-4px)\",\n    boxShadow: theme.shadows[12],\n  },\n}));\n\nconst ThumbnailFallback = styled(Box)(({ theme }) => ({\n  height: 200,\n  background: `linear-gradient(135deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  color: theme.palette.common.white,\n  fontSize: \"2rem\",\n  fontWeight: \"bold\",\n}));\n\nconst TagChip = styled(Chip)(({ theme }) => ({\n  margin: theme.spacing(0.25),\n  fontSize: \"0.75rem\",\n}));\n\n// Component for handling thumbnail with fallback\nconst SketchThumbnail = ({ sketch }: { sketch: any }) => {\n  const [imageError, setImageError] = useState(false);\n  const thumbnailPath = `${process.env.PUBLIC_URL}/thumbnails/${sketch.slug}.png`;\n\n  if (imageError) {\n    return (\n      <ThumbnailFallback>\n        {sketch.name\n          .split(\" \")\n          .map((word: string) => word[0])\n          .join(\"\")}\n      </ThumbnailFallback>\n    );\n  }\n\n  return (\n    <CardMedia\n      component=\"img\"\n      height=\"200\"\n      image={thumbnailPath}\n      title={sketch.name}\n      onError={() => setImageError(true)}\n      style={{ objectFit: \"cover\" }}\n    />\n  );\n};\n\n// Enhanced home page with grid layout\nexport const Home = () => {\n  return (\n    <Box\n      width=\"100%\"\n      height=\"100vh\"\n      padding={3}\n      style={{\n        overflowY: \"auto\",\n      }}\n    >\n      <Box marginBottom={3}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Generative Art Gallery\n        </Typography>\n      </Box>\n\n      <Grid container spacing={3}>\n        {sketches.map((sketch, index) => (\n          <Grid item xs={12} sm={6} md={4} key={index}>\n            <Link to={sketch.slug} style={{ textDecoration: \"none\" }}>\n              <SketchCard>\n                <SketchThumbnail sketch={sketch} />\n\n                <CardContent style={{ flexGrow: 1 }}>\n                  <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n                    {sketch.name}\n                  </Typography>\n\n                  <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\n                    {sketch.description}\n                  </Typography>\n\n                  {sketch.tags && (\n                    <Box>\n                      {sketch.tags.map((tag, tagIndex) => (\n                        <TagChip\n                          key={tagIndex}\n                          label={tag}\n                          size=\"small\"\n                          color=\"primary\"\n                          variant=\"outlined\"\n                        />\n                      ))}\n                    </Box>\n                  )}\n                </CardContent>\n              </SketchCard>\n            </Link>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { TRANSITION_DELAY } from \"constants/numbers\";\nimport { sketches } from \"constants/sketches\";\nimport { Home } from \"components/common/Home\";\nimport { Fade } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport const Routes = () => (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Switch>\n      {/* Home */}\n      <Route exact path=\"/\">\n        <Fade in timeout={{ enter: TRANSITION_DELAY }}>\n          <div>\n            <Home />\n          </div>\n        </Fade>\n      </Route>\n\n      {/* Sketches */}\n      {sketches.map((sketch, index) => (\n        <Route key={index} path={`/${sketch.slug}`}>\n          <Fade in timeout={{ enter: TRANSITION_DELAY }}>\n            <div>{sketch.component}</div>\n          </Fade>\n        </Route>\n      ))}\n    </Switch>\n  </BrowserRouter>\n);\n","import { Routes } from \"Routes\";\nimport React from \"react\";\n\nexport const App = () => {\n  //temp\n  return <Routes />;\n};\n","import { ThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { theme } from \"constants/theme\";\nimport * as ReactDOMClient from \"react-dom/client\";\nimport { App } from \"./App\";\nimport React from \"react\";\n\nconst domNode = document.getElementById(\"root\") as Element;\nconst root = ReactDOMClient.createRoot(domNode);\nroot.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}